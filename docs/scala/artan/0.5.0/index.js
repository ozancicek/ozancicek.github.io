Index.PACKAGES = {"com.github.ozancicek.artan.ml.state" : [{"name" : "com.github.ozancicek.artan.ml.state.BernoulliMixtureOutput", "shortDescription" : "Case class representing the output of a bernoulli mixture estimation", "members_case class" : [{"member" : "com.github.ozancicek.artan.ml.state.BernoulliMixtureOutput#<init>", "error" : "unsupported entity"}, {"label" : "loglikelihood", "tail" : ": Double", "member" : "com.github.ozancicek.artan.ml.state.BernoulliMixtureOutput.loglikelihood", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/BernoulliMixtureOutput.html#loglikelihood:Double", "kind" : "val"}, {"label" : "eventTime", "tail" : ": Option[Timestamp]", "member" : "com.github.ozancicek.artan.ml.state.BernoulliMixtureOutput.eventTime", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/BernoulliMixtureOutput.html#eventTime:Option[java.sql.Timestamp]", "kind" : "val"}, {"label" : "mixtureModel", "tail" : ": BernoulliMixtureDistribution", "member" : "com.github.ozancicek.artan.ml.state.BernoulliMixtureOutput.mixtureModel", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/BernoulliMixtureOutput.html#mixtureModel:com.github.ozancicek.artan.ml.stats.BernoulliMixtureDistribution", "kind" : "val"}, {"label" : "stateIndex", "tail" : ": Long", "member" : "com.github.ozancicek.artan.ml.state.BernoulliMixtureOutput.stateIndex", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/BernoulliMixtureOutput.html#stateIndex:Long", "kind" : "val"}, {"label" : "stateKey", "tail" : ": String", "member" : "com.github.ozancicek.artan.ml.state.BernoulliMixtureOutput.stateKey", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/BernoulliMixtureOutput.html#stateKey:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/BernoulliMixtureOutput.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/BernoulliMixtureOutput.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/BernoulliMixtureOutput.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/BernoulliMixtureOutput.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/BernoulliMixtureOutput.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/BernoulliMixtureOutput.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/BernoulliMixtureOutput.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/BernoulliMixtureOutput.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/BernoulliMixtureOutput.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/BernoulliMixtureOutput.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/BernoulliMixtureOutput.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/BernoulliMixtureOutput.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/BernoulliMixtureOutput.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/BernoulliMixtureOutput.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/BernoulliMixtureOutput.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/BernoulliMixtureOutput.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/ozancicek\/artan\/ml\/state\/BernoulliMixtureOutput.html", "kind" : "case class"}, {"name" : "com.github.ozancicek.artan.ml.state.GaussianMixtureOutput", "shortDescription" : "Case class representing the output of a gaussian mixture estimation", "members_case class" : [{"member" : "com.github.ozancicek.artan.ml.state.GaussianMixtureOutput#<init>", "error" : "unsupported entity"}, {"label" : "loglikelihood", "tail" : ": Double", "member" : "com.github.ozancicek.artan.ml.state.GaussianMixtureOutput.loglikelihood", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/GaussianMixtureOutput.html#loglikelihood:Double", "kind" : "val"}, {"label" : "eventTime", "tail" : ": Option[Timestamp]", "member" : "com.github.ozancicek.artan.ml.state.GaussianMixtureOutput.eventTime", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/GaussianMixtureOutput.html#eventTime:Option[java.sql.Timestamp]", "kind" : "val"}, {"label" : "mixtureModel", "tail" : ": GaussianMixtureDistribution", "member" : "com.github.ozancicek.artan.ml.state.GaussianMixtureOutput.mixtureModel", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/GaussianMixtureOutput.html#mixtureModel:com.github.ozancicek.artan.ml.stats.GaussianMixtureDistribution", "kind" : "val"}, {"label" : "stateIndex", "tail" : ": Long", "member" : "com.github.ozancicek.artan.ml.state.GaussianMixtureOutput.stateIndex", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/GaussianMixtureOutput.html#stateIndex:Long", "kind" : "val"}, {"label" : "stateKey", "tail" : ": String", "member" : "com.github.ozancicek.artan.ml.state.GaussianMixtureOutput.stateKey", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/GaussianMixtureOutput.html#stateKey:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/GaussianMixtureOutput.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/GaussianMixtureOutput.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/GaussianMixtureOutput.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/GaussianMixtureOutput.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/GaussianMixtureOutput.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/GaussianMixtureOutput.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/GaussianMixtureOutput.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/GaussianMixtureOutput.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/GaussianMixtureOutput.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/GaussianMixtureOutput.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/GaussianMixtureOutput.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/GaussianMixtureOutput.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/GaussianMixtureOutput.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/GaussianMixtureOutput.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/GaussianMixtureOutput.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/GaussianMixtureOutput.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/ozancicek\/artan\/ml\/state\/GaussianMixtureOutput.html", "kind" : "case class"}, {"name" : "com.github.ozancicek.artan.ml.state.KalmanOutput", "shortDescription" : "Case class for representing the output state of a kalman filter.", "members_case class" : [{"member" : "com.github.ozancicek.artan.ml.state.KalmanOutput#<init>", "error" : "unsupported entity"}, {"label" : "slidingLikelihood", "tail" : ": Option[Double]", "member" : "com.github.ozancicek.artan.ml.state.KalmanOutput.slidingLikelihood", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/KalmanOutput.html#slidingLikelihood:Option[Double]", "kind" : "val"}, {"label" : "measurementModel", "tail" : ": Option[Matrix]", "member" : "com.github.ozancicek.artan.ml.state.KalmanOutput.measurementModel", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/KalmanOutput.html#measurementModel:Option[org.apache.spark.ml.linalg.Matrix]", "kind" : "val"}, {"label" : "measurement", "tail" : ": Option[Vector]", "member" : "com.github.ozancicek.artan.ml.state.KalmanOutput.measurement", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/KalmanOutput.html#measurement:Option[org.apache.spark.ml.linalg.Vector]", "kind" : "val"}, {"label" : "processNoise", "tail" : ": Option[Matrix]", "member" : "com.github.ozancicek.artan.ml.state.KalmanOutput.processNoise", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/KalmanOutput.html#processNoise:Option[org.apache.spark.ml.linalg.Matrix]", "kind" : "val"}, {"label" : "processModel", "tail" : ": Option[Matrix]", "member" : "com.github.ozancicek.artan.ml.state.KalmanOutput.processModel", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/KalmanOutput.html#processModel:Option[org.apache.spark.ml.linalg.Matrix]", "kind" : "val"}, {"label" : "eventTime", "tail" : ": Option[Timestamp]", "member" : "com.github.ozancicek.artan.ml.state.KalmanOutput.eventTime", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/KalmanOutput.html#eventTime:Option[java.sql.Timestamp]", "kind" : "val"}, {"label" : "residual", "tail" : ": Option[MultivariateGaussianDistribution]", "member" : "com.github.ozancicek.artan.ml.state.KalmanOutput.residual", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/KalmanOutput.html#residual:Option[com.github.ozancicek.artan.ml.stats.MultivariateGaussianDistribution]", "kind" : "val"}, {"label" : "state", "tail" : ": MultivariateGaussianDistribution", "member" : "com.github.ozancicek.artan.ml.state.KalmanOutput.state", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/KalmanOutput.html#state:com.github.ozancicek.artan.ml.stats.MultivariateGaussianDistribution", "kind" : "val"}, {"label" : "stepIndex", "tail" : ": Long", "member" : "com.github.ozancicek.artan.ml.state.KalmanOutput.stepIndex", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/KalmanOutput.html#stepIndex:Long", "kind" : "val"}, {"label" : "stateIndex", "tail" : ": Long", "member" : "com.github.ozancicek.artan.ml.state.KalmanOutput.stateIndex", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/KalmanOutput.html#stateIndex:Long", "kind" : "val"}, {"label" : "stateKey", "tail" : ": String", "member" : "com.github.ozancicek.artan.ml.state.KalmanOutput.stateKey", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/KalmanOutput.html#stateKey:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/KalmanOutput.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/KalmanOutput.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/KalmanOutput.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/KalmanOutput.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/KalmanOutput.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/KalmanOutput.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/KalmanOutput.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/KalmanOutput.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/KalmanOutput.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/KalmanOutput.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/KalmanOutput.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/KalmanOutput.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/KalmanOutput.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/KalmanOutput.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/KalmanOutput.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/KalmanOutput.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/ozancicek\/artan\/ml\/state\/KalmanOutput.html", "kind" : "case class"}, {"name" : "com.github.ozancicek.artan.ml.state.LMSOutput", "shortDescription" : "Case class for the output state of a least mean squares filter.", "members_case class" : [{"member" : "com.github.ozancicek.artan.ml.state.LMSOutput#<init>", "error" : "unsupported entity"}, {"label" : "eventTime", "tail" : ": Option[Timestamp]", "member" : "com.github.ozancicek.artan.ml.state.LMSOutput.eventTime", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/LMSOutput.html#eventTime:Option[java.sql.Timestamp]", "kind" : "val"}, {"label" : "state", "tail" : ": Vector", "member" : "com.github.ozancicek.artan.ml.state.LMSOutput.state", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/LMSOutput.html#state:org.apache.spark.ml.linalg.Vector", "kind" : "val"}, {"label" : "stateIndex", "tail" : ": Long", "member" : "com.github.ozancicek.artan.ml.state.LMSOutput.stateIndex", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/LMSOutput.html#stateIndex:Long", "kind" : "val"}, {"label" : "stateKey", "tail" : ": String", "member" : "com.github.ozancicek.artan.ml.state.LMSOutput.stateKey", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/LMSOutput.html#stateKey:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/LMSOutput.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/LMSOutput.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/LMSOutput.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/LMSOutput.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/LMSOutput.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/LMSOutput.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/LMSOutput.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/LMSOutput.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/LMSOutput.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/LMSOutput.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/LMSOutput.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/LMSOutput.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/LMSOutput.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/LMSOutput.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/LMSOutput.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/LMSOutput.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/ozancicek\/artan\/ml\/state\/LMSOutput.html", "kind" : "case class"}, {"name" : "com.github.ozancicek.artan.ml.state.PoissonMixtureOutput", "shortDescription" : "Case class representing the output of a poisson mixture estimation", "members_case class" : [{"member" : "com.github.ozancicek.artan.ml.state.PoissonMixtureOutput#<init>", "error" : "unsupported entity"}, {"label" : "loglikelihood", "tail" : ": Double", "member" : "com.github.ozancicek.artan.ml.state.PoissonMixtureOutput.loglikelihood", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/PoissonMixtureOutput.html#loglikelihood:Double", "kind" : "val"}, {"label" : "eventTime", "tail" : ": Option[Timestamp]", "member" : "com.github.ozancicek.artan.ml.state.PoissonMixtureOutput.eventTime", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/PoissonMixtureOutput.html#eventTime:Option[java.sql.Timestamp]", "kind" : "val"}, {"label" : "mixtureModel", "tail" : ": PoissonMixtureDistribution", "member" : "com.github.ozancicek.artan.ml.state.PoissonMixtureOutput.mixtureModel", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/PoissonMixtureOutput.html#mixtureModel:com.github.ozancicek.artan.ml.stats.PoissonMixtureDistribution", "kind" : "val"}, {"label" : "stateIndex", "tail" : ": Long", "member" : "com.github.ozancicek.artan.ml.state.PoissonMixtureOutput.stateIndex", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/PoissonMixtureOutput.html#stateIndex:Long", "kind" : "val"}, {"label" : "stateKey", "tail" : ": String", "member" : "com.github.ozancicek.artan.ml.state.PoissonMixtureOutput.stateKey", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/PoissonMixtureOutput.html#stateKey:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/PoissonMixtureOutput.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/PoissonMixtureOutput.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/PoissonMixtureOutput.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/PoissonMixtureOutput.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/PoissonMixtureOutput.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/PoissonMixtureOutput.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/PoissonMixtureOutput.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/PoissonMixtureOutput.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/PoissonMixtureOutput.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/PoissonMixtureOutput.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/PoissonMixtureOutput.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/PoissonMixtureOutput.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/PoissonMixtureOutput.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/PoissonMixtureOutput.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/PoissonMixtureOutput.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/PoissonMixtureOutput.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/ozancicek\/artan\/ml\/state\/PoissonMixtureOutput.html", "kind" : "case class"}, {"name" : "com.github.ozancicek.artan.ml.state.RLSOutput", "shortDescription" : "Case class representing the output state of an RLS filter.", "members_case class" : [{"member" : "com.github.ozancicek.artan.ml.state.RLSOutput#<init>", "error" : "unsupported entity"}, {"label" : "eventTime", "tail" : ": Option[Timestamp]", "member" : "com.github.ozancicek.artan.ml.state.RLSOutput.eventTime", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/RLSOutput.html#eventTime:Option[java.sql.Timestamp]", "kind" : "val"}, {"label" : "state", "tail" : ": MultivariateGaussianDistribution", "member" : "com.github.ozancicek.artan.ml.state.RLSOutput.state", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/RLSOutput.html#state:com.github.ozancicek.artan.ml.stats.MultivariateGaussianDistribution", "kind" : "val"}, {"label" : "stateIndex", "tail" : ": Long", "member" : "com.github.ozancicek.artan.ml.state.RLSOutput.stateIndex", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/RLSOutput.html#stateIndex:Long", "kind" : "val"}, {"label" : "stateKey", "tail" : ": String", "member" : "com.github.ozancicek.artan.ml.state.RLSOutput.stateKey", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/RLSOutput.html#stateKey:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/RLSOutput.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/RLSOutput.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/RLSOutput.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/RLSOutput.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/RLSOutput.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/RLSOutput.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/RLSOutput.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/RLSOutput.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/RLSOutput.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/RLSOutput.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/RLSOutput.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/RLSOutput.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/RLSOutput.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/RLSOutput.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/RLSOutput.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/RLSOutput.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/ozancicek\/artan\/ml\/state\/RLSOutput.html", "kind" : "case class"}, {"name" : "com.github.ozancicek.artan.ml.state.RTSOutput", "shortDescription" : "Case class representing output state of kalman RTS smoother", "members_case class" : [{"member" : "com.github.ozancicek.artan.ml.state.RTSOutput#<init>", "error" : "unsupported entity"}, {"label" : "eventTime", "tail" : ": Option[Timestamp]", "member" : "com.github.ozancicek.artan.ml.state.RTSOutput.eventTime", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/RTSOutput.html#eventTime:Option[java.sql.Timestamp]", "kind" : "val"}, {"label" : "rtsGain", "tail" : ": Matrix", "member" : "com.github.ozancicek.artan.ml.state.RTSOutput.rtsGain", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/RTSOutput.html#rtsGain:org.apache.spark.ml.linalg.Matrix", "kind" : "val"}, {"label" : "state", "tail" : ": MultivariateGaussianDistribution", "member" : "com.github.ozancicek.artan.ml.state.RTSOutput.state", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/RTSOutput.html#state:com.github.ozancicek.artan.ml.stats.MultivariateGaussianDistribution", "kind" : "val"}, {"label" : "stepIndex", "tail" : ": Long", "member" : "com.github.ozancicek.artan.ml.state.RTSOutput.stepIndex", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/RTSOutput.html#stepIndex:Long", "kind" : "val"}, {"label" : "stateIndex", "tail" : ": Long", "member" : "com.github.ozancicek.artan.ml.state.RTSOutput.stateIndex", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/RTSOutput.html#stateIndex:Long", "kind" : "val"}, {"label" : "stateKey", "tail" : ": String", "member" : "com.github.ozancicek.artan.ml.state.RTSOutput.stateKey", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/RTSOutput.html#stateKey:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/RTSOutput.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/RTSOutput.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/RTSOutput.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/RTSOutput.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/RTSOutput.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/RTSOutput.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/RTSOutput.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/RTSOutput.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/RTSOutput.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/RTSOutput.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/RTSOutput.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/RTSOutput.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/RTSOutput.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/RTSOutput.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/RTSOutput.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/state\/RTSOutput.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/ozancicek\/artan\/ml\/state\/RTSOutput.html", "kind" : "case class"}], "org.apache.spark" : [], "org.apache" : [], "com.github.ozancicek.artan.ml.mixture" : [{"name" : "com.github.ozancicek.artan.ml.mixture.BernoulliMixture", "shortDescription" : "Online bernoulli mixture estimator with a stateful transformer, based on Cappe (2011) OnlineExpectation-Maximisation paper.", "object" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture$.html", "members_class" : [{"label" : "buildInitialMixtureModel", "tail" : "(dataFrame: DataFrame): DataFrame", "member" : "com.github.ozancicek.artan.ml.mixture.BernoulliMixture.buildInitialMixtureModel", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#buildInitialMixtureModel(dataFrame:org.apache.spark.sql.DataFrame):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "setInitialProbabilitiesCol", "tail" : "(value: String): BernoulliMixture", "member" : "com.github.ozancicek.artan.ml.mixture.BernoulliMixture.setInitialProbabilitiesCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#setInitialProbabilitiesCol(value:String):com.github.ozancicek.artan.ml.mixture.BernoulliMixture", "kind" : "def"}, {"label" : "setInitialProbabilities", "tail" : "(value: Array[Double]): BernoulliMixture", "member" : "com.github.ozancicek.artan.ml.mixture.BernoulliMixture.setInitialProbabilities", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#setInitialProbabilities(value:Array[Double]):com.github.ozancicek.artan.ml.mixture.BernoulliMixture", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.github.ozancicek.artan.ml.mixture.BernoulliMixture.transformSchema", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "copy", "tail" : "(extra: ParamMap): BernoulliMixture", "member" : "com.github.ozancicek.artan.ml.mixture.BernoulliMixture.copy", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#copy(extra:org.apache.spark.ml.param.ParamMap):com.github.ozancicek.artan.ml.mixture.BernoulliMixture", "kind" : "def"}, {"label" : "defaultStateKey", "tail" : ": String", "member" : "com.github.ozancicek.artan.ml.mixture.BernoulliMixture.defaultStateKey", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#defaultStateKey:String", "kind" : "val"}, {"member" : "com.github.ozancicek.artan.ml.mixture.BernoulliMixture#<init>", "error" : "unsupported entity"}, {"member" : "com.github.ozancicek.artan.ml.mixture.BernoulliMixture#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "com.github.ozancicek.artan.ml.mixture.BernoulliMixture.uid", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#uid:String", "kind" : "val"}, {"label" : "write", "tail" : "(): MLWriter", "member" : "org.apache.spark.ml.util.DefaultParamsWritable.write", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#save(path:String):Unit", "kind" : "def"}, {"label" : "getInitialProbabilitiesCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.mixture.HasInitialProbabilitiesCol.getInitialProbabilitiesCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#getInitialProbabilitiesCol:String", "kind" : "final def"}, {"label" : "initialProbabilitiesCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.mixture.HasInitialProbabilitiesCol.initialProbabilitiesCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#initialProbabilitiesCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInitialProbabilities", "tail" : "(): Array[Double]", "member" : "com.github.ozancicek.artan.ml.mixture.HasInitialProbabilities.getInitialProbabilities", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#getInitialProbabilities:Array[Double]", "kind" : "final def"}, {"label" : "initialProbabilities", "tail" : ": Param[Array[Double]]", "member" : "com.github.ozancicek.artan.ml.mixture.HasInitialProbabilities.initialProbabilities", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#initialProbabilities:org.apache.spark.ml.param.Param[Array[Double]]", "kind" : "final val"}, {"label" : "stateUpdateSpec", "tail" : "(): MixtureUpdateSpec[Boolean, BernoulliDistribution, BernoulliMixtureDistribution, BernoulliMixtureInput, BernoulliMixtureState, BernoulliMixtureOutput]", "member" : "com.github.ozancicek.artan.ml.mixture.FiniteMixture.stateUpdateSpec", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#stateUpdateSpec:com.github.ozancicek.artan.ml.mixture.MixtureUpdateSpec[SampleType,DistributionType,MixtureType,InputType,StateType,OutputType]", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "com.github.ozancicek.artan.ml.mixture.FiniteMixture.transform", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#transform(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformAndValidateSchema", "tail" : "(schema: StructType): StructType", "member" : "com.github.ozancicek.artan.ml.mixture.FiniteMixture.transformAndValidateSchema", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#transformAndValidateSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "stateKeyEncoder", "tail" : ": Encoder[String]", "member" : "com.github.ozancicek.artan.ml.mixture.FiniteMixture.stateKeyEncoder", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#stateKeyEncoder:org.apache.spark.sql.Encoder[String]", "kind" : "implicit val"}, {"label" : "setEnableBatchEM", "tail" : "(): BernoulliMixture", "member" : "com.github.ozancicek.artan.ml.mixture.MixtureParams.setEnableBatchEM", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#setEnableBatchEM:TransformerType", "kind" : "def"}, {"label" : "setBatchTrainTol", "tail" : "(value: Double): BernoulliMixture", "member" : "com.github.ozancicek.artan.ml.mixture.MixtureParams.setBatchTrainTol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#setBatchTrainTol(value:Double):TransformerType", "kind" : "def"}, {"label" : "setBatchTrainMaxIter", "tail" : "(value: Int): BernoulliMixture", "member" : "com.github.ozancicek.artan.ml.mixture.MixtureParams.setBatchTrainMaxIter", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#setBatchTrainMaxIter(value:Int):TransformerType", "kind" : "def"}, {"label" : "setInitialMixtureModelCol", "tail" : "(value: String): BernoulliMixture", "member" : "com.github.ozancicek.artan.ml.mixture.MixtureParams.setInitialMixtureModelCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#setInitialMixtureModelCol(value:String):TransformerType", "kind" : "def"}, {"label" : "setDecayRate", "tail" : "(value: Double): BernoulliMixture", "member" : "com.github.ozancicek.artan.ml.mixture.MixtureParams.setDecayRate", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#setDecayRate(value:Double):TransformerType", "kind" : "def"}, {"label" : "setMinibatchSizeCol", "tail" : "(value: String): BernoulliMixture", "member" : "com.github.ozancicek.artan.ml.mixture.MixtureParams.setMinibatchSizeCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#setMinibatchSizeCol(value:String):TransformerType", "kind" : "def"}, {"label" : "setMinibatchSize", "tail" : "(value: Int): BernoulliMixture", "member" : "com.github.ozancicek.artan.ml.mixture.MixtureParams.setMinibatchSize", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#setMinibatchSize(value:Int):TransformerType", "kind" : "def"}, {"label" : "setUpdateHoldoutCol", "tail" : "(value: String): BernoulliMixture", "member" : "com.github.ozancicek.artan.ml.mixture.MixtureParams.setUpdateHoldoutCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#setUpdateHoldoutCol(value:String):TransformerType", "kind" : "def"}, {"label" : "setUpdateHoldout", "tail" : "(value: Int): BernoulliMixture", "member" : "com.github.ozancicek.artan.ml.mixture.MixtureParams.setUpdateHoldout", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#setUpdateHoldout(value:Int):TransformerType", "kind" : "def"}, {"label" : "setSampleCol", "tail" : "(value: String): BernoulliMixture", "member" : "com.github.ozancicek.artan.ml.mixture.MixtureParams.setSampleCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#setSampleCol(value:String):TransformerType", "kind" : "def"}, {"label" : "setStepSizeCol", "tail" : "(value: String): BernoulliMixture", "member" : "com.github.ozancicek.artan.ml.mixture.MixtureParams.setStepSizeCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#setStepSizeCol(value:String):TransformerType", "kind" : "def"}, {"label" : "setStepSize", "tail" : "(value: Double): BernoulliMixture", "member" : "com.github.ozancicek.artan.ml.mixture.MixtureParams.setStepSize", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#setStepSize(value:Double):TransformerType", "kind" : "def"}, {"label" : "setInitialWeightsCol", "tail" : "(value: String): BernoulliMixture", "member" : "com.github.ozancicek.artan.ml.mixture.MixtureParams.setInitialWeightsCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#setInitialWeightsCol(value:String):TransformerType", "kind" : "def"}, {"label" : "setInitialWeights", "tail" : "(value: Array[Double]): BernoulliMixture", "member" : "com.github.ozancicek.artan.ml.mixture.MixtureParams.setInitialWeights", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#setInitialWeights(value:Array[Double]):TransformerType", "kind" : "def"}, {"label" : "setMixtureCount", "tail" : "(value: Int): BernoulliMixture", "member" : "com.github.ozancicek.artan.ml.mixture.MixtureParams.setMixtureCount", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#setMixtureCount(value:Int):TransformerType", "kind" : "def"}, {"label" : "getMixtureCount", "tail" : "(): Int", "member" : "com.github.ozancicek.artan.ml.mixture.HasMixtureCount.getMixtureCount", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#getMixtureCount:Int", "kind" : "final def"}, {"label" : "mixtureCount", "tail" : ": IntParam", "member" : "com.github.ozancicek.artan.ml.mixture.HasMixtureCount.mixtureCount", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#mixtureCount:org.apache.spark.ml.param.IntParam", "kind" : "final val"}, {"label" : "getBatchTrainEnabled", "tail" : "(): Boolean", "member" : "com.github.ozancicek.artan.ml.mixture.HasBatchTrainEnabled.getBatchTrainEnabled", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#getBatchTrainEnabled:Boolean", "kind" : "final def"}, {"label" : "batchTrainEnabled", "tail" : ": Param[Boolean]", "member" : "com.github.ozancicek.artan.ml.mixture.HasBatchTrainEnabled.batchTrainEnabled", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#batchTrainEnabled:org.apache.spark.ml.param.Param[Boolean]", "kind" : "final val"}, {"label" : "getUpdateHoldoutCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.mixture.HasUpdateHoldoutCol.getUpdateHoldoutCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#getUpdateHoldoutCol:String", "kind" : "final def"}, {"label" : "updateHoldoutCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.mixture.HasUpdateHoldoutCol.updateHoldoutCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#updateHoldoutCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getBatchTrainTol", "tail" : "(): Double", "member" : "com.github.ozancicek.artan.ml.mixture.HasBatchTrainTol.getBatchTrainTol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#getBatchTrainTol:Double", "kind" : "final def"}, {"label" : "batchTrainTol", "tail" : ": Param[Double]", "member" : "com.github.ozancicek.artan.ml.mixture.HasBatchTrainTol.batchTrainTol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#batchTrainTol:org.apache.spark.ml.param.Param[Double]", "kind" : "final val"}, {"label" : "getBatchTrainMaxIter", "tail" : "(): Int", "member" : "com.github.ozancicek.artan.ml.mixture.HasBatchTrainMaxIter.getBatchTrainMaxIter", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#getBatchTrainMaxIter:Int", "kind" : "final def"}, {"label" : "batchTrainMaxIter", "tail" : ": Param[Int]", "member" : "com.github.ozancicek.artan.ml.mixture.HasBatchTrainMaxIter.batchTrainMaxIter", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#batchTrainMaxIter:org.apache.spark.ml.param.Param[Int]", "kind" : "final val"}, {"label" : "getInitialMixtureModelCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.mixture.HasInitialMixtureModelCol.getInitialMixtureModelCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#getInitialMixtureModelCol:String", "kind" : "final def"}, {"label" : "initialMixtureModelCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.mixture.HasInitialMixtureModelCol.initialMixtureModelCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#initialMixtureModelCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getDecayRateExpr", "tail" : "(): UserDefinedFunction", "member" : "com.github.ozancicek.artan.ml.mixture.HasDecayRate.getDecayRateExpr", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#getDecayRateExpr:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "decayRate", "tail" : ": Param[Double]", "member" : "com.github.ozancicek.artan.ml.mixture.HasDecayRate.decayRate", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#decayRate:org.apache.spark.ml.param.Param[Double]", "kind" : "final val"}, {"label" : "getMinibatchSizeCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.mixture.HasMinibatchSizeCol.getMinibatchSizeCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#getMinibatchSizeCol:String", "kind" : "final def"}, {"label" : "minibatchSizeCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.mixture.HasMinibatchSizeCol.minibatchSizeCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#minibatchSizeCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getMinibatchSize", "tail" : "(): Int", "member" : "com.github.ozancicek.artan.ml.mixture.HasMinibatchSize.getMinibatchSize", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#getMinibatchSize:Int", "kind" : "final def"}, {"label" : "minibatchSize", "tail" : ": Param[Int]", "member" : "com.github.ozancicek.artan.ml.mixture.HasMinibatchSize.minibatchSize", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#minibatchSize:org.apache.spark.ml.param.Param[Int]", "kind" : "final val"}, {"label" : "getUpdateHoldout", "tail" : "(): Int", "member" : "com.github.ozancicek.artan.ml.mixture.HasUpdateHoldout.getUpdateHoldout", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#getUpdateHoldout:Int", "kind" : "final def"}, {"label" : "updateHoldout", "tail" : ": Param[Int]", "member" : "com.github.ozancicek.artan.ml.mixture.HasUpdateHoldout.updateHoldout", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#updateHoldout:org.apache.spark.ml.param.Param[Int]", "kind" : "final val"}, {"label" : "getSampleCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.mixture.HasSampleCol.getSampleCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#getSampleCol:String", "kind" : "final def"}, {"label" : "sampleCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.mixture.HasSampleCol.sampleCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#sampleCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getStepSize", "tail" : "(): Double", "member" : "com.github.ozancicek.artan.ml.mixture.HasStepSize.getStepSize", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#getStepSize:Double", "kind" : "final def"}, {"label" : "stepSize", "tail" : ": Param[Double]", "member" : "com.github.ozancicek.artan.ml.mixture.HasStepSize.stepSize", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#stepSize:org.apache.spark.ml.param.Param[Double]", "kind" : "final val"}, {"label" : "getStepSizeCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.mixture.HasStepSizeCol.getStepSizeCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#getStepSizeCol:String", "kind" : "final def"}, {"label" : "stepSizeCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.mixture.HasStepSizeCol.stepSizeCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#stepSizeCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInitialWeightsCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.mixture.HasInitialWeightsCol.getInitialWeightsCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#getInitialWeightsCol:String", "kind" : "final def"}, {"label" : "initialWeightsCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.mixture.HasInitialWeightsCol.initialWeightsCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#initialWeightsCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInitialWeights", "tail" : "(): Array[Double]", "member" : "com.github.ozancicek.artan.ml.mixture.HasInitialWeights.getInitialWeights", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#getInitialWeights:Array[Double]", "kind" : "final def"}, {"label" : "initialWeights", "tail" : ": Param[Array[Double]]", "member" : "com.github.ozancicek.artan.ml.mixture.HasInitialWeights.initialWeights", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#initialWeights:org.apache.spark.ml.param.Param[Array[Double]]", "kind" : "final val"}, {"label" : "transformWithState", "tail" : "(in: DataFrame)(keyEncoder: Encoder[String]): Dataset[BernoulliMixtureOutput]", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.transformWithState", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#transformWithState(in:org.apache.spark.sql.DataFrame)(implicitkeyEncoder:org.apache.spark.sql.Encoder[GroupKeyType]):org.apache.spark.sql.Dataset[OutType]", "kind" : "def"}, {"label" : "getLinalgOptions", "tail" : "(): LinalgOptions", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.getLinalgOptions", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#getLinalgOptions:com.github.ozancicek.artan.ml.linalg.LinalgOptions", "kind" : "def"}, {"label" : "getUDFWithDefault", "tail" : "(defaultParam: Param[DefaultType], colParam: Param[String])(arg0: scala.reflect.api.JavaUniverse.TypeTag[DefaultType]): Column", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.getUDFWithDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#getUDFWithDefault[DefaultType](defaultParam:org.apache.spark.ml.param.Param[DefaultType],colParam:org.apache.spark.ml.param.Param[String])(implicitevidence$5:reflect.runtime.universe.TypeTag[DefaultType]):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "asDataFrameTransformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.asDataFrameTransformSchema", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#asDataFrameTransformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "asDataFrame", "tail" : "(ds: Dataset[BernoulliMixtureOutput]): DataFrame", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.asDataFrame", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#asDataFrame(ds:org.apache.spark.sql.Dataset[OutType]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "validateWatermarkColumns", "tail" : "(schema: StructType): Unit", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.validateWatermarkColumns", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#validateWatermarkColumns(schema:org.apache.spark.sql.types.StructType):Unit", "kind" : "def"}, {"label" : "outEncoder", "tail" : ": Encoder[BernoulliMixtureOutput]", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.outEncoder", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#outEncoder:org.apache.spark.sql.Encoder[OutType]", "kind" : "implicit val"}, {"label" : "rowEncoder", "tail" : ": Encoder[BernoulliMixtureInput]", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.rowEncoder", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#rowEncoder:org.apache.spark.sql.Encoder[RowType]", "kind" : "implicit val"}, {"label" : "stateEncoder", "tail" : ": Encoder[BernoulliMixtureState]", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.stateEncoder", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#stateEncoder:org.apache.spark.sql.Encoder[StateType]", "kind" : "implicit val"}, {"label" : "keyFunc", "tail" : "(): (BernoulliMixtureInput) ⇒ String", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.keyFunc", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#keyFunc:RowType=>GroupKeyType", "kind" : "def"}, {"label" : "setWatermarkDuration", "tail" : "(value: String): BernoulliMixture", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformerParams.setWatermarkDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#setWatermarkDuration(value:String):ImplType", "kind" : "def"}, {"label" : "setEventTimeCol", "tail" : "(value: String): BernoulliMixture", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformerParams.setEventTimeCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#setEventTimeCol(value:String):ImplType", "kind" : "def"}, {"label" : "setStateTimeoutDuration", "tail" : "(value: String): BernoulliMixture", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformerParams.setStateTimeoutDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#setStateTimeoutDuration(value:String):ImplType", "kind" : "def"}, {"label" : "setStateTimeoutMode", "tail" : "(value: String): BernoulliMixture", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformerParams.setStateTimeoutMode", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#setStateTimeoutMode(value:String):ImplType", "kind" : "def"}, {"label" : "setStateKeyCol", "tail" : "(value: String): BernoulliMixture", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformerParams.setStateKeyCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#setStateKeyCol(value:String):ImplType", "kind" : "def"}, {"label" : "getStateTimeoutDuration", "tail" : "(): Option[String]", "member" : "com.github.ozancicek.artan.ml.state.HasStateTimeoutDuration.getStateTimeoutDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#getStateTimeoutDuration:Option[String]", "kind" : "def"}, {"label" : "stateTimeoutDuration", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.state.HasStateTimeoutDuration.stateTimeoutDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#stateTimeoutDuration:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getStateKeyColumn", "tail" : "(): Column", "member" : "com.github.ozancicek.artan.ml.state.HasStateKeyCol.getStateKeyColumn", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#getStateKeyColumn:org.apache.spark.sql.Column", "kind" : "final def"}, {"label" : "getStateKeyColname", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.state.HasStateKeyCol.getStateKeyColname", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#getStateKeyColname:String", "kind" : "final def"}, {"label" : "stateKeyCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.state.HasStateKeyCol.stateKeyCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#stateKeyCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getWatermarkDuration", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.state.HasWatermarkDuration.getWatermarkDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#getWatermarkDuration:String", "kind" : "def"}, {"label" : "watermarkDuration", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.state.HasWatermarkDuration.watermarkDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#watermarkDuration:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getEventTimeCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.state.HasEventTimeCol.getEventTimeCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#getEventTimeCol:String", "kind" : "def"}, {"label" : "eventTimeCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.state.HasEventTimeCol.eventTimeCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#eventTimeCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getTimeoutMode", "tail" : "(): TimeoutMode", "member" : "com.github.ozancicek.artan.ml.state.HasStateTimeoutMode.getTimeoutMode", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#getTimeoutMode:com.github.ozancicek.artan.ml.state.TimeoutMode", "kind" : "def"}, {"label" : "timeoutMode", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.state.HasStateTimeoutMode.timeoutMode", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#timeoutMode:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#transform(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#transform(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): BernoulliMixture.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): BernoulliMixture.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): BernoulliMixture.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): BernoulliMixture.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): BernoulliMixture.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): BernoulliMixture.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "load", "tail" : "(path: String): BernoulliMixture", "member" : "com.github.ozancicek.artan.ml.mixture.BernoulliMixture.load", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture$.html#load(path:String):com.github.ozancicek.artan.ml.mixture.BernoulliMixture", "kind" : "def"}, {"label" : "read", "tail" : "(): MLReader[BernoulliMixture]", "member" : "org.apache.spark.ml.util.DefaultParamsReadable.read", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture$.html#read:org.apache.spark.ml.util.MLReader[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/ozancicek\/artan\/ml\/mixture\/BernoulliMixture.html", "kind" : "class"}, {"name" : "com.github.ozancicek.artan.ml.mixture.MultivariateGaussianMixture", "shortDescription" : "Online multivariate gaussian mixture estimation with a stateful transformer, based on Cappe(2011) OnlineExpectation-Maximisation paper.", "object" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture$.html", "members_class" : [{"label" : "buildInitialMixtureModel", "tail" : "(dataFrame: DataFrame): DataFrame", "member" : "com.github.ozancicek.artan.ml.mixture.MultivariateGaussianMixture.buildInitialMixtureModel", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#buildInitialMixtureModel(dataFrame:org.apache.spark.sql.DataFrame):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.github.ozancicek.artan.ml.mixture.MultivariateGaussianMixture.transformSchema", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "setInitialCovariancesCol", "tail" : "(value: String): MultivariateGaussianMixture", "member" : "com.github.ozancicek.artan.ml.mixture.MultivariateGaussianMixture.setInitialCovariancesCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#setInitialCovariancesCol(value:String):com.github.ozancicek.artan.ml.mixture.MultivariateGaussianMixture", "kind" : "def"}, {"label" : "setInitialCovariances", "tail" : "(value: Array[Array[Double]]): MultivariateGaussianMixture", "member" : "com.github.ozancicek.artan.ml.mixture.MultivariateGaussianMixture.setInitialCovariances", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#setInitialCovariances(value:Array[Array[Double]]):com.github.ozancicek.artan.ml.mixture.MultivariateGaussianMixture", "kind" : "def"}, {"label" : "setInitialMeansCol", "tail" : "(value: String): MultivariateGaussianMixture", "member" : "com.github.ozancicek.artan.ml.mixture.MultivariateGaussianMixture.setInitialMeansCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#setInitialMeansCol(value:String):com.github.ozancicek.artan.ml.mixture.MultivariateGaussianMixture", "kind" : "def"}, {"label" : "setInitialMeans", "tail" : "(value: Array[Array[Double]]): MultivariateGaussianMixture", "member" : "com.github.ozancicek.artan.ml.mixture.MultivariateGaussianMixture.setInitialMeans", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#setInitialMeans(value:Array[Array[Double]]):com.github.ozancicek.artan.ml.mixture.MultivariateGaussianMixture", "kind" : "def"}, {"label" : "copy", "tail" : "(extra: ParamMap): MultivariateGaussianMixture", "member" : "com.github.ozancicek.artan.ml.mixture.MultivariateGaussianMixture.copy", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#copy(extra:org.apache.spark.ml.param.ParamMap):com.github.ozancicek.artan.ml.mixture.MultivariateGaussianMixture", "kind" : "def"}, {"label" : "defaultStateKey", "tail" : ": String", "member" : "com.github.ozancicek.artan.ml.mixture.MultivariateGaussianMixture.defaultStateKey", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#defaultStateKey:String", "kind" : "val"}, {"member" : "com.github.ozancicek.artan.ml.mixture.MultivariateGaussianMixture#<init>", "error" : "unsupported entity"}, {"member" : "com.github.ozancicek.artan.ml.mixture.MultivariateGaussianMixture#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "com.github.ozancicek.artan.ml.mixture.MultivariateGaussianMixture.uid", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#uid:String", "kind" : "val"}, {"label" : "write", "tail" : "(): MLWriter", "member" : "org.apache.spark.ml.util.DefaultParamsWritable.write", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#save(path:String):Unit", "kind" : "def"}, {"label" : "getInitialCovariancesCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.mixture.HasInitialCovariancesCol.getInitialCovariancesCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#getInitialCovariancesCol:String", "kind" : "final def"}, {"label" : "initialCovariancesCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.mixture.HasInitialCovariancesCol.initialCovariancesCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#initialCovariancesCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInitialCovariances", "tail" : "(): Array[Array[Double]]", "member" : "com.github.ozancicek.artan.ml.mixture.HasInitialCovariances.getInitialCovariances", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#getInitialCovariances:Array[Array[Double]]", "kind" : "final def"}, {"label" : "initialCovariances", "tail" : ": Param[Array[Array[Double]]]", "member" : "com.github.ozancicek.artan.ml.mixture.HasInitialCovariances.initialCovariances", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#initialCovariances:org.apache.spark.ml.param.Param[Array[Array[Double]]]", "kind" : "final val"}, {"label" : "getInitialMeansCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.mixture.HasInitialMeansCol.getInitialMeansCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#getInitialMeansCol:String", "kind" : "final def"}, {"label" : "initialMeansCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.mixture.HasInitialMeansCol.initialMeansCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#initialMeansCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInitialMeans", "tail" : "(): Array[Array[Double]]", "member" : "com.github.ozancicek.artan.ml.mixture.HasInitialMeans.getInitialMeans", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#getInitialMeans:Array[Array[Double]]", "kind" : "final def"}, {"label" : "initialMeans", "tail" : ": Param[Array[Array[Double]]]", "member" : "com.github.ozancicek.artan.ml.mixture.HasInitialMeans.initialMeans", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#initialMeans:org.apache.spark.ml.param.Param[Array[Array[Double]]]", "kind" : "final val"}, {"label" : "stateUpdateSpec", "tail" : "(): MixtureUpdateSpec[Vector, MultivariateGaussianDistribution, GaussianMixtureDistribution, GaussianMixtureInput, GaussianMixtureState, GaussianMixtureOutput]", "member" : "com.github.ozancicek.artan.ml.mixture.FiniteMixture.stateUpdateSpec", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#stateUpdateSpec:com.github.ozancicek.artan.ml.mixture.MixtureUpdateSpec[SampleType,DistributionType,MixtureType,InputType,StateType,OutputType]", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "com.github.ozancicek.artan.ml.mixture.FiniteMixture.transform", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#transform(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformAndValidateSchema", "tail" : "(schema: StructType): StructType", "member" : "com.github.ozancicek.artan.ml.mixture.FiniteMixture.transformAndValidateSchema", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#transformAndValidateSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "stateKeyEncoder", "tail" : ": Encoder[String]", "member" : "com.github.ozancicek.artan.ml.mixture.FiniteMixture.stateKeyEncoder", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#stateKeyEncoder:org.apache.spark.sql.Encoder[String]", "kind" : "implicit val"}, {"label" : "setEnableBatchEM", "tail" : "(): MultivariateGaussianMixture", "member" : "com.github.ozancicek.artan.ml.mixture.MixtureParams.setEnableBatchEM", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#setEnableBatchEM:TransformerType", "kind" : "def"}, {"label" : "setBatchTrainTol", "tail" : "(value: Double): MultivariateGaussianMixture", "member" : "com.github.ozancicek.artan.ml.mixture.MixtureParams.setBatchTrainTol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#setBatchTrainTol(value:Double):TransformerType", "kind" : "def"}, {"label" : "setBatchTrainMaxIter", "tail" : "(value: Int): MultivariateGaussianMixture", "member" : "com.github.ozancicek.artan.ml.mixture.MixtureParams.setBatchTrainMaxIter", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#setBatchTrainMaxIter(value:Int):TransformerType", "kind" : "def"}, {"label" : "setInitialMixtureModelCol", "tail" : "(value: String): MultivariateGaussianMixture", "member" : "com.github.ozancicek.artan.ml.mixture.MixtureParams.setInitialMixtureModelCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#setInitialMixtureModelCol(value:String):TransformerType", "kind" : "def"}, {"label" : "setDecayRate", "tail" : "(value: Double): MultivariateGaussianMixture", "member" : "com.github.ozancicek.artan.ml.mixture.MixtureParams.setDecayRate", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#setDecayRate(value:Double):TransformerType", "kind" : "def"}, {"label" : "setMinibatchSizeCol", "tail" : "(value: String): MultivariateGaussianMixture", "member" : "com.github.ozancicek.artan.ml.mixture.MixtureParams.setMinibatchSizeCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#setMinibatchSizeCol(value:String):TransformerType", "kind" : "def"}, {"label" : "setMinibatchSize", "tail" : "(value: Int): MultivariateGaussianMixture", "member" : "com.github.ozancicek.artan.ml.mixture.MixtureParams.setMinibatchSize", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#setMinibatchSize(value:Int):TransformerType", "kind" : "def"}, {"label" : "setUpdateHoldoutCol", "tail" : "(value: String): MultivariateGaussianMixture", "member" : "com.github.ozancicek.artan.ml.mixture.MixtureParams.setUpdateHoldoutCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#setUpdateHoldoutCol(value:String):TransformerType", "kind" : "def"}, {"label" : "setUpdateHoldout", "tail" : "(value: Int): MultivariateGaussianMixture", "member" : "com.github.ozancicek.artan.ml.mixture.MixtureParams.setUpdateHoldout", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#setUpdateHoldout(value:Int):TransformerType", "kind" : "def"}, {"label" : "setSampleCol", "tail" : "(value: String): MultivariateGaussianMixture", "member" : "com.github.ozancicek.artan.ml.mixture.MixtureParams.setSampleCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#setSampleCol(value:String):TransformerType", "kind" : "def"}, {"label" : "setStepSizeCol", "tail" : "(value: String): MultivariateGaussianMixture", "member" : "com.github.ozancicek.artan.ml.mixture.MixtureParams.setStepSizeCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#setStepSizeCol(value:String):TransformerType", "kind" : "def"}, {"label" : "setStepSize", "tail" : "(value: Double): MultivariateGaussianMixture", "member" : "com.github.ozancicek.artan.ml.mixture.MixtureParams.setStepSize", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#setStepSize(value:Double):TransformerType", "kind" : "def"}, {"label" : "setInitialWeightsCol", "tail" : "(value: String): MultivariateGaussianMixture", "member" : "com.github.ozancicek.artan.ml.mixture.MixtureParams.setInitialWeightsCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#setInitialWeightsCol(value:String):TransformerType", "kind" : "def"}, {"label" : "setInitialWeights", "tail" : "(value: Array[Double]): MultivariateGaussianMixture", "member" : "com.github.ozancicek.artan.ml.mixture.MixtureParams.setInitialWeights", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#setInitialWeights(value:Array[Double]):TransformerType", "kind" : "def"}, {"label" : "setMixtureCount", "tail" : "(value: Int): MultivariateGaussianMixture", "member" : "com.github.ozancicek.artan.ml.mixture.MixtureParams.setMixtureCount", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#setMixtureCount(value:Int):TransformerType", "kind" : "def"}, {"label" : "getMixtureCount", "tail" : "(): Int", "member" : "com.github.ozancicek.artan.ml.mixture.HasMixtureCount.getMixtureCount", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#getMixtureCount:Int", "kind" : "final def"}, {"label" : "mixtureCount", "tail" : ": IntParam", "member" : "com.github.ozancicek.artan.ml.mixture.HasMixtureCount.mixtureCount", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#mixtureCount:org.apache.spark.ml.param.IntParam", "kind" : "final val"}, {"label" : "getBatchTrainEnabled", "tail" : "(): Boolean", "member" : "com.github.ozancicek.artan.ml.mixture.HasBatchTrainEnabled.getBatchTrainEnabled", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#getBatchTrainEnabled:Boolean", "kind" : "final def"}, {"label" : "batchTrainEnabled", "tail" : ": Param[Boolean]", "member" : "com.github.ozancicek.artan.ml.mixture.HasBatchTrainEnabled.batchTrainEnabled", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#batchTrainEnabled:org.apache.spark.ml.param.Param[Boolean]", "kind" : "final val"}, {"label" : "getUpdateHoldoutCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.mixture.HasUpdateHoldoutCol.getUpdateHoldoutCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#getUpdateHoldoutCol:String", "kind" : "final def"}, {"label" : "updateHoldoutCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.mixture.HasUpdateHoldoutCol.updateHoldoutCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#updateHoldoutCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getBatchTrainTol", "tail" : "(): Double", "member" : "com.github.ozancicek.artan.ml.mixture.HasBatchTrainTol.getBatchTrainTol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#getBatchTrainTol:Double", "kind" : "final def"}, {"label" : "batchTrainTol", "tail" : ": Param[Double]", "member" : "com.github.ozancicek.artan.ml.mixture.HasBatchTrainTol.batchTrainTol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#batchTrainTol:org.apache.spark.ml.param.Param[Double]", "kind" : "final val"}, {"label" : "getBatchTrainMaxIter", "tail" : "(): Int", "member" : "com.github.ozancicek.artan.ml.mixture.HasBatchTrainMaxIter.getBatchTrainMaxIter", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#getBatchTrainMaxIter:Int", "kind" : "final def"}, {"label" : "batchTrainMaxIter", "tail" : ": Param[Int]", "member" : "com.github.ozancicek.artan.ml.mixture.HasBatchTrainMaxIter.batchTrainMaxIter", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#batchTrainMaxIter:org.apache.spark.ml.param.Param[Int]", "kind" : "final val"}, {"label" : "getInitialMixtureModelCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.mixture.HasInitialMixtureModelCol.getInitialMixtureModelCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#getInitialMixtureModelCol:String", "kind" : "final def"}, {"label" : "initialMixtureModelCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.mixture.HasInitialMixtureModelCol.initialMixtureModelCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#initialMixtureModelCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getDecayRateExpr", "tail" : "(): UserDefinedFunction", "member" : "com.github.ozancicek.artan.ml.mixture.HasDecayRate.getDecayRateExpr", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#getDecayRateExpr:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "decayRate", "tail" : ": Param[Double]", "member" : "com.github.ozancicek.artan.ml.mixture.HasDecayRate.decayRate", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#decayRate:org.apache.spark.ml.param.Param[Double]", "kind" : "final val"}, {"label" : "getMinibatchSizeCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.mixture.HasMinibatchSizeCol.getMinibatchSizeCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#getMinibatchSizeCol:String", "kind" : "final def"}, {"label" : "minibatchSizeCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.mixture.HasMinibatchSizeCol.minibatchSizeCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#minibatchSizeCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getMinibatchSize", "tail" : "(): Int", "member" : "com.github.ozancicek.artan.ml.mixture.HasMinibatchSize.getMinibatchSize", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#getMinibatchSize:Int", "kind" : "final def"}, {"label" : "minibatchSize", "tail" : ": Param[Int]", "member" : "com.github.ozancicek.artan.ml.mixture.HasMinibatchSize.minibatchSize", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#minibatchSize:org.apache.spark.ml.param.Param[Int]", "kind" : "final val"}, {"label" : "getUpdateHoldout", "tail" : "(): Int", "member" : "com.github.ozancicek.artan.ml.mixture.HasUpdateHoldout.getUpdateHoldout", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#getUpdateHoldout:Int", "kind" : "final def"}, {"label" : "updateHoldout", "tail" : ": Param[Int]", "member" : "com.github.ozancicek.artan.ml.mixture.HasUpdateHoldout.updateHoldout", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#updateHoldout:org.apache.spark.ml.param.Param[Int]", "kind" : "final val"}, {"label" : "getSampleCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.mixture.HasSampleCol.getSampleCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#getSampleCol:String", "kind" : "final def"}, {"label" : "sampleCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.mixture.HasSampleCol.sampleCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#sampleCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getStepSize", "tail" : "(): Double", "member" : "com.github.ozancicek.artan.ml.mixture.HasStepSize.getStepSize", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#getStepSize:Double", "kind" : "final def"}, {"label" : "stepSize", "tail" : ": Param[Double]", "member" : "com.github.ozancicek.artan.ml.mixture.HasStepSize.stepSize", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#stepSize:org.apache.spark.ml.param.Param[Double]", "kind" : "final val"}, {"label" : "getStepSizeCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.mixture.HasStepSizeCol.getStepSizeCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#getStepSizeCol:String", "kind" : "final def"}, {"label" : "stepSizeCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.mixture.HasStepSizeCol.stepSizeCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#stepSizeCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInitialWeightsCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.mixture.HasInitialWeightsCol.getInitialWeightsCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#getInitialWeightsCol:String", "kind" : "final def"}, {"label" : "initialWeightsCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.mixture.HasInitialWeightsCol.initialWeightsCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#initialWeightsCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInitialWeights", "tail" : "(): Array[Double]", "member" : "com.github.ozancicek.artan.ml.mixture.HasInitialWeights.getInitialWeights", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#getInitialWeights:Array[Double]", "kind" : "final def"}, {"label" : "initialWeights", "tail" : ": Param[Array[Double]]", "member" : "com.github.ozancicek.artan.ml.mixture.HasInitialWeights.initialWeights", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#initialWeights:org.apache.spark.ml.param.Param[Array[Double]]", "kind" : "final val"}, {"label" : "transformWithState", "tail" : "(in: DataFrame)(keyEncoder: Encoder[String]): Dataset[GaussianMixtureOutput]", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.transformWithState", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#transformWithState(in:org.apache.spark.sql.DataFrame)(implicitkeyEncoder:org.apache.spark.sql.Encoder[GroupKeyType]):org.apache.spark.sql.Dataset[OutType]", "kind" : "def"}, {"label" : "getLinalgOptions", "tail" : "(): LinalgOptions", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.getLinalgOptions", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#getLinalgOptions:com.github.ozancicek.artan.ml.linalg.LinalgOptions", "kind" : "def"}, {"label" : "getUDFWithDefault", "tail" : "(defaultParam: Param[DefaultType], colParam: Param[String])(arg0: scala.reflect.api.JavaUniverse.TypeTag[DefaultType]): Column", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.getUDFWithDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#getUDFWithDefault[DefaultType](defaultParam:org.apache.spark.ml.param.Param[DefaultType],colParam:org.apache.spark.ml.param.Param[String])(implicitevidence$5:reflect.runtime.universe.TypeTag[DefaultType]):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "asDataFrameTransformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.asDataFrameTransformSchema", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#asDataFrameTransformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "asDataFrame", "tail" : "(ds: Dataset[GaussianMixtureOutput]): DataFrame", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.asDataFrame", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#asDataFrame(ds:org.apache.spark.sql.Dataset[OutType]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "validateWatermarkColumns", "tail" : "(schema: StructType): Unit", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.validateWatermarkColumns", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#validateWatermarkColumns(schema:org.apache.spark.sql.types.StructType):Unit", "kind" : "def"}, {"label" : "outEncoder", "tail" : ": Encoder[GaussianMixtureOutput]", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.outEncoder", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#outEncoder:org.apache.spark.sql.Encoder[OutType]", "kind" : "implicit val"}, {"label" : "rowEncoder", "tail" : ": Encoder[GaussianMixtureInput]", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.rowEncoder", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#rowEncoder:org.apache.spark.sql.Encoder[RowType]", "kind" : "implicit val"}, {"label" : "stateEncoder", "tail" : ": Encoder[GaussianMixtureState]", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.stateEncoder", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#stateEncoder:org.apache.spark.sql.Encoder[StateType]", "kind" : "implicit val"}, {"label" : "keyFunc", "tail" : "(): (GaussianMixtureInput) ⇒ String", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.keyFunc", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#keyFunc:RowType=>GroupKeyType", "kind" : "def"}, {"label" : "setWatermarkDuration", "tail" : "(value: String): MultivariateGaussianMixture", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformerParams.setWatermarkDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#setWatermarkDuration(value:String):ImplType", "kind" : "def"}, {"label" : "setEventTimeCol", "tail" : "(value: String): MultivariateGaussianMixture", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformerParams.setEventTimeCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#setEventTimeCol(value:String):ImplType", "kind" : "def"}, {"label" : "setStateTimeoutDuration", "tail" : "(value: String): MultivariateGaussianMixture", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformerParams.setStateTimeoutDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#setStateTimeoutDuration(value:String):ImplType", "kind" : "def"}, {"label" : "setStateTimeoutMode", "tail" : "(value: String): MultivariateGaussianMixture", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformerParams.setStateTimeoutMode", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#setStateTimeoutMode(value:String):ImplType", "kind" : "def"}, {"label" : "setStateKeyCol", "tail" : "(value: String): MultivariateGaussianMixture", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformerParams.setStateKeyCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#setStateKeyCol(value:String):ImplType", "kind" : "def"}, {"label" : "getStateTimeoutDuration", "tail" : "(): Option[String]", "member" : "com.github.ozancicek.artan.ml.state.HasStateTimeoutDuration.getStateTimeoutDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#getStateTimeoutDuration:Option[String]", "kind" : "def"}, {"label" : "stateTimeoutDuration", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.state.HasStateTimeoutDuration.stateTimeoutDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#stateTimeoutDuration:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getStateKeyColumn", "tail" : "(): Column", "member" : "com.github.ozancicek.artan.ml.state.HasStateKeyCol.getStateKeyColumn", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#getStateKeyColumn:org.apache.spark.sql.Column", "kind" : "final def"}, {"label" : "getStateKeyColname", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.state.HasStateKeyCol.getStateKeyColname", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#getStateKeyColname:String", "kind" : "final def"}, {"label" : "stateKeyCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.state.HasStateKeyCol.stateKeyCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#stateKeyCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getWatermarkDuration", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.state.HasWatermarkDuration.getWatermarkDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#getWatermarkDuration:String", "kind" : "def"}, {"label" : "watermarkDuration", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.state.HasWatermarkDuration.watermarkDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#watermarkDuration:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getEventTimeCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.state.HasEventTimeCol.getEventTimeCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#getEventTimeCol:String", "kind" : "def"}, {"label" : "eventTimeCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.state.HasEventTimeCol.eventTimeCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#eventTimeCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getTimeoutMode", "tail" : "(): TimeoutMode", "member" : "com.github.ozancicek.artan.ml.state.HasStateTimeoutMode.getTimeoutMode", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#getTimeoutMode:com.github.ozancicek.artan.ml.state.TimeoutMode", "kind" : "def"}, {"label" : "timeoutMode", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.state.HasStateTimeoutMode.timeoutMode", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#timeoutMode:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#transform(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#transform(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): MultivariateGaussianMixture.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): MultivariateGaussianMixture.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): MultivariateGaussianMixture.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): MultivariateGaussianMixture.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): MultivariateGaussianMixture.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): MultivariateGaussianMixture.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "load", "tail" : "(path: String): MultivariateGaussianMixture", "member" : "com.github.ozancicek.artan.ml.mixture.MultivariateGaussianMixture.load", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture$.html#load(path:String):com.github.ozancicek.artan.ml.mixture.MultivariateGaussianMixture", "kind" : "def"}, {"label" : "read", "tail" : "(): MLReader[MultivariateGaussianMixture]", "member" : "org.apache.spark.ml.util.DefaultParamsReadable.read", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture$.html#read:org.apache.spark.ml.util.MLReader[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/ozancicek\/artan\/ml\/mixture\/MultivariateGaussianMixture.html", "kind" : "class"}, {"name" : "com.github.ozancicek.artan.ml.mixture.PoissonMixture", "shortDescription" : "Online poisson mixture estimation with stateful transformer, based on Cappe(2011) Online Expectation-Maximisation.", "object" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture$.html", "members_class" : [{"label" : "buildInitialMixtureModel", "tail" : "(dataFrame: DataFrame): DataFrame", "member" : "com.github.ozancicek.artan.ml.mixture.PoissonMixture.buildInitialMixtureModel", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#buildInitialMixtureModel(dataFrame:org.apache.spark.sql.DataFrame):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "setInitialRatesCol", "tail" : "(value: String): PoissonMixture", "member" : "com.github.ozancicek.artan.ml.mixture.PoissonMixture.setInitialRatesCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#setInitialRatesCol(value:String):com.github.ozancicek.artan.ml.mixture.PoissonMixture", "kind" : "def"}, {"label" : "setInitialRates", "tail" : "(value: Array[Double]): PoissonMixture", "member" : "com.github.ozancicek.artan.ml.mixture.PoissonMixture.setInitialRates", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#setInitialRates(value:Array[Double]):com.github.ozancicek.artan.ml.mixture.PoissonMixture", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.github.ozancicek.artan.ml.mixture.PoissonMixture.transformSchema", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "copy", "tail" : "(extra: ParamMap): PoissonMixture", "member" : "com.github.ozancicek.artan.ml.mixture.PoissonMixture.copy", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#copy(extra:org.apache.spark.ml.param.ParamMap):com.github.ozancicek.artan.ml.mixture.PoissonMixture", "kind" : "def"}, {"label" : "defaultStateKey", "tail" : ": String", "member" : "com.github.ozancicek.artan.ml.mixture.PoissonMixture.defaultStateKey", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#defaultStateKey:String", "kind" : "val"}, {"member" : "com.github.ozancicek.artan.ml.mixture.PoissonMixture#<init>", "error" : "unsupported entity"}, {"member" : "com.github.ozancicek.artan.ml.mixture.PoissonMixture#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "com.github.ozancicek.artan.ml.mixture.PoissonMixture.uid", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#uid:String", "kind" : "val"}, {"label" : "write", "tail" : "(): MLWriter", "member" : "org.apache.spark.ml.util.DefaultParamsWritable.write", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#save(path:String):Unit", "kind" : "def"}, {"label" : "getInitialRatesCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.mixture.HasInitialRatesCol.getInitialRatesCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#getInitialRatesCol:String", "kind" : "final def"}, {"label" : "initialRatesCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.mixture.HasInitialRatesCol.initialRatesCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#initialRatesCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInitialRates", "tail" : "(): Array[Double]", "member" : "com.github.ozancicek.artan.ml.mixture.HasInitialRates.getInitialRates", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#getInitialRates:Array[Double]", "kind" : "final def"}, {"label" : "initialRates", "tail" : ": Param[Array[Double]]", "member" : "com.github.ozancicek.artan.ml.mixture.HasInitialRates.initialRates", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#initialRates:org.apache.spark.ml.param.Param[Array[Double]]", "kind" : "final val"}, {"label" : "stateUpdateSpec", "tail" : "(): MixtureUpdateSpec[Long, PoissonDistribution, PoissonMixtureDistribution, PoissonMixtureInput, PoissonMixtureState, PoissonMixtureOutput]", "member" : "com.github.ozancicek.artan.ml.mixture.FiniteMixture.stateUpdateSpec", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#stateUpdateSpec:com.github.ozancicek.artan.ml.mixture.MixtureUpdateSpec[SampleType,DistributionType,MixtureType,InputType,StateType,OutputType]", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "com.github.ozancicek.artan.ml.mixture.FiniteMixture.transform", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#transform(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformAndValidateSchema", "tail" : "(schema: StructType): StructType", "member" : "com.github.ozancicek.artan.ml.mixture.FiniteMixture.transformAndValidateSchema", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#transformAndValidateSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "stateKeyEncoder", "tail" : ": Encoder[String]", "member" : "com.github.ozancicek.artan.ml.mixture.FiniteMixture.stateKeyEncoder", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#stateKeyEncoder:org.apache.spark.sql.Encoder[String]", "kind" : "implicit val"}, {"label" : "setEnableBatchEM", "tail" : "(): PoissonMixture", "member" : "com.github.ozancicek.artan.ml.mixture.MixtureParams.setEnableBatchEM", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#setEnableBatchEM:TransformerType", "kind" : "def"}, {"label" : "setBatchTrainTol", "tail" : "(value: Double): PoissonMixture", "member" : "com.github.ozancicek.artan.ml.mixture.MixtureParams.setBatchTrainTol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#setBatchTrainTol(value:Double):TransformerType", "kind" : "def"}, {"label" : "setBatchTrainMaxIter", "tail" : "(value: Int): PoissonMixture", "member" : "com.github.ozancicek.artan.ml.mixture.MixtureParams.setBatchTrainMaxIter", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#setBatchTrainMaxIter(value:Int):TransformerType", "kind" : "def"}, {"label" : "setInitialMixtureModelCol", "tail" : "(value: String): PoissonMixture", "member" : "com.github.ozancicek.artan.ml.mixture.MixtureParams.setInitialMixtureModelCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#setInitialMixtureModelCol(value:String):TransformerType", "kind" : "def"}, {"label" : "setDecayRate", "tail" : "(value: Double): PoissonMixture", "member" : "com.github.ozancicek.artan.ml.mixture.MixtureParams.setDecayRate", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#setDecayRate(value:Double):TransformerType", "kind" : "def"}, {"label" : "setMinibatchSizeCol", "tail" : "(value: String): PoissonMixture", "member" : "com.github.ozancicek.artan.ml.mixture.MixtureParams.setMinibatchSizeCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#setMinibatchSizeCol(value:String):TransformerType", "kind" : "def"}, {"label" : "setMinibatchSize", "tail" : "(value: Int): PoissonMixture", "member" : "com.github.ozancicek.artan.ml.mixture.MixtureParams.setMinibatchSize", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#setMinibatchSize(value:Int):TransformerType", "kind" : "def"}, {"label" : "setUpdateHoldoutCol", "tail" : "(value: String): PoissonMixture", "member" : "com.github.ozancicek.artan.ml.mixture.MixtureParams.setUpdateHoldoutCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#setUpdateHoldoutCol(value:String):TransformerType", "kind" : "def"}, {"label" : "setUpdateHoldout", "tail" : "(value: Int): PoissonMixture", "member" : "com.github.ozancicek.artan.ml.mixture.MixtureParams.setUpdateHoldout", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#setUpdateHoldout(value:Int):TransformerType", "kind" : "def"}, {"label" : "setSampleCol", "tail" : "(value: String): PoissonMixture", "member" : "com.github.ozancicek.artan.ml.mixture.MixtureParams.setSampleCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#setSampleCol(value:String):TransformerType", "kind" : "def"}, {"label" : "setStepSizeCol", "tail" : "(value: String): PoissonMixture", "member" : "com.github.ozancicek.artan.ml.mixture.MixtureParams.setStepSizeCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#setStepSizeCol(value:String):TransformerType", "kind" : "def"}, {"label" : "setStepSize", "tail" : "(value: Double): PoissonMixture", "member" : "com.github.ozancicek.artan.ml.mixture.MixtureParams.setStepSize", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#setStepSize(value:Double):TransformerType", "kind" : "def"}, {"label" : "setInitialWeightsCol", "tail" : "(value: String): PoissonMixture", "member" : "com.github.ozancicek.artan.ml.mixture.MixtureParams.setInitialWeightsCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#setInitialWeightsCol(value:String):TransformerType", "kind" : "def"}, {"label" : "setInitialWeights", "tail" : "(value: Array[Double]): PoissonMixture", "member" : "com.github.ozancicek.artan.ml.mixture.MixtureParams.setInitialWeights", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#setInitialWeights(value:Array[Double]):TransformerType", "kind" : "def"}, {"label" : "setMixtureCount", "tail" : "(value: Int): PoissonMixture", "member" : "com.github.ozancicek.artan.ml.mixture.MixtureParams.setMixtureCount", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#setMixtureCount(value:Int):TransformerType", "kind" : "def"}, {"label" : "getMixtureCount", "tail" : "(): Int", "member" : "com.github.ozancicek.artan.ml.mixture.HasMixtureCount.getMixtureCount", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#getMixtureCount:Int", "kind" : "final def"}, {"label" : "mixtureCount", "tail" : ": IntParam", "member" : "com.github.ozancicek.artan.ml.mixture.HasMixtureCount.mixtureCount", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#mixtureCount:org.apache.spark.ml.param.IntParam", "kind" : "final val"}, {"label" : "getBatchTrainEnabled", "tail" : "(): Boolean", "member" : "com.github.ozancicek.artan.ml.mixture.HasBatchTrainEnabled.getBatchTrainEnabled", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#getBatchTrainEnabled:Boolean", "kind" : "final def"}, {"label" : "batchTrainEnabled", "tail" : ": Param[Boolean]", "member" : "com.github.ozancicek.artan.ml.mixture.HasBatchTrainEnabled.batchTrainEnabled", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#batchTrainEnabled:org.apache.spark.ml.param.Param[Boolean]", "kind" : "final val"}, {"label" : "getUpdateHoldoutCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.mixture.HasUpdateHoldoutCol.getUpdateHoldoutCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#getUpdateHoldoutCol:String", "kind" : "final def"}, {"label" : "updateHoldoutCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.mixture.HasUpdateHoldoutCol.updateHoldoutCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#updateHoldoutCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getBatchTrainTol", "tail" : "(): Double", "member" : "com.github.ozancicek.artan.ml.mixture.HasBatchTrainTol.getBatchTrainTol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#getBatchTrainTol:Double", "kind" : "final def"}, {"label" : "batchTrainTol", "tail" : ": Param[Double]", "member" : "com.github.ozancicek.artan.ml.mixture.HasBatchTrainTol.batchTrainTol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#batchTrainTol:org.apache.spark.ml.param.Param[Double]", "kind" : "final val"}, {"label" : "getBatchTrainMaxIter", "tail" : "(): Int", "member" : "com.github.ozancicek.artan.ml.mixture.HasBatchTrainMaxIter.getBatchTrainMaxIter", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#getBatchTrainMaxIter:Int", "kind" : "final def"}, {"label" : "batchTrainMaxIter", "tail" : ": Param[Int]", "member" : "com.github.ozancicek.artan.ml.mixture.HasBatchTrainMaxIter.batchTrainMaxIter", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#batchTrainMaxIter:org.apache.spark.ml.param.Param[Int]", "kind" : "final val"}, {"label" : "getInitialMixtureModelCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.mixture.HasInitialMixtureModelCol.getInitialMixtureModelCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#getInitialMixtureModelCol:String", "kind" : "final def"}, {"label" : "initialMixtureModelCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.mixture.HasInitialMixtureModelCol.initialMixtureModelCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#initialMixtureModelCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getDecayRateExpr", "tail" : "(): UserDefinedFunction", "member" : "com.github.ozancicek.artan.ml.mixture.HasDecayRate.getDecayRateExpr", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#getDecayRateExpr:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "decayRate", "tail" : ": Param[Double]", "member" : "com.github.ozancicek.artan.ml.mixture.HasDecayRate.decayRate", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#decayRate:org.apache.spark.ml.param.Param[Double]", "kind" : "final val"}, {"label" : "getMinibatchSizeCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.mixture.HasMinibatchSizeCol.getMinibatchSizeCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#getMinibatchSizeCol:String", "kind" : "final def"}, {"label" : "minibatchSizeCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.mixture.HasMinibatchSizeCol.minibatchSizeCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#minibatchSizeCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getMinibatchSize", "tail" : "(): Int", "member" : "com.github.ozancicek.artan.ml.mixture.HasMinibatchSize.getMinibatchSize", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#getMinibatchSize:Int", "kind" : "final def"}, {"label" : "minibatchSize", "tail" : ": Param[Int]", "member" : "com.github.ozancicek.artan.ml.mixture.HasMinibatchSize.minibatchSize", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#minibatchSize:org.apache.spark.ml.param.Param[Int]", "kind" : "final val"}, {"label" : "getUpdateHoldout", "tail" : "(): Int", "member" : "com.github.ozancicek.artan.ml.mixture.HasUpdateHoldout.getUpdateHoldout", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#getUpdateHoldout:Int", "kind" : "final def"}, {"label" : "updateHoldout", "tail" : ": Param[Int]", "member" : "com.github.ozancicek.artan.ml.mixture.HasUpdateHoldout.updateHoldout", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#updateHoldout:org.apache.spark.ml.param.Param[Int]", "kind" : "final val"}, {"label" : "getSampleCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.mixture.HasSampleCol.getSampleCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#getSampleCol:String", "kind" : "final def"}, {"label" : "sampleCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.mixture.HasSampleCol.sampleCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#sampleCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getStepSize", "tail" : "(): Double", "member" : "com.github.ozancicek.artan.ml.mixture.HasStepSize.getStepSize", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#getStepSize:Double", "kind" : "final def"}, {"label" : "stepSize", "tail" : ": Param[Double]", "member" : "com.github.ozancicek.artan.ml.mixture.HasStepSize.stepSize", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#stepSize:org.apache.spark.ml.param.Param[Double]", "kind" : "final val"}, {"label" : "getStepSizeCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.mixture.HasStepSizeCol.getStepSizeCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#getStepSizeCol:String", "kind" : "final def"}, {"label" : "stepSizeCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.mixture.HasStepSizeCol.stepSizeCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#stepSizeCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInitialWeightsCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.mixture.HasInitialWeightsCol.getInitialWeightsCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#getInitialWeightsCol:String", "kind" : "final def"}, {"label" : "initialWeightsCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.mixture.HasInitialWeightsCol.initialWeightsCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#initialWeightsCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInitialWeights", "tail" : "(): Array[Double]", "member" : "com.github.ozancicek.artan.ml.mixture.HasInitialWeights.getInitialWeights", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#getInitialWeights:Array[Double]", "kind" : "final def"}, {"label" : "initialWeights", "tail" : ": Param[Array[Double]]", "member" : "com.github.ozancicek.artan.ml.mixture.HasInitialWeights.initialWeights", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#initialWeights:org.apache.spark.ml.param.Param[Array[Double]]", "kind" : "final val"}, {"label" : "transformWithState", "tail" : "(in: DataFrame)(keyEncoder: Encoder[String]): Dataset[PoissonMixtureOutput]", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.transformWithState", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#transformWithState(in:org.apache.spark.sql.DataFrame)(implicitkeyEncoder:org.apache.spark.sql.Encoder[GroupKeyType]):org.apache.spark.sql.Dataset[OutType]", "kind" : "def"}, {"label" : "getLinalgOptions", "tail" : "(): LinalgOptions", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.getLinalgOptions", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#getLinalgOptions:com.github.ozancicek.artan.ml.linalg.LinalgOptions", "kind" : "def"}, {"label" : "getUDFWithDefault", "tail" : "(defaultParam: Param[DefaultType], colParam: Param[String])(arg0: scala.reflect.api.JavaUniverse.TypeTag[DefaultType]): Column", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.getUDFWithDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#getUDFWithDefault[DefaultType](defaultParam:org.apache.spark.ml.param.Param[DefaultType],colParam:org.apache.spark.ml.param.Param[String])(implicitevidence$5:reflect.runtime.universe.TypeTag[DefaultType]):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "asDataFrameTransformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.asDataFrameTransformSchema", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#asDataFrameTransformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "asDataFrame", "tail" : "(ds: Dataset[PoissonMixtureOutput]): DataFrame", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.asDataFrame", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#asDataFrame(ds:org.apache.spark.sql.Dataset[OutType]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "validateWatermarkColumns", "tail" : "(schema: StructType): Unit", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.validateWatermarkColumns", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#validateWatermarkColumns(schema:org.apache.spark.sql.types.StructType):Unit", "kind" : "def"}, {"label" : "outEncoder", "tail" : ": Encoder[PoissonMixtureOutput]", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.outEncoder", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#outEncoder:org.apache.spark.sql.Encoder[OutType]", "kind" : "implicit val"}, {"label" : "rowEncoder", "tail" : ": Encoder[PoissonMixtureInput]", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.rowEncoder", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#rowEncoder:org.apache.spark.sql.Encoder[RowType]", "kind" : "implicit val"}, {"label" : "stateEncoder", "tail" : ": Encoder[PoissonMixtureState]", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.stateEncoder", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#stateEncoder:org.apache.spark.sql.Encoder[StateType]", "kind" : "implicit val"}, {"label" : "keyFunc", "tail" : "(): (PoissonMixtureInput) ⇒ String", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.keyFunc", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#keyFunc:RowType=>GroupKeyType", "kind" : "def"}, {"label" : "setWatermarkDuration", "tail" : "(value: String): PoissonMixture", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformerParams.setWatermarkDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#setWatermarkDuration(value:String):ImplType", "kind" : "def"}, {"label" : "setEventTimeCol", "tail" : "(value: String): PoissonMixture", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformerParams.setEventTimeCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#setEventTimeCol(value:String):ImplType", "kind" : "def"}, {"label" : "setStateTimeoutDuration", "tail" : "(value: String): PoissonMixture", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformerParams.setStateTimeoutDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#setStateTimeoutDuration(value:String):ImplType", "kind" : "def"}, {"label" : "setStateTimeoutMode", "tail" : "(value: String): PoissonMixture", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformerParams.setStateTimeoutMode", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#setStateTimeoutMode(value:String):ImplType", "kind" : "def"}, {"label" : "setStateKeyCol", "tail" : "(value: String): PoissonMixture", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformerParams.setStateKeyCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#setStateKeyCol(value:String):ImplType", "kind" : "def"}, {"label" : "getStateTimeoutDuration", "tail" : "(): Option[String]", "member" : "com.github.ozancicek.artan.ml.state.HasStateTimeoutDuration.getStateTimeoutDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#getStateTimeoutDuration:Option[String]", "kind" : "def"}, {"label" : "stateTimeoutDuration", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.state.HasStateTimeoutDuration.stateTimeoutDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#stateTimeoutDuration:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getStateKeyColumn", "tail" : "(): Column", "member" : "com.github.ozancicek.artan.ml.state.HasStateKeyCol.getStateKeyColumn", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#getStateKeyColumn:org.apache.spark.sql.Column", "kind" : "final def"}, {"label" : "getStateKeyColname", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.state.HasStateKeyCol.getStateKeyColname", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#getStateKeyColname:String", "kind" : "final def"}, {"label" : "stateKeyCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.state.HasStateKeyCol.stateKeyCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#stateKeyCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getWatermarkDuration", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.state.HasWatermarkDuration.getWatermarkDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#getWatermarkDuration:String", "kind" : "def"}, {"label" : "watermarkDuration", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.state.HasWatermarkDuration.watermarkDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#watermarkDuration:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getEventTimeCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.state.HasEventTimeCol.getEventTimeCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#getEventTimeCol:String", "kind" : "def"}, {"label" : "eventTimeCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.state.HasEventTimeCol.eventTimeCol", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#eventTimeCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getTimeoutMode", "tail" : "(): TimeoutMode", "member" : "com.github.ozancicek.artan.ml.state.HasStateTimeoutMode.getTimeoutMode", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#getTimeoutMode:com.github.ozancicek.artan.ml.state.TimeoutMode", "kind" : "def"}, {"label" : "timeoutMode", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.state.HasStateTimeoutMode.timeoutMode", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#timeoutMode:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#transform(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#transform(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): PoissonMixture.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): PoissonMixture.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): PoissonMixture.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): PoissonMixture.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): PoissonMixture.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): PoissonMixture.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "load", "tail" : "(path: String): PoissonMixture", "member" : "com.github.ozancicek.artan.ml.mixture.PoissonMixture.load", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture$.html#load(path:String):com.github.ozancicek.artan.ml.mixture.PoissonMixture", "kind" : "def"}, {"label" : "read", "tail" : "(): MLReader[PoissonMixture]", "member" : "org.apache.spark.ml.util.DefaultParamsReadable.read", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture$.html#read:org.apache.spark.ml.util.MLReader[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/ozancicek\/artan\/ml\/mixture\/PoissonMixture.html", "kind" : "class"}], "com.github.ozancicek.artan.ml" : [{"name" : "com.github.ozancicek.artan.ml.SparkFunctions", "shortDescription" : "", "object" : "com\/github\/ozancicek\/artan\/ml\/SparkFunctions$.html", "members_object" : [{"label" : "randMultiGaussianWithCol", "tail" : "(meanCol: String, covCol: String, size: Int, seed: Long): Column", "member" : "com.github.ozancicek.artan.ml.SparkFunctions.randMultiGaussianWithCol", "link" : "com\/github\/ozancicek\/artan\/ml\/SparkFunctions$.html#randMultiGaussianWithCol(meanCol:String,covCol:String,size:Int,seed:Long):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "randMultiGaussian", "tail" : "(mean: Vector, covariance: Matrix, seed: Long): Column", "member" : "com.github.ozancicek.artan.ml.SparkFunctions.randMultiGaussian", "link" : "com\/github\/ozancicek\/artan\/ml\/SparkFunctions$.html#randMultiGaussian(mean:org.apache.spark.ml.linalg.Vector,covariance:org.apache.spark.ml.linalg.Matrix,seed:Long):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "scaleToMultiGaussian", "tail" : "(): UserDefinedFunction", "member" : "com.github.ozancicek.artan.ml.SparkFunctions.scaleToMultiGaussian", "link" : "com\/github\/ozancicek\/artan\/ml\/SparkFunctions$.html#scaleToMultiGaussian:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "outerProduct", "tail" : "(): UserDefinedFunction", "member" : "com.github.ozancicek.artan.ml.SparkFunctions.outerProduct", "link" : "com\/github\/ozancicek\/artan\/ml\/SparkFunctions$.html#outerProduct:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "projectMatrix", "tail" : "(): UserDefinedFunction", "member" : "com.github.ozancicek.artan.ml.SparkFunctions.projectMatrix", "link" : "com\/github\/ozancicek\/artan\/ml\/SparkFunctions$.html#projectMatrix:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "multiplyMatrixVector", "tail" : "(): UserDefinedFunction", "member" : "com.github.ozancicek.artan.ml.SparkFunctions.multiplyMatrixVector", "link" : "com\/github\/ozancicek\/artan\/ml\/SparkFunctions$.html#multiplyMatrixVector:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "multiplyMatrix", "tail" : "(): UserDefinedFunction", "member" : "com.github.ozancicek.artan.ml.SparkFunctions.multiplyMatrix", "link" : "com\/github\/ozancicek\/artan\/ml\/SparkFunctions$.html#multiplyMatrix:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "diagMatrix", "tail" : "(): UserDefinedFunction", "member" : "com.github.ozancicek.artan.ml.SparkFunctions.diagMatrix", "link" : "com\/github\/ozancicek\/artan\/ml\/SparkFunctions$.html#diagMatrix:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "zerosMatrix", "tail" : "(): UserDefinedFunction", "member" : "com.github.ozancicek.artan.ml.SparkFunctions.zerosMatrix", "link" : "com\/github\/ozancicek\/artan\/ml\/SparkFunctions$.html#zerosMatrix:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "eyeMatrix", "tail" : "(): UserDefinedFunction", "member" : "com.github.ozancicek.artan.ml.SparkFunctions.eyeMatrix", "link" : "com\/github\/ozancicek\/artan\/ml\/SparkFunctions$.html#eyeMatrix:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "axpyVector", "tail" : "(): UserDefinedFunction", "member" : "com.github.ozancicek.artan.ml.SparkFunctions.axpyVector", "link" : "com\/github\/ozancicek\/artan\/ml\/SparkFunctions$.html#axpyVector:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "scalVector", "tail" : "(): UserDefinedFunction", "member" : "com.github.ozancicek.artan.ml.SparkFunctions.scalVector", "link" : "com\/github\/ozancicek\/artan\/ml\/SparkFunctions$.html#scalVector:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "dotVector", "tail" : "(): UserDefinedFunction", "member" : "com.github.ozancicek.artan.ml.SparkFunctions.dotVector", "link" : "com\/github\/ozancicek\/artan\/ml\/SparkFunctions$.html#dotVector:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "onesVector", "tail" : "(): UserDefinedFunction", "member" : "com.github.ozancicek.artan.ml.SparkFunctions.onesVector", "link" : "com\/github\/ozancicek\/artan\/ml\/SparkFunctions$.html#onesVector:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "zerosVector", "tail" : "(): UserDefinedFunction", "member" : "com.github.ozancicek.artan.ml.SparkFunctions.zerosVector", "link" : "com\/github\/ozancicek\/artan\/ml\/SparkFunctions$.html#zerosVector:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "matrixToArray", "tail" : "(): UserDefinedFunction", "member" : "com.github.ozancicek.artan.ml.SparkFunctions.matrixToArray", "link" : "com\/github\/ozancicek\/artan\/ml\/SparkFunctions$.html#matrixToArray:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "arrayToMatrix", "tail" : "(): UserDefinedFunction", "member" : "com.github.ozancicek.artan.ml.SparkFunctions.arrayToMatrix", "link" : "com\/github\/ozancicek\/artan\/ml\/SparkFunctions$.html#arrayToMatrix:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "vectorToArray", "tail" : "(): UserDefinedFunction", "member" : "com.github.ozancicek.artan.ml.SparkFunctions.vectorToArray", "link" : "com\/github\/ozancicek\/artan\/ml\/SparkFunctions$.html#vectorToArray:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "arrayToVector", "tail" : "(): UserDefinedFunction", "member" : "com.github.ozancicek.artan.ml.SparkFunctions.arrayToVector", "link" : "com\/github\/ozancicek\/artan\/ml\/SparkFunctions$.html#arrayToVector:org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/ozancicek\/artan\/ml\/SparkFunctions$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/ozancicek\/artan\/ml\/SparkFunctions$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/ozancicek\/artan\/ml\/SparkFunctions$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/ozancicek\/artan\/ml\/SparkFunctions$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/ozancicek\/artan\/ml\/SparkFunctions$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/ozancicek\/artan\/ml\/SparkFunctions$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/ozancicek\/artan\/ml\/SparkFunctions$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/SparkFunctions$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/SparkFunctions$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/SparkFunctions$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/ozancicek\/artan\/ml\/SparkFunctions$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/ozancicek\/artan\/ml\/SparkFunctions$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/ozancicek\/artan\/ml\/SparkFunctions$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/ozancicek\/artan\/ml\/SparkFunctions$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/ozancicek\/artan\/ml\/SparkFunctions$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/ozancicek\/artan\/ml\/SparkFunctions$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/ozancicek\/artan\/ml\/SparkFunctions$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/SparkFunctions$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/SparkFunctions$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "com.github.ozancicek.artan.ml.smoother" : [{"name" : "com.github.ozancicek.artan.ml.smoother.LinearKalmanSmoother", "shortDescription" : "Fixed lag linear kalman smoother using Rauch-Tung-Striebel method.", "object" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother$.html", "members_class" : [{"label" : "transform", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "com.github.ozancicek.artan.ml.smoother.LinearKalmanSmoother.transform", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#transform(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "copy", "tail" : "(extra: ParamMap): LinearKalmanSmoother", "member" : "com.github.ozancicek.artan.ml.smoother.LinearKalmanSmoother.copy", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#copy(extra:org.apache.spark.ml.param.ParamMap):com.github.ozancicek.artan.ml.smoother.LinearKalmanSmoother", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.github.ozancicek.artan.ml.smoother.LinearKalmanSmoother.transformSchema", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "stateUpdateSpec", "tail" : "(): LKFSmootherStateSpec", "member" : "com.github.ozancicek.artan.ml.smoother.LinearKalmanSmoother.stateUpdateSpec", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#stateUpdateSpec:com.github.ozancicek.artan.ml.smoother.LKFSmootherStateSpec", "kind" : "def"}, {"label" : "getFixedLag", "tail" : "(): Int", "member" : "com.github.ozancicek.artan.ml.smoother.LinearKalmanSmoother.getFixedLag", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#getFixedLag:Int", "kind" : "def"}, {"label" : "setFixedLag", "tail" : "(value: Int): LinearKalmanSmoother.this.type", "member" : "com.github.ozancicek.artan.ml.smoother.LinearKalmanSmoother.setFixedLag", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#setFixedLag(value:Int):LinearKalmanSmoother.this.type", "kind" : "def"}, {"label" : "fixedLag", "tail" : ": IntParam", "member" : "com.github.ozancicek.artan.ml.smoother.LinearKalmanSmoother.fixedLag", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#fixedLag:org.apache.spark.ml.param.IntParam", "kind" : "final val"}, {"label" : "defaultStateKey", "tail" : ": String", "member" : "com.github.ozancicek.artan.ml.smoother.LinearKalmanSmoother.defaultStateKey", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#defaultStateKey:String", "kind" : "val"}, {"label" : "stateKeyEncoder", "tail" : ": Encoder[String]", "member" : "com.github.ozancicek.artan.ml.smoother.LinearKalmanSmoother.stateKeyEncoder", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#stateKeyEncoder:org.apache.spark.sql.Encoder[String]", "kind" : "implicit val"}, {"member" : "com.github.ozancicek.artan.ml.smoother.LinearKalmanSmoother#<init>", "error" : "unsupported entity"}, {"member" : "com.github.ozancicek.artan.ml.smoother.LinearKalmanSmoother#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "com.github.ozancicek.artan.ml.smoother.LinearKalmanSmoother.uid", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#uid:String", "kind" : "val"}, {"label" : "write", "tail" : "(): MLWriter", "member" : "org.apache.spark.ml.util.DefaultParamsWritable.write", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#save(path:String):Unit", "kind" : "def"}, {"label" : "validateSchema", "tail" : "(schema: StructType): Unit", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.validateSchema", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#validateSchema(schema:org.apache.spark.sql.types.StructType):Unit", "kind" : "def"}, {"label" : "getControlFunctionExpr", "tail" : "(): Column", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.getControlFunctionExpr", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#getControlFunctionExpr:org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "getControlExpr", "tail" : "(): Column", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.getControlExpr", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#getControlExpr:org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "getMeasurementExpr", "tail" : "(): Column", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.getMeasurementExpr", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#getMeasurementExpr:org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "setMeasurementSize", "tail" : "(value: Int): LinearKalmanSmoother", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setMeasurementSize", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#setMeasurementSize(value:Int):ImplType", "kind" : "def"}, {"label" : "setStateSize", "tail" : "(value: Int): LinearKalmanSmoother", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setStateSize", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#setStateSize(value:Int):ImplType", "kind" : "def"}, {"label" : "setMultiStepPredict", "tail" : "(value: Int): LinearKalmanSmoother", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setMultiStepPredict", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#setMultiStepPredict(value:Int):ImplType", "kind" : "def"}, {"label" : "setOutputSystemMatrices", "tail" : "(): LinearKalmanSmoother", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setOutputSystemMatrices", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#setOutputSystemMatrices:ImplType", "kind" : "def"}, {"label" : "setControlCol", "tail" : "(value: String): LinearKalmanSmoother", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setControlCol", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#setControlCol(value:String):ImplType", "kind" : "def"}, {"label" : "setControlFunctionCol", "tail" : "(value: String): LinearKalmanSmoother", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setControlFunctionCol", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#setControlFunctionCol(value:String):ImplType", "kind" : "def"}, {"label" : "setMeasurementNoiseCol", "tail" : "(value: String): LinearKalmanSmoother", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setMeasurementNoiseCol", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#setMeasurementNoiseCol(value:String):ImplType", "kind" : "def"}, {"label" : "setMeasurementModelCol", "tail" : "(value: String): LinearKalmanSmoother", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setMeasurementModelCol", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#setMeasurementModelCol(value:String):ImplType", "kind" : "def"}, {"label" : "setProcessNoiseCol", "tail" : "(value: String): LinearKalmanSmoother", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setProcessNoiseCol", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#setProcessNoiseCol(value:String):ImplType", "kind" : "def"}, {"label" : "setProcessModelCol", "tail" : "(value: String): LinearKalmanSmoother", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setProcessModelCol", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#setProcessModelCol(value:String):ImplType", "kind" : "def"}, {"label" : "setMeasurementCol", "tail" : "(value: String): LinearKalmanSmoother", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setMeasurementCol", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#setMeasurementCol(value:String):ImplType", "kind" : "def"}, {"label" : "setMeasurementNoise", "tail" : "(value: Matrix): LinearKalmanSmoother", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setMeasurementNoise", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#setMeasurementNoise(value:org.apache.spark.ml.linalg.Matrix):ImplType", "kind" : "def"}, {"label" : "setMeasurementModel", "tail" : "(value: Matrix): LinearKalmanSmoother", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setMeasurementModel", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#setMeasurementModel(value:org.apache.spark.ml.linalg.Matrix):ImplType", "kind" : "def"}, {"label" : "setProcessNoise", "tail" : "(value: Matrix): LinearKalmanSmoother", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setProcessNoise", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#setProcessNoise(value:org.apache.spark.ml.linalg.Matrix):ImplType", "kind" : "def"}, {"label" : "setProcessModel", "tail" : "(value: Matrix): LinearKalmanSmoother", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setProcessModel", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#setProcessModel(value:org.apache.spark.ml.linalg.Matrix):ImplType", "kind" : "def"}, {"label" : "setFadingFactor", "tail" : "(value: Double): LinearKalmanSmoother", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setFadingFactor", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#setFadingFactor(value:Double):ImplType", "kind" : "def"}, {"label" : "setInitialStateDistributionCol", "tail" : "(value: String): LinearKalmanSmoother", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setInitialStateDistributionCol", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#setInitialStateDistributionCol(value:String):ImplType", "kind" : "def"}, {"label" : "setInitialStateCovarianceCol", "tail" : "(value: String): LinearKalmanSmoother", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setInitialStateCovarianceCol", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#setInitialStateCovarianceCol(value:String):ImplType", "kind" : "def"}, {"label" : "setInitialStateCovariance", "tail" : "(value: Matrix): LinearKalmanSmoother", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setInitialStateCovariance", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#setInitialStateCovariance(value:org.apache.spark.ml.linalg.Matrix):ImplType", "kind" : "def"}, {"label" : "setInitialStateMeanCol", "tail" : "(value: String): LinearKalmanSmoother", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setInitialStateMeanCol", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#setInitialStateMeanCol(value:String):ImplType", "kind" : "def"}, {"label" : "setInitialStateMean", "tail" : "(value: Vector): LinearKalmanSmoother", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setInitialStateMean", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#setInitialStateMean(value:org.apache.spark.ml.linalg.Vector):ImplType", "kind" : "def"}, {"label" : "getMeasurementSize", "tail" : "(): Int", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementSize.getMeasurementSize", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#getMeasurementSize:Int", "kind" : "final def"}, {"label" : "measurementSize", "tail" : ": IntParam", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementSize.measurementSize", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#measurementSize:org.apache.spark.ml.param.IntParam", "kind" : "final val"}, {"label" : "getStateSize", "tail" : "(): Int", "member" : "com.github.ozancicek.artan.ml.filter.HasStateSize.getStateSize", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#getStateSize:Int", "kind" : "final def"}, {"label" : "stateSize", "tail" : ": IntParam", "member" : "com.github.ozancicek.artan.ml.filter.HasStateSize.stateSize", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#stateSize:org.apache.spark.ml.param.IntParam", "kind" : "final val"}, {"label" : "getMultiStepPredict", "tail" : "(): Int", "member" : "com.github.ozancicek.artan.ml.filter.HasMultiStepPredict.getMultiStepPredict", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#getMultiStepPredict:Int", "kind" : "final def"}, {"label" : "multiStepPredict", "tail" : ": IntParam", "member" : "com.github.ozancicek.artan.ml.filter.HasMultiStepPredict.multiStepPredict", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#multiStepPredict:org.apache.spark.ml.param.IntParam", "kind" : "final val"}, {"label" : "getOutputSystemMatrices", "tail" : "(): Boolean", "member" : "com.github.ozancicek.artan.ml.filter.HasOutputSystemMatrices.getOutputSystemMatrices", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#getOutputSystemMatrices:Boolean", "kind" : "final def"}, {"label" : "outputSystemMatrices", "tail" : ": BooleanParam", "member" : "com.github.ozancicek.artan.ml.filter.HasOutputSystemMatrices.outputSystemMatrices", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#outputSystemMatrices:org.apache.spark.ml.param.BooleanParam", "kind" : "final val"}, {"label" : "getInitialStateDistributionCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateDistributionCol.getInitialStateDistributionCol", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#getInitialStateDistributionCol:String", "kind" : "final def"}, {"label" : "initialStateDistributionCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateDistributionCol.initialStateDistributionCol", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#initialStateDistributionCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInitialStateCovarianceCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateCovarianceCol.getInitialStateCovarianceCol", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#getInitialStateCovarianceCol:String", "kind" : "final def"}, {"label" : "initialStateCovarianceCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateCovarianceCol.initialStateCovarianceCol", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#initialStateCovarianceCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInitialStateMeanCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateMeanCol.getInitialStateMeanCol", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#getInitialStateMeanCol:String", "kind" : "final def"}, {"label" : "initialStateMeanCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateMeanCol.initialStateMeanCol", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#initialStateMeanCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getFadingFactor", "tail" : "(): Double", "member" : "com.github.ozancicek.artan.ml.filter.HasFadingFactor.getFadingFactor", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#getFadingFactor:Double", "kind" : "final def"}, {"label" : "fadingFactor", "tail" : ": DoubleParam", "member" : "com.github.ozancicek.artan.ml.filter.HasFadingFactor.fadingFactor", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#fadingFactor:org.apache.spark.ml.param.DoubleParam", "kind" : "final val"}, {"label" : "getInitialStateCovariance", "tail" : "(): Matrix", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateCovariance.getInitialStateCovariance", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#getInitialStateCovariance:org.apache.spark.ml.linalg.Matrix", "kind" : "final def"}, {"label" : "initialStateCovariance", "tail" : ": Param[Matrix]", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateCovariance.initialStateCovariance", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#initialStateCovariance:org.apache.spark.ml.param.Param[org.apache.spark.ml.linalg.Matrix]", "kind" : "final val"}, {"label" : "getInitialStateMean", "tail" : "(): Vector", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateMean.getInitialStateMean", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#getInitialStateMean:org.apache.spark.ml.linalg.Vector", "kind" : "final def"}, {"label" : "initialStateMean", "tail" : ": Param[Vector]", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateMean.initialStateMean", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#initialStateMean:org.apache.spark.ml.param.Param[org.apache.spark.ml.linalg.Vector]", "kind" : "final val"}, {"label" : "getMeasurementNoise", "tail" : "(): Matrix", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementNoise.getMeasurementNoise", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#getMeasurementNoise:org.apache.spark.ml.linalg.Matrix", "kind" : "final def"}, {"label" : "measurementNoise", "tail" : ": Param[Matrix]", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementNoise.measurementNoise", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#measurementNoise:org.apache.spark.ml.param.Param[org.apache.spark.ml.linalg.Matrix]", "kind" : "final val"}, {"label" : "getProcessNoise", "tail" : "(): Matrix", "member" : "com.github.ozancicek.artan.ml.filter.HasProcessNoise.getProcessNoise", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#getProcessNoise:org.apache.spark.ml.linalg.Matrix", "kind" : "final def"}, {"label" : "processNoise", "tail" : ": Param[Matrix]", "member" : "com.github.ozancicek.artan.ml.filter.HasProcessNoise.processNoise", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#processNoise:org.apache.spark.ml.param.Param[org.apache.spark.ml.linalg.Matrix]", "kind" : "final val"}, {"label" : "getMeasurementModel", "tail" : "(): Matrix", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementModel.getMeasurementModel", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#getMeasurementModel:org.apache.spark.ml.linalg.Matrix", "kind" : "final def"}, {"label" : "measurementModel", "tail" : ": Param[Matrix]", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementModel.measurementModel", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#measurementModel:org.apache.spark.ml.param.Param[org.apache.spark.ml.linalg.Matrix]", "kind" : "final val"}, {"label" : "getProcessModel", "tail" : "(): Matrix", "member" : "com.github.ozancicek.artan.ml.filter.HasProcessModel.getProcessModel", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#getProcessModel:org.apache.spark.ml.linalg.Matrix", "kind" : "final def"}, {"label" : "processModel", "tail" : ": Param[Matrix]", "member" : "com.github.ozancicek.artan.ml.filter.HasProcessModel.processModel", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#processModel:org.apache.spark.ml.param.Param[org.apache.spark.ml.linalg.Matrix]", "kind" : "final val"}, {"label" : "getControlFunctionCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasControlFunctionCol.getControlFunctionCol", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#getControlFunctionCol:String", "kind" : "final def"}, {"label" : "controlFunctionCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasControlFunctionCol.controlFunctionCol", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#controlFunctionCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getControlCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasControlCol.getControlCol", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#getControlCol:String", "kind" : "final def"}, {"label" : "controlCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasControlCol.controlCol", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#controlCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getProcessNoiseCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasProcessNoiseCol.getProcessNoiseCol", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#getProcessNoiseCol:String", "kind" : "final def"}, {"label" : "processNoiseCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasProcessNoiseCol.processNoiseCol", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#processNoiseCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getProcessModelCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasProcessModelCol.getProcessModelCol", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#getProcessModelCol:String", "kind" : "final def"}, {"label" : "processModelCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasProcessModelCol.processModelCol", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#processModelCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getMeasurementNoiseCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementNoiseCol.getMeasurementNoiseCol", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#getMeasurementNoiseCol:String", "kind" : "final def"}, {"label" : "measurementNoiseCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementNoiseCol.measurementNoiseCol", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#measurementNoiseCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getMeasurementModelCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementModelCol.getMeasurementModelCol", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#getMeasurementModelCol:String", "kind" : "final def"}, {"label" : "measurementModelCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementModelCol.measurementModelCol", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#measurementModelCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getMeasurementCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementCol.getMeasurementCol", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#getMeasurementCol:String", "kind" : "final def"}, {"label" : "measurementCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementCol.measurementCol", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#measurementCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "transformWithState", "tail" : "(in: DataFrame)(keyEncoder: Encoder[String]): Dataset[RTSOutput]", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.transformWithState", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#transformWithState(in:org.apache.spark.sql.DataFrame)(implicitkeyEncoder:org.apache.spark.sql.Encoder[GroupKeyType]):org.apache.spark.sql.Dataset[OutType]", "kind" : "def"}, {"label" : "getLinalgOptions", "tail" : "(): LinalgOptions", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.getLinalgOptions", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#getLinalgOptions:com.github.ozancicek.artan.ml.linalg.LinalgOptions", "kind" : "def"}, {"label" : "getUDFWithDefault", "tail" : "(defaultParam: Param[DefaultType], colParam: Param[String])(arg0: scala.reflect.api.JavaUniverse.TypeTag[DefaultType]): Column", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.getUDFWithDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#getUDFWithDefault[DefaultType](defaultParam:org.apache.spark.ml.param.Param[DefaultType],colParam:org.apache.spark.ml.param.Param[String])(implicitevidence$5:reflect.runtime.universe.TypeTag[DefaultType]):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "asDataFrameTransformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.asDataFrameTransformSchema", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#asDataFrameTransformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "asDataFrame", "tail" : "(ds: Dataset[RTSOutput]): DataFrame", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.asDataFrame", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#asDataFrame(ds:org.apache.spark.sql.Dataset[OutType]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "validateWatermarkColumns", "tail" : "(schema: StructType): Unit", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.validateWatermarkColumns", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#validateWatermarkColumns(schema:org.apache.spark.sql.types.StructType):Unit", "kind" : "def"}, {"label" : "outEncoder", "tail" : ": Encoder[RTSOutput]", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.outEncoder", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#outEncoder:org.apache.spark.sql.Encoder[OutType]", "kind" : "implicit val"}, {"label" : "rowEncoder", "tail" : ": Encoder[KalmanOutput]", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.rowEncoder", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#rowEncoder:org.apache.spark.sql.Encoder[RowType]", "kind" : "implicit val"}, {"label" : "stateEncoder", "tail" : ": Encoder[Queue[KalmanOutput]]", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.stateEncoder", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#stateEncoder:org.apache.spark.sql.Encoder[StateType]", "kind" : "implicit val"}, {"label" : "keyFunc", "tail" : "(): (KalmanOutput) ⇒ String", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.keyFunc", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#keyFunc:RowType=>GroupKeyType", "kind" : "def"}, {"label" : "setWatermarkDuration", "tail" : "(value: String): LinearKalmanSmoother", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformerParams.setWatermarkDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#setWatermarkDuration(value:String):ImplType", "kind" : "def"}, {"label" : "setEventTimeCol", "tail" : "(value: String): LinearKalmanSmoother", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformerParams.setEventTimeCol", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#setEventTimeCol(value:String):ImplType", "kind" : "def"}, {"label" : "setStateTimeoutDuration", "tail" : "(value: String): LinearKalmanSmoother", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformerParams.setStateTimeoutDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#setStateTimeoutDuration(value:String):ImplType", "kind" : "def"}, {"label" : "setStateTimeoutMode", "tail" : "(value: String): LinearKalmanSmoother", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformerParams.setStateTimeoutMode", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#setStateTimeoutMode(value:String):ImplType", "kind" : "def"}, {"label" : "setStateKeyCol", "tail" : "(value: String): LinearKalmanSmoother", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformerParams.setStateKeyCol", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#setStateKeyCol(value:String):ImplType", "kind" : "def"}, {"label" : "getStateTimeoutDuration", "tail" : "(): Option[String]", "member" : "com.github.ozancicek.artan.ml.state.HasStateTimeoutDuration.getStateTimeoutDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#getStateTimeoutDuration:Option[String]", "kind" : "def"}, {"label" : "stateTimeoutDuration", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.state.HasStateTimeoutDuration.stateTimeoutDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#stateTimeoutDuration:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getStateKeyColumn", "tail" : "(): Column", "member" : "com.github.ozancicek.artan.ml.state.HasStateKeyCol.getStateKeyColumn", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#getStateKeyColumn:org.apache.spark.sql.Column", "kind" : "final def"}, {"label" : "getStateKeyColname", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.state.HasStateKeyCol.getStateKeyColname", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#getStateKeyColname:String", "kind" : "final def"}, {"label" : "stateKeyCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.state.HasStateKeyCol.stateKeyCol", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#stateKeyCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getWatermarkDuration", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.state.HasWatermarkDuration.getWatermarkDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#getWatermarkDuration:String", "kind" : "def"}, {"label" : "watermarkDuration", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.state.HasWatermarkDuration.watermarkDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#watermarkDuration:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getEventTimeCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.state.HasEventTimeCol.getEventTimeCol", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#getEventTimeCol:String", "kind" : "def"}, {"label" : "eventTimeCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.state.HasEventTimeCol.eventTimeCol", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#eventTimeCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getTimeoutMode", "tail" : "(): TimeoutMode", "member" : "com.github.ozancicek.artan.ml.state.HasStateTimeoutMode.getTimeoutMode", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#getTimeoutMode:com.github.ozancicek.artan.ml.state.TimeoutMode", "kind" : "def"}, {"label" : "timeoutMode", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.state.HasStateTimeoutMode.timeoutMode", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#timeoutMode:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#transform(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#transform(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): LinearKalmanSmoother.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): LinearKalmanSmoother.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): LinearKalmanSmoother.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): LinearKalmanSmoother.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): LinearKalmanSmoother.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): LinearKalmanSmoother.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "load", "tail" : "(path: String): LinearKalmanSmoother", "member" : "com.github.ozancicek.artan.ml.smoother.LinearKalmanSmoother.load", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother$.html#load(path:String):com.github.ozancicek.artan.ml.smoother.LinearKalmanSmoother", "kind" : "def"}, {"label" : "read", "tail" : "(): MLReader[LinearKalmanSmoother]", "member" : "org.apache.spark.ml.util.DefaultParamsReadable.read", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother$.html#read:org.apache.spark.ml.util.MLReader[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/ozancicek\/artan\/ml\/smoother\/LinearKalmanSmoother.html", "kind" : "class"}], "com.github.ozancicek.artan.ml.stats" : [{"name" : "com.github.ozancicek.artan.ml.stats.BernoulliDistribution", "shortDescription" : "Represents a bernoulli distribution", "members_case class" : [{"label" : "loglikelihoods", "tail" : "(samples: Seq[Boolean]): Seq[Double]", "member" : "com.github.ozancicek.artan.ml.stats.BernoulliDistribution.loglikelihoods", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/BernoulliDistribution.html#loglikelihoods(samples:Seq[Boolean]):Seq[Double]", "kind" : "def"}, {"member" : "com.github.ozancicek.artan.ml.stats.BernoulliDistribution#<init>", "error" : "unsupported entity"}, {"label" : "probability", "tail" : ": Double", "member" : "com.github.ozancicek.artan.ml.stats.BernoulliDistribution.probability", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/BernoulliDistribution.html#probability:Double", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/BernoulliDistribution.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/BernoulliDistribution.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/BernoulliDistribution.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/BernoulliDistribution.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/BernoulliDistribution.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/BernoulliDistribution.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/BernoulliDistribution.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/BernoulliDistribution.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/BernoulliDistribution.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/BernoulliDistribution.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/BernoulliDistribution.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/BernoulliDistribution.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/BernoulliDistribution.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/BernoulliDistribution.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/BernoulliDistribution.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/BernoulliDistribution.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/ozancicek\/artan\/ml\/stats\/BernoulliDistribution.html", "kind" : "case class"}, {"name" : "com.github.ozancicek.artan.ml.stats.BernoulliMixtureDistribution", "shortDescription" : "Represents a bernoulli mixture distribution", "members_case class" : [{"member" : "com.github.ozancicek.artan.ml.stats.BernoulliMixtureDistribution#<init>", "error" : "unsupported entity"}, {"label" : "distributions", "tail" : ": Seq[BernoulliDistribution]", "member" : "com.github.ozancicek.artan.ml.stats.BernoulliMixtureDistribution.distributions", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/BernoulliMixtureDistribution.html#distributions:Seq[com.github.ozancicek.artan.ml.stats.BernoulliDistribution]", "kind" : "val"}, {"label" : "weights", "tail" : ": Seq[Double]", "member" : "com.github.ozancicek.artan.ml.stats.BernoulliMixtureDistribution.weights", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/BernoulliMixtureDistribution.html#weights:Seq[Double]", "kind" : "val"}, {"label" : "loglikelihood", "tail" : "(samples: Seq[Boolean]): Double", "member" : "com.github.ozancicek.artan.ml.stats.MixtureDistribution.loglikelihood", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/BernoulliMixtureDistribution.html#loglikelihood(samples:Seq[SampleType]):Double", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/BernoulliMixtureDistribution.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/BernoulliMixtureDistribution.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/BernoulliMixtureDistribution.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/BernoulliMixtureDistribution.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/BernoulliMixtureDistribution.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/BernoulliMixtureDistribution.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/BernoulliMixtureDistribution.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/BernoulliMixtureDistribution.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/BernoulliMixtureDistribution.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/BernoulliMixtureDistribution.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/BernoulliMixtureDistribution.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/BernoulliMixtureDistribution.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/BernoulliMixtureDistribution.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/BernoulliMixtureDistribution.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/BernoulliMixtureDistribution.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/BernoulliMixtureDistribution.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/ozancicek\/artan\/ml\/stats\/BernoulliMixtureDistribution.html", "kind" : "case class"}, {"name" : "com.github.ozancicek.artan.ml.stats.GaussianMixtureDistribution", "shortDescription" : "Represents a multivariate gaussian mixture distribution", "members_case class" : [{"member" : "com.github.ozancicek.artan.ml.stats.GaussianMixtureDistribution#<init>", "error" : "unsupported entity"}, {"label" : "distributions", "tail" : ": Seq[MultivariateGaussianDistribution]", "member" : "com.github.ozancicek.artan.ml.stats.GaussianMixtureDistribution.distributions", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/GaussianMixtureDistribution.html#distributions:Seq[com.github.ozancicek.artan.ml.stats.MultivariateGaussianDistribution]", "kind" : "val"}, {"label" : "weights", "tail" : ": Seq[Double]", "member" : "com.github.ozancicek.artan.ml.stats.GaussianMixtureDistribution.weights", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/GaussianMixtureDistribution.html#weights:Seq[Double]", "kind" : "val"}, {"label" : "loglikelihood", "tail" : "(samples: Seq[Vector]): Double", "member" : "com.github.ozancicek.artan.ml.stats.MixtureDistribution.loglikelihood", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/GaussianMixtureDistribution.html#loglikelihood(samples:Seq[SampleType]):Double", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/GaussianMixtureDistribution.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/GaussianMixtureDistribution.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/GaussianMixtureDistribution.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/GaussianMixtureDistribution.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/GaussianMixtureDistribution.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/GaussianMixtureDistribution.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/GaussianMixtureDistribution.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/GaussianMixtureDistribution.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/GaussianMixtureDistribution.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/GaussianMixtureDistribution.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/GaussianMixtureDistribution.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/GaussianMixtureDistribution.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/GaussianMixtureDistribution.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/GaussianMixtureDistribution.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/GaussianMixtureDistribution.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/GaussianMixtureDistribution.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/ozancicek\/artan\/ml\/stats\/GaussianMixtureDistribution.html", "kind" : "case class"}, {"name" : "com.github.ozancicek.artan.ml.stats.MultivariateGaussianDistribution", "shortDescription" : "Represents a multivariate gaussian distribution", "members_case class" : [{"label" : "loglikelihoods", "tail" : "(samples: Seq[Vector]): Seq[Double]", "member" : "com.github.ozancicek.artan.ml.stats.MultivariateGaussianDistribution.loglikelihoods", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/MultivariateGaussianDistribution.html#loglikelihoods(samples:Seq[org.apache.spark.ml.linalg.Vector]):Seq[Double]", "kind" : "def"}, {"member" : "com.github.ozancicek.artan.ml.stats.MultivariateGaussianDistribution#<init>", "error" : "unsupported entity"}, {"label" : "covariance", "tail" : ": Matrix", "member" : "com.github.ozancicek.artan.ml.stats.MultivariateGaussianDistribution.covariance", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/MultivariateGaussianDistribution.html#covariance:org.apache.spark.ml.linalg.Matrix", "kind" : "val"}, {"label" : "mean", "tail" : ": Vector", "member" : "com.github.ozancicek.artan.ml.stats.MultivariateGaussianDistribution.mean", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/MultivariateGaussianDistribution.html#mean:org.apache.spark.ml.linalg.Vector", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/MultivariateGaussianDistribution.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/MultivariateGaussianDistribution.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/MultivariateGaussianDistribution.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/MultivariateGaussianDistribution.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/MultivariateGaussianDistribution.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/MultivariateGaussianDistribution.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/MultivariateGaussianDistribution.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/MultivariateGaussianDistribution.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/MultivariateGaussianDistribution.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/MultivariateGaussianDistribution.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/MultivariateGaussianDistribution.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/MultivariateGaussianDistribution.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/MultivariateGaussianDistribution.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/MultivariateGaussianDistribution.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/MultivariateGaussianDistribution.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/MultivariateGaussianDistribution.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/ozancicek\/artan\/ml\/stats\/MultivariateGaussianDistribution.html", "kind" : "case class"}, {"name" : "com.github.ozancicek.artan.ml.stats.PoissonDistribution", "shortDescription" : "Represents a poisson distribution with a single parameter", "members_case class" : [{"label" : "loglikelihoods", "tail" : "(samples: Seq[Long]): Seq[Double]", "member" : "com.github.ozancicek.artan.ml.stats.PoissonDistribution.loglikelihoods", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/PoissonDistribution.html#loglikelihoods(samples:Seq[Long]):Seq[Double]", "kind" : "def"}, {"member" : "com.github.ozancicek.artan.ml.stats.PoissonDistribution#<init>", "error" : "unsupported entity"}, {"label" : "rate", "tail" : ": Double", "member" : "com.github.ozancicek.artan.ml.stats.PoissonDistribution.rate", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/PoissonDistribution.html#rate:Double", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/PoissonDistribution.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/PoissonDistribution.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/PoissonDistribution.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/PoissonDistribution.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/PoissonDistribution.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/PoissonDistribution.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/PoissonDistribution.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/PoissonDistribution.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/PoissonDistribution.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/PoissonDistribution.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/PoissonDistribution.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/PoissonDistribution.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/PoissonDistribution.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/PoissonDistribution.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/PoissonDistribution.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/PoissonDistribution.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/ozancicek\/artan\/ml\/stats\/PoissonDistribution.html", "kind" : "case class"}, {"name" : "com.github.ozancicek.artan.ml.stats.PoissonMixtureDistribution", "shortDescription" : "Represents a poisson gaussian mixture distribution", "members_case class" : [{"member" : "com.github.ozancicek.artan.ml.stats.PoissonMixtureDistribution#<init>", "error" : "unsupported entity"}, {"label" : "distributions", "tail" : ": Seq[PoissonDistribution]", "member" : "com.github.ozancicek.artan.ml.stats.PoissonMixtureDistribution.distributions", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/PoissonMixtureDistribution.html#distributions:Seq[com.github.ozancicek.artan.ml.stats.PoissonDistribution]", "kind" : "val"}, {"label" : "weights", "tail" : ": Seq[Double]", "member" : "com.github.ozancicek.artan.ml.stats.PoissonMixtureDistribution.weights", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/PoissonMixtureDistribution.html#weights:Seq[Double]", "kind" : "val"}, {"label" : "loglikelihood", "tail" : "(samples: Seq[Long]): Double", "member" : "com.github.ozancicek.artan.ml.stats.MixtureDistribution.loglikelihood", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/PoissonMixtureDistribution.html#loglikelihood(samples:Seq[SampleType]):Double", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/PoissonMixtureDistribution.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/PoissonMixtureDistribution.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/PoissonMixtureDistribution.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/PoissonMixtureDistribution.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/PoissonMixtureDistribution.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/PoissonMixtureDistribution.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/PoissonMixtureDistribution.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/PoissonMixtureDistribution.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/PoissonMixtureDistribution.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/PoissonMixtureDistribution.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/PoissonMixtureDistribution.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/PoissonMixtureDistribution.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/PoissonMixtureDistribution.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/PoissonMixtureDistribution.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/PoissonMixtureDistribution.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/stats\/PoissonMixtureDistribution.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/ozancicek\/artan\/ml\/stats\/PoissonMixtureDistribution.html", "kind" : "case class"}], "org.apache.spark.ml" : [{"name" : "org.apache.spark.ml.BLAS", "shortDescription" : "", "object" : "org\/apache\/spark\/ml\/BLAS$.html", "members_object" : [{"label" : "dger", "tail" : "(alpha: Double, x: DenseVector, y: DenseVector, a: DenseMatrix): Unit", "member" : "org.apache.spark.ml.BLAS.dger", "link" : "org\/apache\/spark\/ml\/BLAS$.html#dger(alpha:Double,x:org.apache.spark.ml.linalg.DenseVector,y:org.apache.spark.ml.linalg.DenseVector,a:org.apache.spark.ml.linalg.DenseMatrix):Unit", "kind" : "def"}, {"label" : "gemv", "tail" : "(alpha: Double, a: Matrix, b: Vector, beta: Double, c: DenseVector): Unit", "member" : "org.apache.spark.ml.BLAS.gemv", "link" : "org\/apache\/spark\/ml\/BLAS$.html#gemv(alpha:Double,a:org.apache.spark.ml.linalg.Matrix,b:org.apache.spark.ml.linalg.Vector,beta:Double,c:org.apache.spark.ml.linalg.DenseVector):Unit", "kind" : "def"}, {"label" : "gemm", "tail" : "(alpha: Double, a: Matrix, b: DenseMatrix, beta: Double, c: DenseMatrix): Unit", "member" : "org.apache.spark.ml.BLAS.gemm", "link" : "org\/apache\/spark\/ml\/BLAS$.html#gemm(alpha:Double,a:org.apache.spark.ml.linalg.Matrix,b:org.apache.spark.ml.linalg.DenseMatrix,beta:Double,c:org.apache.spark.ml.linalg.DenseMatrix):Unit", "kind" : "def"}, {"label" : "dsbmv", "tail" : "(alpha: Double, a: DenseVector, x: DenseVector, beta: Double, b: DenseVector): Unit", "member" : "org.apache.spark.ml.BLAS.dsbmv", "link" : "org\/apache\/spark\/ml\/BLAS$.html#dsbmv(alpha:Double,a:org.apache.spark.ml.linalg.DenseVector,x:org.apache.spark.ml.linalg.DenseVector,beta:Double,b:org.apache.spark.ml.linalg.DenseVector):Unit", "kind" : "def"}, {"label" : "elemMult", "tail" : "(alpha: Double, a: DenseVector, x: DenseVector): DenseVector", "member" : "org.apache.spark.ml.BLAS.elemMult", "link" : "org\/apache\/spark\/ml\/BLAS$.html#elemMult(alpha:Double,a:org.apache.spark.ml.linalg.DenseVector,x:org.apache.spark.ml.linalg.DenseVector):org.apache.spark.ml.linalg.DenseVector", "kind" : "def"}, {"label" : "dot", "tail" : "(x: Vector, y: Vector): Double", "member" : "org.apache.spark.ml.BLAS.dot", "link" : "org\/apache\/spark\/ml\/BLAS$.html#dot(x:org.apache.spark.ml.linalg.Vector,y:org.apache.spark.ml.linalg.Vector):Double", "kind" : "def"}, {"label" : "scal", "tail" : "(a: Double, x: Vector): Unit", "member" : "org.apache.spark.ml.BLAS.scal", "link" : "org\/apache\/spark\/ml\/BLAS$.html#scal(a:Double,x:org.apache.spark.ml.linalg.Vector):Unit", "kind" : "def"}, {"label" : "axpy", "tail" : "(a: Double, x: DenseMatrix, y: DenseMatrix): Unit", "member" : "org.apache.spark.ml.BLAS.axpy", "link" : "org\/apache\/spark\/ml\/BLAS$.html#axpy(a:Double,x:org.apache.spark.ml.linalg.DenseMatrix,y:org.apache.spark.ml.linalg.DenseMatrix):Unit", "kind" : "def"}, {"label" : "axpy", "tail" : "(a: Double, x: Vector, y: Vector): Unit", "member" : "org.apache.spark.ml.BLAS.axpy", "link" : "org\/apache\/spark\/ml\/BLAS$.html#axpy(a:Double,x:org.apache.spark.ml.linalg.Vector,y:org.apache.spark.ml.linalg.Vector):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/BLAS$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/BLAS$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/BLAS$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/BLAS$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/BLAS$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/BLAS$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/BLAS$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/BLAS$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/BLAS$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/BLAS$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/BLAS$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/BLAS$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/ml\/BLAS$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/BLAS$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/BLAS$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/BLAS$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/BLAS$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/BLAS$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/BLAS$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.spark.ml.BreezeConversions", "shortDescription" : "", "object" : "org\/apache\/spark\/ml\/BreezeConversions$.html", "members_object" : [{"label" : "BreezeToSparkDenseMatrix", "tail" : "", "member" : "org.apache.spark.ml.BreezeConversions.BreezeToSparkDenseMatrix", "link" : "org\/apache\/spark\/ml\/BreezeConversions$.html#BreezeToSparkDenseMatrixextendsAnyRef", "kind" : "implicit class"}, {"label" : "BreezeToSparkMatrix", "tail" : "", "member" : "org.apache.spark.ml.BreezeConversions.BreezeToSparkMatrix", "link" : "org\/apache\/spark\/ml\/BreezeConversions$.html#BreezeToSparkMatrixextendsAnyRef", "kind" : "implicit class"}, {"label" : "SparkToBreezeDenseMatrix", "tail" : "", "member" : "org.apache.spark.ml.BreezeConversions.SparkToBreezeDenseMatrix", "link" : "org\/apache\/spark\/ml\/BreezeConversions$.html#SparkToBreezeDenseMatrixextendsAnyRef", "kind" : "implicit class"}, {"label" : "SparkToBreezeMatrix", "tail" : "", "member" : "org.apache.spark.ml.BreezeConversions.SparkToBreezeMatrix", "link" : "org\/apache\/spark\/ml\/BreezeConversions$.html#SparkToBreezeMatrixextendsAnyRef", "kind" : "implicit class"}, {"label" : "BreezeToSparkDenseVector", "tail" : "", "member" : "org.apache.spark.ml.BreezeConversions.BreezeToSparkDenseVector", "link" : "org\/apache\/spark\/ml\/BreezeConversions$.html#BreezeToSparkDenseVectorextendsAnyRef", "kind" : "implicit class"}, {"label" : "BreezeToSparkVector", "tail" : "", "member" : "org.apache.spark.ml.BreezeConversions.BreezeToSparkVector", "link" : "org\/apache\/spark\/ml\/BreezeConversions$.html#BreezeToSparkVectorextendsAnyRef", "kind" : "implicit class"}, {"label" : "SparkToBreezeDenseVector", "tail" : "", "member" : "org.apache.spark.ml.BreezeConversions.SparkToBreezeDenseVector", "link" : "org\/apache\/spark\/ml\/BreezeConversions$.html#SparkToBreezeDenseVectorextendsAnyRef", "kind" : "implicit class"}, {"label" : "SparkToBreezeVector", "tail" : "", "member" : "org.apache.spark.ml.BreezeConversions.SparkToBreezeVector", "link" : "org\/apache\/spark\/ml\/BreezeConversions$.html#SparkToBreezeVectorextendsAnyRef", "kind" : "implicit class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/BreezeConversions$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/BreezeConversions$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/BreezeConversions$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/BreezeConversions$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/BreezeConversions$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/BreezeConversions$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/BreezeConversions$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/BreezeConversions$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/BreezeConversions$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/BreezeConversions$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/BreezeConversions$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/BreezeConversions$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/ml\/BreezeConversions$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/BreezeConversions$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/BreezeConversions$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/BreezeConversions$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/BreezeConversions$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/BreezeConversions$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/BreezeConversions$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.spark.ml.LAPACK", "shortDescription" : "", "object" : "org\/apache\/spark\/ml\/LAPACK$.html", "members_object" : [{"label" : "dgesvd", "tail" : "(a: DenseMatrix, u: DenseMatrix, s: DenseVector, v: DenseMatrix, raiseException: Boolean): Unit", "member" : "org.apache.spark.ml.LAPACK.dgesvd", "link" : "org\/apache\/spark\/ml\/LAPACK$.html#dgesvd(a:org.apache.spark.ml.linalg.DenseMatrix,u:org.apache.spark.ml.linalg.DenseMatrix,s:org.apache.spark.ml.linalg.DenseVector,v:org.apache.spark.ml.linalg.DenseMatrix,raiseException:Boolean):Unit", "kind" : "def"}, {"label" : "dgesdd", "tail" : "(a: DenseMatrix, u: DenseMatrix, s: DenseVector, v: DenseMatrix, raiseException: Boolean): Unit", "member" : "org.apache.spark.ml.LAPACK.dgesdd", "link" : "org\/apache\/spark\/ml\/LAPACK$.html#dgesdd(a:org.apache.spark.ml.linalg.DenseMatrix,u:org.apache.spark.ml.linalg.DenseMatrix,s:org.apache.spark.ml.linalg.DenseVector,v:org.apache.spark.ml.linalg.DenseMatrix,raiseException:Boolean):Unit", "kind" : "def"}, {"label" : "dgels", "tail" : "(a: DenseMatrix, b: DenseVector): DenseVector", "member" : "org.apache.spark.ml.LAPACK.dgels", "link" : "org\/apache\/spark\/ml\/LAPACK$.html#dgels(a:org.apache.spark.ml.linalg.DenseMatrix,b:org.apache.spark.ml.linalg.DenseVector):org.apache.spark.ml.linalg.DenseVector", "kind" : "def"}, {"label" : "dpotrf", "tail" : "(a: DenseMatrix): Unit", "member" : "org.apache.spark.ml.LAPACK.dpotrf", "link" : "org\/apache\/spark\/ml\/LAPACK$.html#dpotrf(a:org.apache.spark.ml.linalg.DenseMatrix):Unit", "kind" : "def"}, {"label" : "dgesv", "tail" : "(a: DenseMatrix, b: DenseMatrix): Unit", "member" : "org.apache.spark.ml.LAPACK.dgesv", "link" : "org\/apache\/spark\/ml\/LAPACK$.html#dgesv(a:org.apache.spark.ml.linalg.DenseMatrix,b:org.apache.spark.ml.linalg.DenseMatrix):Unit", "kind" : "def"}, {"label" : "lowerTriangle", "tail" : "(a: DenseMatrix): Unit", "member" : "org.apache.spark.ml.LAPACK.lowerTriangle", "link" : "org\/apache\/spark\/ml\/LAPACK$.html#lowerTriangle(a:org.apache.spark.ml.linalg.DenseMatrix):Unit", "kind" : "def"}, {"label" : "upperTriangle", "tail" : "(a: DenseMatrix): Unit", "member" : "org.apache.spark.ml.LAPACK.upperTriangle", "link" : "org\/apache\/spark\/ml\/LAPACK$.html#upperTriangle(a:org.apache.spark.ml.linalg.DenseMatrix):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/LAPACK$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/LAPACK$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/LAPACK$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/LAPACK$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/LAPACK$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/LAPACK$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/LAPACK$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/LAPACK$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/LAPACK$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/LAPACK$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/LAPACK$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/LAPACK$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/ml\/LAPACK$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/LAPACK$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/LAPACK$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/LAPACK$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/LAPACK$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/LAPACK$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/LAPACK$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "com.github.ozancicek.artan" : [], "org" : [], "com.github.ozancicek" : [], "com.github.ozancicek.artan.ml.filter" : [{"name" : "com.github.ozancicek.artan.ml.filter.CubatureKalmanFilter", "shortDescription" : "Cubature Kalman Filter (CKF), implemented with a stateful spark Transformer for running parallel filters \/w sparkdataframes.", "object" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter$.html", "members_class" : [{"label" : "stateUpdateSpec", "tail" : "(): CubatureKalmanStateSpec", "member" : "com.github.ozancicek.artan.ml.filter.CubatureKalmanFilter.stateUpdateSpec", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#stateUpdateSpec:com.github.ozancicek.artan.ml.filter.CubatureKalmanStateSpec", "kind" : "def"}, {"label" : "copy", "tail" : "(extra: ParamMap): CubatureKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.CubatureKalmanFilter.copy", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#copy(extra:org.apache.spark.ml.param.ParamMap):com.github.ozancicek.artan.ml.filter.CubatureKalmanFilter", "kind" : "def"}, {"label" : "setMeasurementFunction", "tail" : "(value: (Vector, Matrix) ⇒ Vector): CubatureKalmanFilter.this.type", "member" : "com.github.ozancicek.artan.ml.filter.CubatureKalmanFilter.setMeasurementFunction", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#setMeasurementFunction(value:(org.apache.spark.ml.linalg.Vector,org.apache.spark.ml.linalg.Matrix)=>org.apache.spark.ml.linalg.Vector):CubatureKalmanFilter.this.type", "kind" : "def"}, {"label" : "setProcessFunction", "tail" : "(value: (Vector, Matrix) ⇒ Vector): CubatureKalmanFilter.this.type", "member" : "com.github.ozancicek.artan.ml.filter.CubatureKalmanFilter.setProcessFunction", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#setProcessFunction(value:(org.apache.spark.ml.linalg.Vector,org.apache.spark.ml.linalg.Matrix)=>org.apache.spark.ml.linalg.Vector):CubatureKalmanFilter.this.type", "kind" : "def"}, {"label" : "defaultStateKey", "tail" : ": String", "member" : "com.github.ozancicek.artan.ml.filter.CubatureKalmanFilter.defaultStateKey", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#defaultStateKey:String", "kind" : "val"}, {"member" : "com.github.ozancicek.artan.ml.filter.CubatureKalmanFilter#<init>", "error" : "unsupported entity"}, {"member" : "com.github.ozancicek.artan.ml.filter.CubatureKalmanFilter#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "com.github.ozancicek.artan.ml.filter.CubatureKalmanFilter.uid", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#uid:String", "kind" : "val"}, {"label" : "write", "tail" : "(): MLWriter", "member" : "org.apache.spark.ml.util.DefaultParamsWritable.write", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#save(path:String):Unit", "kind" : "def"}, {"label" : "getMeasurementFunctionOpt", "tail" : "(): Option[(Vector, Matrix) ⇒ Vector]", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementFunction.getMeasurementFunctionOpt", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#getMeasurementFunctionOpt:Option[(org.apache.spark.ml.linalg.Vector,org.apache.spark.ml.linalg.Matrix)=>org.apache.spark.ml.linalg.Vector]", "kind" : "final def"}, {"label" : "measurementFunction", "tail" : ": VMVFunctionParam", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementFunction.measurementFunction", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#measurementFunction:com.github.ozancicek.artan.ml.filter.VMVFunctionParam", "kind" : "final val"}, {"label" : "getProcessFunctionOpt", "tail" : "(): Option[(Vector, Matrix) ⇒ Vector]", "member" : "com.github.ozancicek.artan.ml.filter.HasProcessFunction.getProcessFunctionOpt", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#getProcessFunctionOpt:Option[(org.apache.spark.ml.linalg.Vector,org.apache.spark.ml.linalg.Matrix)=>org.apache.spark.ml.linalg.Vector]", "kind" : "final def"}, {"label" : "processFunction", "tail" : ": VMVFunctionParam", "member" : "com.github.ozancicek.artan.ml.filter.HasProcessFunction.processFunction", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#processFunction:com.github.ozancicek.artan.ml.filter.VMVFunctionParam", "kind" : "final val"}, {"label" : "transform", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "com.github.ozancicek.artan.ml.filter.KalmanTransformer.transform", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#transform(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "asDataFrameTransformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.github.ozancicek.artan.ml.filter.KalmanTransformer.asDataFrameTransformSchema", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#asDataFrameTransformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "asDataFrame", "tail" : "(in: Dataset[KalmanOutput]): DataFrame", "member" : "com.github.ozancicek.artan.ml.filter.KalmanTransformer.asDataFrame", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#asDataFrame(in:org.apache.spark.sql.Dataset[com.github.ozancicek.artan.ml.state.KalmanOutput]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "outputResiduals", "tail" : "(): Boolean", "member" : "com.github.ozancicek.artan.ml.filter.KalmanTransformer.outputResiduals", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#outputResiduals:Boolean", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.github.ozancicek.artan.ml.filter.KalmanTransformer.transformSchema", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "setEnableMultipleModelAdaptiveEstimation", "tail" : "(): CubatureKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanTransformer.setEnableMultipleModelAdaptiveEstimation", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#setEnableMultipleModelAdaptiveEstimation:ImplType", "kind" : "def"}, {"label" : "setMultipleModelMeasurementWindowDuration", "tail" : "(value: String): CubatureKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanTransformer.setMultipleModelMeasurementWindowDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#setMultipleModelMeasurementWindowDuration(value:String):ImplType", "kind" : "def"}, {"label" : "setSlidingLikelihoodWindow", "tail" : "(value: Int): CubatureKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanTransformer.setSlidingLikelihoodWindow", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#setSlidingLikelihoodWindow(value:Int):ImplType", "kind" : "def"}, {"label" : "setCalculateSlidingLikelihood", "tail" : "(): CubatureKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanTransformer.setCalculateSlidingLikelihood", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#setCalculateSlidingLikelihood:ImplType", "kind" : "def"}, {"label" : "setCalculateMahalanobis", "tail" : "(): CubatureKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanTransformer.setCalculateMahalanobis", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#setCalculateMahalanobis:ImplType", "kind" : "def"}, {"label" : "setCalculateLoglikelihood", "tail" : "(): CubatureKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanTransformer.setCalculateLoglikelihood", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#setCalculateLoglikelihood:ImplType", "kind" : "def"}, {"label" : "stateKeyEncoder", "tail" : ": Encoder[String]", "member" : "com.github.ozancicek.artan.ml.filter.KalmanTransformer.stateKeyEncoder", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#stateKeyEncoder:org.apache.spark.sql.Encoder[String]", "kind" : "implicit val"}, {"label" : "getMultipleModelAdaptiveEstimationEnabled", "tail" : "(): Boolean", "member" : "com.github.ozancicek.artan.ml.filter.HasMultipleModelAdaptiveEstimationEnabled.getMultipleModelAdaptiveEstimationEnabled", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#getMultipleModelAdaptiveEstimationEnabled:Boolean", "kind" : "def"}, {"label" : "multipleModelAdaptiveEstimationEnabled", "tail" : ": BooleanParam", "member" : "com.github.ozancicek.artan.ml.filter.HasMultipleModelAdaptiveEstimationEnabled.multipleModelAdaptiveEstimationEnabled", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#multipleModelAdaptiveEstimationEnabled:org.apache.spark.ml.param.BooleanParam", "kind" : "final val"}, {"label" : "getMultipleModelMeasurementWindow", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasMultipleModelMeasurementWindowDuration.getMultipleModelMeasurementWindow", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#getMultipleModelMeasurementWindow:String", "kind" : "final def"}, {"label" : "multipleModelMeasurementWindowDuration", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasMultipleModelMeasurementWindowDuration.multipleModelMeasurementWindowDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#multipleModelMeasurementWindowDuration:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getSlidingLikelihoodWindow", "tail" : "(): Int", "member" : "com.github.ozancicek.artan.ml.filter.HasSlidingLikelihoodWindow.getSlidingLikelihoodWindow", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#getSlidingLikelihoodWindow:Int", "kind" : "final def"}, {"label" : "slidingLikelihoodWindow", "tail" : ": IntParam", "member" : "com.github.ozancicek.artan.ml.filter.HasSlidingLikelihoodWindow.slidingLikelihoodWindow", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#slidingLikelihoodWindow:org.apache.spark.ml.param.IntParam", "kind" : "final val"}, {"label" : "getCalculateSlidingLikelihood", "tail" : "(): Boolean", "member" : "com.github.ozancicek.artan.ml.filter.HasCalculateSlidingLikelihood.getCalculateSlidingLikelihood", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#getCalculateSlidingLikelihood:Boolean", "kind" : "final def"}, {"label" : "calculateSlidingLikelihood", "tail" : ": BooleanParam", "member" : "com.github.ozancicek.artan.ml.filter.HasCalculateSlidingLikelihood.calculateSlidingLikelihood", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#calculateSlidingLikelihood:org.apache.spark.ml.param.BooleanParam", "kind" : "final val"}, {"label" : "getCalculateLoglikelihood", "tail" : "(): Boolean", "member" : "com.github.ozancicek.artan.ml.filter.HasCalculateLoglikelihood.getCalculateLoglikelihood", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#getCalculateLoglikelihood:Boolean", "kind" : "final def"}, {"label" : "calculateLoglikelihood", "tail" : ": BooleanParam", "member" : "com.github.ozancicek.artan.ml.filter.HasCalculateLoglikelihood.calculateLoglikelihood", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#calculateLoglikelihood:org.apache.spark.ml.param.BooleanParam", "kind" : "final val"}, {"label" : "getCalculateMahalanobis", "tail" : "(): Boolean", "member" : "com.github.ozancicek.artan.ml.filter.HasCalculateMahalanobis.getCalculateMahalanobis", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#getCalculateMahalanobis:Boolean", "kind" : "final def"}, {"label" : "calculateMahalanobis", "tail" : ": BooleanParam", "member" : "com.github.ozancicek.artan.ml.filter.HasCalculateMahalanobis.calculateMahalanobis", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#calculateMahalanobis:org.apache.spark.ml.param.BooleanParam", "kind" : "final val"}, {"label" : "validateSchema", "tail" : "(schema: StructType): Unit", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.validateSchema", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#validateSchema(schema:org.apache.spark.sql.types.StructType):Unit", "kind" : "def"}, {"label" : "getControlFunctionExpr", "tail" : "(): Column", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.getControlFunctionExpr", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#getControlFunctionExpr:org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "getControlExpr", "tail" : "(): Column", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.getControlExpr", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#getControlExpr:org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "getMeasurementExpr", "tail" : "(): Column", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.getMeasurementExpr", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#getMeasurementExpr:org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "setMeasurementSize", "tail" : "(value: Int): CubatureKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setMeasurementSize", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#setMeasurementSize(value:Int):ImplType", "kind" : "def"}, {"label" : "setStateSize", "tail" : "(value: Int): CubatureKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setStateSize", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#setStateSize(value:Int):ImplType", "kind" : "def"}, {"label" : "setMultiStepPredict", "tail" : "(value: Int): CubatureKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setMultiStepPredict", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#setMultiStepPredict(value:Int):ImplType", "kind" : "def"}, {"label" : "setOutputSystemMatrices", "tail" : "(): CubatureKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setOutputSystemMatrices", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#setOutputSystemMatrices:ImplType", "kind" : "def"}, {"label" : "setControlCol", "tail" : "(value: String): CubatureKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setControlCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#setControlCol(value:String):ImplType", "kind" : "def"}, {"label" : "setControlFunctionCol", "tail" : "(value: String): CubatureKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setControlFunctionCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#setControlFunctionCol(value:String):ImplType", "kind" : "def"}, {"label" : "setMeasurementNoiseCol", "tail" : "(value: String): CubatureKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setMeasurementNoiseCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#setMeasurementNoiseCol(value:String):ImplType", "kind" : "def"}, {"label" : "setMeasurementModelCol", "tail" : "(value: String): CubatureKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setMeasurementModelCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#setMeasurementModelCol(value:String):ImplType", "kind" : "def"}, {"label" : "setProcessNoiseCol", "tail" : "(value: String): CubatureKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setProcessNoiseCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#setProcessNoiseCol(value:String):ImplType", "kind" : "def"}, {"label" : "setProcessModelCol", "tail" : "(value: String): CubatureKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setProcessModelCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#setProcessModelCol(value:String):ImplType", "kind" : "def"}, {"label" : "setMeasurementCol", "tail" : "(value: String): CubatureKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setMeasurementCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#setMeasurementCol(value:String):ImplType", "kind" : "def"}, {"label" : "setMeasurementNoise", "tail" : "(value: Matrix): CubatureKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setMeasurementNoise", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#setMeasurementNoise(value:org.apache.spark.ml.linalg.Matrix):ImplType", "kind" : "def"}, {"label" : "setMeasurementModel", "tail" : "(value: Matrix): CubatureKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setMeasurementModel", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#setMeasurementModel(value:org.apache.spark.ml.linalg.Matrix):ImplType", "kind" : "def"}, {"label" : "setProcessNoise", "tail" : "(value: Matrix): CubatureKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setProcessNoise", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#setProcessNoise(value:org.apache.spark.ml.linalg.Matrix):ImplType", "kind" : "def"}, {"label" : "setProcessModel", "tail" : "(value: Matrix): CubatureKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setProcessModel", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#setProcessModel(value:org.apache.spark.ml.linalg.Matrix):ImplType", "kind" : "def"}, {"label" : "setFadingFactor", "tail" : "(value: Double): CubatureKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setFadingFactor", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#setFadingFactor(value:Double):ImplType", "kind" : "def"}, {"label" : "setInitialStateDistributionCol", "tail" : "(value: String): CubatureKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setInitialStateDistributionCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#setInitialStateDistributionCol(value:String):ImplType", "kind" : "def"}, {"label" : "setInitialStateCovarianceCol", "tail" : "(value: String): CubatureKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setInitialStateCovarianceCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#setInitialStateCovarianceCol(value:String):ImplType", "kind" : "def"}, {"label" : "setInitialStateCovariance", "tail" : "(value: Matrix): CubatureKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setInitialStateCovariance", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#setInitialStateCovariance(value:org.apache.spark.ml.linalg.Matrix):ImplType", "kind" : "def"}, {"label" : "setInitialStateMeanCol", "tail" : "(value: String): CubatureKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setInitialStateMeanCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#setInitialStateMeanCol(value:String):ImplType", "kind" : "def"}, {"label" : "setInitialStateMean", "tail" : "(value: Vector): CubatureKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setInitialStateMean", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#setInitialStateMean(value:org.apache.spark.ml.linalg.Vector):ImplType", "kind" : "def"}, {"label" : "getMeasurementSize", "tail" : "(): Int", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementSize.getMeasurementSize", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#getMeasurementSize:Int", "kind" : "final def"}, {"label" : "measurementSize", "tail" : ": IntParam", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementSize.measurementSize", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#measurementSize:org.apache.spark.ml.param.IntParam", "kind" : "final val"}, {"label" : "getStateSize", "tail" : "(): Int", "member" : "com.github.ozancicek.artan.ml.filter.HasStateSize.getStateSize", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#getStateSize:Int", "kind" : "final def"}, {"label" : "stateSize", "tail" : ": IntParam", "member" : "com.github.ozancicek.artan.ml.filter.HasStateSize.stateSize", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#stateSize:org.apache.spark.ml.param.IntParam", "kind" : "final val"}, {"label" : "getMultiStepPredict", "tail" : "(): Int", "member" : "com.github.ozancicek.artan.ml.filter.HasMultiStepPredict.getMultiStepPredict", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#getMultiStepPredict:Int", "kind" : "final def"}, {"label" : "multiStepPredict", "tail" : ": IntParam", "member" : "com.github.ozancicek.artan.ml.filter.HasMultiStepPredict.multiStepPredict", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#multiStepPredict:org.apache.spark.ml.param.IntParam", "kind" : "final val"}, {"label" : "getOutputSystemMatrices", "tail" : "(): Boolean", "member" : "com.github.ozancicek.artan.ml.filter.HasOutputSystemMatrices.getOutputSystemMatrices", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#getOutputSystemMatrices:Boolean", "kind" : "final def"}, {"label" : "outputSystemMatrices", "tail" : ": BooleanParam", "member" : "com.github.ozancicek.artan.ml.filter.HasOutputSystemMatrices.outputSystemMatrices", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#outputSystemMatrices:org.apache.spark.ml.param.BooleanParam", "kind" : "final val"}, {"label" : "getInitialStateDistributionCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateDistributionCol.getInitialStateDistributionCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#getInitialStateDistributionCol:String", "kind" : "final def"}, {"label" : "initialStateDistributionCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateDistributionCol.initialStateDistributionCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#initialStateDistributionCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInitialStateCovarianceCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateCovarianceCol.getInitialStateCovarianceCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#getInitialStateCovarianceCol:String", "kind" : "final def"}, {"label" : "initialStateCovarianceCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateCovarianceCol.initialStateCovarianceCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#initialStateCovarianceCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInitialStateMeanCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateMeanCol.getInitialStateMeanCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#getInitialStateMeanCol:String", "kind" : "final def"}, {"label" : "initialStateMeanCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateMeanCol.initialStateMeanCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#initialStateMeanCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getFadingFactor", "tail" : "(): Double", "member" : "com.github.ozancicek.artan.ml.filter.HasFadingFactor.getFadingFactor", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#getFadingFactor:Double", "kind" : "final def"}, {"label" : "fadingFactor", "tail" : ": DoubleParam", "member" : "com.github.ozancicek.artan.ml.filter.HasFadingFactor.fadingFactor", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#fadingFactor:org.apache.spark.ml.param.DoubleParam", "kind" : "final val"}, {"label" : "getInitialStateCovariance", "tail" : "(): Matrix", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateCovariance.getInitialStateCovariance", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#getInitialStateCovariance:org.apache.spark.ml.linalg.Matrix", "kind" : "final def"}, {"label" : "initialStateCovariance", "tail" : ": Param[Matrix]", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateCovariance.initialStateCovariance", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#initialStateCovariance:org.apache.spark.ml.param.Param[org.apache.spark.ml.linalg.Matrix]", "kind" : "final val"}, {"label" : "getInitialStateMean", "tail" : "(): Vector", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateMean.getInitialStateMean", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#getInitialStateMean:org.apache.spark.ml.linalg.Vector", "kind" : "final def"}, {"label" : "initialStateMean", "tail" : ": Param[Vector]", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateMean.initialStateMean", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#initialStateMean:org.apache.spark.ml.param.Param[org.apache.spark.ml.linalg.Vector]", "kind" : "final val"}, {"label" : "getMeasurementNoise", "tail" : "(): Matrix", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementNoise.getMeasurementNoise", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#getMeasurementNoise:org.apache.spark.ml.linalg.Matrix", "kind" : "final def"}, {"label" : "measurementNoise", "tail" : ": Param[Matrix]", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementNoise.measurementNoise", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#measurementNoise:org.apache.spark.ml.param.Param[org.apache.spark.ml.linalg.Matrix]", "kind" : "final val"}, {"label" : "getProcessNoise", "tail" : "(): Matrix", "member" : "com.github.ozancicek.artan.ml.filter.HasProcessNoise.getProcessNoise", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#getProcessNoise:org.apache.spark.ml.linalg.Matrix", "kind" : "final def"}, {"label" : "processNoise", "tail" : ": Param[Matrix]", "member" : "com.github.ozancicek.artan.ml.filter.HasProcessNoise.processNoise", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#processNoise:org.apache.spark.ml.param.Param[org.apache.spark.ml.linalg.Matrix]", "kind" : "final val"}, {"label" : "getMeasurementModel", "tail" : "(): Matrix", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementModel.getMeasurementModel", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#getMeasurementModel:org.apache.spark.ml.linalg.Matrix", "kind" : "final def"}, {"label" : "measurementModel", "tail" : ": Param[Matrix]", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementModel.measurementModel", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#measurementModel:org.apache.spark.ml.param.Param[org.apache.spark.ml.linalg.Matrix]", "kind" : "final val"}, {"label" : "getProcessModel", "tail" : "(): Matrix", "member" : "com.github.ozancicek.artan.ml.filter.HasProcessModel.getProcessModel", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#getProcessModel:org.apache.spark.ml.linalg.Matrix", "kind" : "final def"}, {"label" : "processModel", "tail" : ": Param[Matrix]", "member" : "com.github.ozancicek.artan.ml.filter.HasProcessModel.processModel", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#processModel:org.apache.spark.ml.param.Param[org.apache.spark.ml.linalg.Matrix]", "kind" : "final val"}, {"label" : "getControlFunctionCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasControlFunctionCol.getControlFunctionCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#getControlFunctionCol:String", "kind" : "final def"}, {"label" : "controlFunctionCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasControlFunctionCol.controlFunctionCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#controlFunctionCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getControlCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasControlCol.getControlCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#getControlCol:String", "kind" : "final def"}, {"label" : "controlCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasControlCol.controlCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#controlCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getProcessNoiseCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasProcessNoiseCol.getProcessNoiseCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#getProcessNoiseCol:String", "kind" : "final def"}, {"label" : "processNoiseCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasProcessNoiseCol.processNoiseCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#processNoiseCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getProcessModelCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasProcessModelCol.getProcessModelCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#getProcessModelCol:String", "kind" : "final def"}, {"label" : "processModelCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasProcessModelCol.processModelCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#processModelCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getMeasurementNoiseCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementNoiseCol.getMeasurementNoiseCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#getMeasurementNoiseCol:String", "kind" : "final def"}, {"label" : "measurementNoiseCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementNoiseCol.measurementNoiseCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#measurementNoiseCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getMeasurementModelCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementModelCol.getMeasurementModelCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#getMeasurementModelCol:String", "kind" : "final def"}, {"label" : "measurementModelCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementModelCol.measurementModelCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#measurementModelCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getMeasurementCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementCol.getMeasurementCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#getMeasurementCol:String", "kind" : "final def"}, {"label" : "measurementCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementCol.measurementCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#measurementCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "transformWithState", "tail" : "(in: DataFrame)(keyEncoder: Encoder[String]): Dataset[KalmanOutput]", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.transformWithState", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#transformWithState(in:org.apache.spark.sql.DataFrame)(implicitkeyEncoder:org.apache.spark.sql.Encoder[GroupKeyType]):org.apache.spark.sql.Dataset[OutType]", "kind" : "def"}, {"label" : "getLinalgOptions", "tail" : "(): LinalgOptions", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.getLinalgOptions", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#getLinalgOptions:com.github.ozancicek.artan.ml.linalg.LinalgOptions", "kind" : "def"}, {"label" : "getUDFWithDefault", "tail" : "(defaultParam: Param[DefaultType], colParam: Param[String])(arg0: scala.reflect.api.JavaUniverse.TypeTag[DefaultType]): Column", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.getUDFWithDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#getUDFWithDefault[DefaultType](defaultParam:org.apache.spark.ml.param.Param[DefaultType],colParam:org.apache.spark.ml.param.Param[String])(implicitevidence$5:reflect.runtime.universe.TypeTag[DefaultType]):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "validateWatermarkColumns", "tail" : "(schema: StructType): Unit", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.validateWatermarkColumns", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#validateWatermarkColumns(schema:org.apache.spark.sql.types.StructType):Unit", "kind" : "def"}, {"label" : "outEncoder", "tail" : ": Encoder[KalmanOutput]", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.outEncoder", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#outEncoder:org.apache.spark.sql.Encoder[OutType]", "kind" : "implicit val"}, {"label" : "rowEncoder", "tail" : ": Encoder[KalmanInput]", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.rowEncoder", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#rowEncoder:org.apache.spark.sql.Encoder[RowType]", "kind" : "implicit val"}, {"label" : "stateEncoder", "tail" : ": Encoder[KalmanState]", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.stateEncoder", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#stateEncoder:org.apache.spark.sql.Encoder[StateType]", "kind" : "implicit val"}, {"label" : "keyFunc", "tail" : "(): (KalmanInput) ⇒ String", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.keyFunc", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#keyFunc:RowType=>GroupKeyType", "kind" : "def"}, {"label" : "setWatermarkDuration", "tail" : "(value: String): CubatureKalmanFilter", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformerParams.setWatermarkDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#setWatermarkDuration(value:String):ImplType", "kind" : "def"}, {"label" : "setEventTimeCol", "tail" : "(value: String): CubatureKalmanFilter", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformerParams.setEventTimeCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#setEventTimeCol(value:String):ImplType", "kind" : "def"}, {"label" : "setStateTimeoutDuration", "tail" : "(value: String): CubatureKalmanFilter", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformerParams.setStateTimeoutDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#setStateTimeoutDuration(value:String):ImplType", "kind" : "def"}, {"label" : "setStateTimeoutMode", "tail" : "(value: String): CubatureKalmanFilter", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformerParams.setStateTimeoutMode", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#setStateTimeoutMode(value:String):ImplType", "kind" : "def"}, {"label" : "setStateKeyCol", "tail" : "(value: String): CubatureKalmanFilter", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformerParams.setStateKeyCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#setStateKeyCol(value:String):ImplType", "kind" : "def"}, {"label" : "getStateTimeoutDuration", "tail" : "(): Option[String]", "member" : "com.github.ozancicek.artan.ml.state.HasStateTimeoutDuration.getStateTimeoutDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#getStateTimeoutDuration:Option[String]", "kind" : "def"}, {"label" : "stateTimeoutDuration", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.state.HasStateTimeoutDuration.stateTimeoutDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#stateTimeoutDuration:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getStateKeyColumn", "tail" : "(): Column", "member" : "com.github.ozancicek.artan.ml.state.HasStateKeyCol.getStateKeyColumn", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#getStateKeyColumn:org.apache.spark.sql.Column", "kind" : "final def"}, {"label" : "getStateKeyColname", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.state.HasStateKeyCol.getStateKeyColname", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#getStateKeyColname:String", "kind" : "final def"}, {"label" : "stateKeyCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.state.HasStateKeyCol.stateKeyCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#stateKeyCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getWatermarkDuration", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.state.HasWatermarkDuration.getWatermarkDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#getWatermarkDuration:String", "kind" : "def"}, {"label" : "watermarkDuration", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.state.HasWatermarkDuration.watermarkDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#watermarkDuration:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getEventTimeCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.state.HasEventTimeCol.getEventTimeCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#getEventTimeCol:String", "kind" : "def"}, {"label" : "eventTimeCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.state.HasEventTimeCol.eventTimeCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#eventTimeCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getTimeoutMode", "tail" : "(): TimeoutMode", "member" : "com.github.ozancicek.artan.ml.state.HasStateTimeoutMode.getTimeoutMode", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#getTimeoutMode:com.github.ozancicek.artan.ml.state.TimeoutMode", "kind" : "def"}, {"label" : "timeoutMode", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.state.HasStateTimeoutMode.timeoutMode", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#timeoutMode:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#transform(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#transform(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): CubatureKalmanFilter.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): CubatureKalmanFilter.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): CubatureKalmanFilter.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): CubatureKalmanFilter.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): CubatureKalmanFilter.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): CubatureKalmanFilter.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "load", "tail" : "(path: String): CubatureKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.CubatureKalmanFilter.load", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter$.html#load(path:String):com.github.ozancicek.artan.ml.filter.CubatureKalmanFilter", "kind" : "def"}, {"label" : "read", "tail" : "(): MLReader[CubatureKalmanFilter]", "member" : "org.apache.spark.ml.util.DefaultParamsReadable.read", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter$.html#read:org.apache.spark.ml.util.MLReader[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/ozancicek\/artan\/ml\/filter\/CubatureKalmanFilter.html", "kind" : "class"}, {"name" : "com.github.ozancicek.artan.ml.filter.ExtendedKalmanFilter", "shortDescription" : "Extended Kalman Filter (EKF), implemented with a stateful spark Transformer for running parallel filters \/w sparkdataframes.", "object" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter$.html", "members_class" : [{"label" : "stateUpdateSpec", "tail" : "(): ExtendedKalmanStateSpec", "member" : "com.github.ozancicek.artan.ml.filter.ExtendedKalmanFilter.stateUpdateSpec", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#stateUpdateSpec:com.github.ozancicek.artan.ml.filter.ExtendedKalmanStateSpec", "kind" : "def"}, {"label" : "copy", "tail" : "(extra: ParamMap): ExtendedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.ExtendedKalmanFilter.copy", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#copy(extra:org.apache.spark.ml.param.ParamMap):com.github.ozancicek.artan.ml.filter.ExtendedKalmanFilter", "kind" : "def"}, {"label" : "setMeasurementNoiseJacobian", "tail" : "(value: (Vector, Matrix) ⇒ Matrix): ExtendedKalmanFilter.this.type", "member" : "com.github.ozancicek.artan.ml.filter.ExtendedKalmanFilter.setMeasurementNoiseJacobian", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#setMeasurementNoiseJacobian(value:(org.apache.spark.ml.linalg.Vector,org.apache.spark.ml.linalg.Matrix)=>org.apache.spark.ml.linalg.Matrix):ExtendedKalmanFilter.this.type", "kind" : "def"}, {"label" : "setProcessNoiseJacobian", "tail" : "(value: (Vector, Matrix) ⇒ Matrix): ExtendedKalmanFilter.this.type", "member" : "com.github.ozancicek.artan.ml.filter.ExtendedKalmanFilter.setProcessNoiseJacobian", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#setProcessNoiseJacobian(value:(org.apache.spark.ml.linalg.Vector,org.apache.spark.ml.linalg.Matrix)=>org.apache.spark.ml.linalg.Matrix):ExtendedKalmanFilter.this.type", "kind" : "def"}, {"label" : "setMeasurementStateJacobian", "tail" : "(value: (Vector, Matrix) ⇒ Matrix): ExtendedKalmanFilter.this.type", "member" : "com.github.ozancicek.artan.ml.filter.ExtendedKalmanFilter.setMeasurementStateJacobian", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#setMeasurementStateJacobian(value:(org.apache.spark.ml.linalg.Vector,org.apache.spark.ml.linalg.Matrix)=>org.apache.spark.ml.linalg.Matrix):ExtendedKalmanFilter.this.type", "kind" : "def"}, {"label" : "setMeasurementFunction", "tail" : "(value: (Vector, Matrix) ⇒ Vector): ExtendedKalmanFilter.this.type", "member" : "com.github.ozancicek.artan.ml.filter.ExtendedKalmanFilter.setMeasurementFunction", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#setMeasurementFunction(value:(org.apache.spark.ml.linalg.Vector,org.apache.spark.ml.linalg.Matrix)=>org.apache.spark.ml.linalg.Vector):ExtendedKalmanFilter.this.type", "kind" : "def"}, {"label" : "setProcessStateJacobian", "tail" : "(value: (Vector, Matrix) ⇒ Matrix): ExtendedKalmanFilter.this.type", "member" : "com.github.ozancicek.artan.ml.filter.ExtendedKalmanFilter.setProcessStateJacobian", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#setProcessStateJacobian(value:(org.apache.spark.ml.linalg.Vector,org.apache.spark.ml.linalg.Matrix)=>org.apache.spark.ml.linalg.Matrix):ExtendedKalmanFilter.this.type", "kind" : "def"}, {"label" : "setProcessFunction", "tail" : "(value: (Vector, Matrix) ⇒ Vector): ExtendedKalmanFilter.this.type", "member" : "com.github.ozancicek.artan.ml.filter.ExtendedKalmanFilter.setProcessFunction", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#setProcessFunction(value:(org.apache.spark.ml.linalg.Vector,org.apache.spark.ml.linalg.Matrix)=>org.apache.spark.ml.linalg.Vector):ExtendedKalmanFilter.this.type", "kind" : "def"}, {"label" : "defaultStateKey", "tail" : ": String", "member" : "com.github.ozancicek.artan.ml.filter.ExtendedKalmanFilter.defaultStateKey", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#defaultStateKey:String", "kind" : "val"}, {"member" : "com.github.ozancicek.artan.ml.filter.ExtendedKalmanFilter#<init>", "error" : "unsupported entity"}, {"member" : "com.github.ozancicek.artan.ml.filter.ExtendedKalmanFilter#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "com.github.ozancicek.artan.ml.filter.ExtendedKalmanFilter.uid", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#uid:String", "kind" : "val"}, {"label" : "write", "tail" : "(): MLWriter", "member" : "org.apache.spark.ml.util.DefaultParamsWritable.write", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#save(path:String):Unit", "kind" : "def"}, {"label" : "getMeasurementNoiseJacobianOpt", "tail" : "(): Option[(Vector, Matrix) ⇒ Matrix]", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementNoiseJacobian.getMeasurementNoiseJacobianOpt", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#getMeasurementNoiseJacobianOpt:Option[(org.apache.spark.ml.linalg.Vector,org.apache.spark.ml.linalg.Matrix)=>org.apache.spark.ml.linalg.Matrix]", "kind" : "final def"}, {"label" : "measurementNoiseJacobian", "tail" : ": VMMFunctionParam", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementNoiseJacobian.measurementNoiseJacobian", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#measurementNoiseJacobian:com.github.ozancicek.artan.ml.filter.VMMFunctionParam", "kind" : "final val"}, {"label" : "getMeasurementStateJacobianOpt", "tail" : "(): Option[(Vector, Matrix) ⇒ Matrix]", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementStateJacobian.getMeasurementStateJacobianOpt", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#getMeasurementStateJacobianOpt:Option[(org.apache.spark.ml.linalg.Vector,org.apache.spark.ml.linalg.Matrix)=>org.apache.spark.ml.linalg.Matrix]", "kind" : "final def"}, {"label" : "measurementStateJacobian", "tail" : ": VMMFunctionParam", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementStateJacobian.measurementStateJacobian", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#measurementStateJacobian:com.github.ozancicek.artan.ml.filter.VMMFunctionParam", "kind" : "final val"}, {"label" : "getMeasurementFunctionOpt", "tail" : "(): Option[(Vector, Matrix) ⇒ Vector]", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementFunction.getMeasurementFunctionOpt", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#getMeasurementFunctionOpt:Option[(org.apache.spark.ml.linalg.Vector,org.apache.spark.ml.linalg.Matrix)=>org.apache.spark.ml.linalg.Vector]", "kind" : "final def"}, {"label" : "measurementFunction", "tail" : ": VMVFunctionParam", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementFunction.measurementFunction", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#measurementFunction:com.github.ozancicek.artan.ml.filter.VMVFunctionParam", "kind" : "final val"}, {"label" : "getProcessNoiseJacobianOpt", "tail" : "(): Option[(Vector, Matrix) ⇒ Matrix]", "member" : "com.github.ozancicek.artan.ml.filter.HasProcessNoiseJacobian.getProcessNoiseJacobianOpt", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#getProcessNoiseJacobianOpt:Option[(org.apache.spark.ml.linalg.Vector,org.apache.spark.ml.linalg.Matrix)=>org.apache.spark.ml.linalg.Matrix]", "kind" : "final def"}, {"label" : "processNoiseJacobian", "tail" : ": VMMFunctionParam", "member" : "com.github.ozancicek.artan.ml.filter.HasProcessNoiseJacobian.processNoiseJacobian", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#processNoiseJacobian:com.github.ozancicek.artan.ml.filter.VMMFunctionParam", "kind" : "final val"}, {"label" : "getProcessStateJacobianOpt", "tail" : "(): Option[(Vector, Matrix) ⇒ Matrix]", "member" : "com.github.ozancicek.artan.ml.filter.HasProcessStateJacobian.getProcessStateJacobianOpt", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#getProcessStateJacobianOpt:Option[(org.apache.spark.ml.linalg.Vector,org.apache.spark.ml.linalg.Matrix)=>org.apache.spark.ml.linalg.Matrix]", "kind" : "final def"}, {"label" : "processStateJacobian", "tail" : ": VMMFunctionParam", "member" : "com.github.ozancicek.artan.ml.filter.HasProcessStateJacobian.processStateJacobian", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#processStateJacobian:com.github.ozancicek.artan.ml.filter.VMMFunctionParam", "kind" : "final val"}, {"label" : "getProcessFunctionOpt", "tail" : "(): Option[(Vector, Matrix) ⇒ Vector]", "member" : "com.github.ozancicek.artan.ml.filter.HasProcessFunction.getProcessFunctionOpt", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#getProcessFunctionOpt:Option[(org.apache.spark.ml.linalg.Vector,org.apache.spark.ml.linalg.Matrix)=>org.apache.spark.ml.linalg.Vector]", "kind" : "final def"}, {"label" : "processFunction", "tail" : ": VMVFunctionParam", "member" : "com.github.ozancicek.artan.ml.filter.HasProcessFunction.processFunction", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#processFunction:com.github.ozancicek.artan.ml.filter.VMVFunctionParam", "kind" : "final val"}, {"label" : "transform", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "com.github.ozancicek.artan.ml.filter.KalmanTransformer.transform", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#transform(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "asDataFrameTransformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.github.ozancicek.artan.ml.filter.KalmanTransformer.asDataFrameTransformSchema", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#asDataFrameTransformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "asDataFrame", "tail" : "(in: Dataset[KalmanOutput]): DataFrame", "member" : "com.github.ozancicek.artan.ml.filter.KalmanTransformer.asDataFrame", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#asDataFrame(in:org.apache.spark.sql.Dataset[com.github.ozancicek.artan.ml.state.KalmanOutput]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "outputResiduals", "tail" : "(): Boolean", "member" : "com.github.ozancicek.artan.ml.filter.KalmanTransformer.outputResiduals", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#outputResiduals:Boolean", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.github.ozancicek.artan.ml.filter.KalmanTransformer.transformSchema", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "setEnableMultipleModelAdaptiveEstimation", "tail" : "(): ExtendedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanTransformer.setEnableMultipleModelAdaptiveEstimation", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#setEnableMultipleModelAdaptiveEstimation:ImplType", "kind" : "def"}, {"label" : "setMultipleModelMeasurementWindowDuration", "tail" : "(value: String): ExtendedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanTransformer.setMultipleModelMeasurementWindowDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#setMultipleModelMeasurementWindowDuration(value:String):ImplType", "kind" : "def"}, {"label" : "setSlidingLikelihoodWindow", "tail" : "(value: Int): ExtendedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanTransformer.setSlidingLikelihoodWindow", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#setSlidingLikelihoodWindow(value:Int):ImplType", "kind" : "def"}, {"label" : "setCalculateSlidingLikelihood", "tail" : "(): ExtendedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanTransformer.setCalculateSlidingLikelihood", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#setCalculateSlidingLikelihood:ImplType", "kind" : "def"}, {"label" : "setCalculateMahalanobis", "tail" : "(): ExtendedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanTransformer.setCalculateMahalanobis", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#setCalculateMahalanobis:ImplType", "kind" : "def"}, {"label" : "setCalculateLoglikelihood", "tail" : "(): ExtendedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanTransformer.setCalculateLoglikelihood", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#setCalculateLoglikelihood:ImplType", "kind" : "def"}, {"label" : "stateKeyEncoder", "tail" : ": Encoder[String]", "member" : "com.github.ozancicek.artan.ml.filter.KalmanTransformer.stateKeyEncoder", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#stateKeyEncoder:org.apache.spark.sql.Encoder[String]", "kind" : "implicit val"}, {"label" : "getMultipleModelAdaptiveEstimationEnabled", "tail" : "(): Boolean", "member" : "com.github.ozancicek.artan.ml.filter.HasMultipleModelAdaptiveEstimationEnabled.getMultipleModelAdaptiveEstimationEnabled", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#getMultipleModelAdaptiveEstimationEnabled:Boolean", "kind" : "def"}, {"label" : "multipleModelAdaptiveEstimationEnabled", "tail" : ": BooleanParam", "member" : "com.github.ozancicek.artan.ml.filter.HasMultipleModelAdaptiveEstimationEnabled.multipleModelAdaptiveEstimationEnabled", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#multipleModelAdaptiveEstimationEnabled:org.apache.spark.ml.param.BooleanParam", "kind" : "final val"}, {"label" : "getMultipleModelMeasurementWindow", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasMultipleModelMeasurementWindowDuration.getMultipleModelMeasurementWindow", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#getMultipleModelMeasurementWindow:String", "kind" : "final def"}, {"label" : "multipleModelMeasurementWindowDuration", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasMultipleModelMeasurementWindowDuration.multipleModelMeasurementWindowDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#multipleModelMeasurementWindowDuration:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getSlidingLikelihoodWindow", "tail" : "(): Int", "member" : "com.github.ozancicek.artan.ml.filter.HasSlidingLikelihoodWindow.getSlidingLikelihoodWindow", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#getSlidingLikelihoodWindow:Int", "kind" : "final def"}, {"label" : "slidingLikelihoodWindow", "tail" : ": IntParam", "member" : "com.github.ozancicek.artan.ml.filter.HasSlidingLikelihoodWindow.slidingLikelihoodWindow", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#slidingLikelihoodWindow:org.apache.spark.ml.param.IntParam", "kind" : "final val"}, {"label" : "getCalculateSlidingLikelihood", "tail" : "(): Boolean", "member" : "com.github.ozancicek.artan.ml.filter.HasCalculateSlidingLikelihood.getCalculateSlidingLikelihood", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#getCalculateSlidingLikelihood:Boolean", "kind" : "final def"}, {"label" : "calculateSlidingLikelihood", "tail" : ": BooleanParam", "member" : "com.github.ozancicek.artan.ml.filter.HasCalculateSlidingLikelihood.calculateSlidingLikelihood", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#calculateSlidingLikelihood:org.apache.spark.ml.param.BooleanParam", "kind" : "final val"}, {"label" : "getCalculateLoglikelihood", "tail" : "(): Boolean", "member" : "com.github.ozancicek.artan.ml.filter.HasCalculateLoglikelihood.getCalculateLoglikelihood", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#getCalculateLoglikelihood:Boolean", "kind" : "final def"}, {"label" : "calculateLoglikelihood", "tail" : ": BooleanParam", "member" : "com.github.ozancicek.artan.ml.filter.HasCalculateLoglikelihood.calculateLoglikelihood", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#calculateLoglikelihood:org.apache.spark.ml.param.BooleanParam", "kind" : "final val"}, {"label" : "getCalculateMahalanobis", "tail" : "(): Boolean", "member" : "com.github.ozancicek.artan.ml.filter.HasCalculateMahalanobis.getCalculateMahalanobis", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#getCalculateMahalanobis:Boolean", "kind" : "final def"}, {"label" : "calculateMahalanobis", "tail" : ": BooleanParam", "member" : "com.github.ozancicek.artan.ml.filter.HasCalculateMahalanobis.calculateMahalanobis", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#calculateMahalanobis:org.apache.spark.ml.param.BooleanParam", "kind" : "final val"}, {"label" : "validateSchema", "tail" : "(schema: StructType): Unit", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.validateSchema", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#validateSchema(schema:org.apache.spark.sql.types.StructType):Unit", "kind" : "def"}, {"label" : "getControlFunctionExpr", "tail" : "(): Column", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.getControlFunctionExpr", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#getControlFunctionExpr:org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "getControlExpr", "tail" : "(): Column", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.getControlExpr", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#getControlExpr:org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "getMeasurementExpr", "tail" : "(): Column", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.getMeasurementExpr", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#getMeasurementExpr:org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "setMeasurementSize", "tail" : "(value: Int): ExtendedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setMeasurementSize", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#setMeasurementSize(value:Int):ImplType", "kind" : "def"}, {"label" : "setStateSize", "tail" : "(value: Int): ExtendedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setStateSize", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#setStateSize(value:Int):ImplType", "kind" : "def"}, {"label" : "setMultiStepPredict", "tail" : "(value: Int): ExtendedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setMultiStepPredict", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#setMultiStepPredict(value:Int):ImplType", "kind" : "def"}, {"label" : "setOutputSystemMatrices", "tail" : "(): ExtendedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setOutputSystemMatrices", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#setOutputSystemMatrices:ImplType", "kind" : "def"}, {"label" : "setControlCol", "tail" : "(value: String): ExtendedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setControlCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#setControlCol(value:String):ImplType", "kind" : "def"}, {"label" : "setControlFunctionCol", "tail" : "(value: String): ExtendedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setControlFunctionCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#setControlFunctionCol(value:String):ImplType", "kind" : "def"}, {"label" : "setMeasurementNoiseCol", "tail" : "(value: String): ExtendedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setMeasurementNoiseCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#setMeasurementNoiseCol(value:String):ImplType", "kind" : "def"}, {"label" : "setMeasurementModelCol", "tail" : "(value: String): ExtendedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setMeasurementModelCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#setMeasurementModelCol(value:String):ImplType", "kind" : "def"}, {"label" : "setProcessNoiseCol", "tail" : "(value: String): ExtendedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setProcessNoiseCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#setProcessNoiseCol(value:String):ImplType", "kind" : "def"}, {"label" : "setProcessModelCol", "tail" : "(value: String): ExtendedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setProcessModelCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#setProcessModelCol(value:String):ImplType", "kind" : "def"}, {"label" : "setMeasurementCol", "tail" : "(value: String): ExtendedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setMeasurementCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#setMeasurementCol(value:String):ImplType", "kind" : "def"}, {"label" : "setMeasurementNoise", "tail" : "(value: Matrix): ExtendedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setMeasurementNoise", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#setMeasurementNoise(value:org.apache.spark.ml.linalg.Matrix):ImplType", "kind" : "def"}, {"label" : "setMeasurementModel", "tail" : "(value: Matrix): ExtendedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setMeasurementModel", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#setMeasurementModel(value:org.apache.spark.ml.linalg.Matrix):ImplType", "kind" : "def"}, {"label" : "setProcessNoise", "tail" : "(value: Matrix): ExtendedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setProcessNoise", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#setProcessNoise(value:org.apache.spark.ml.linalg.Matrix):ImplType", "kind" : "def"}, {"label" : "setProcessModel", "tail" : "(value: Matrix): ExtendedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setProcessModel", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#setProcessModel(value:org.apache.spark.ml.linalg.Matrix):ImplType", "kind" : "def"}, {"label" : "setFadingFactor", "tail" : "(value: Double): ExtendedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setFadingFactor", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#setFadingFactor(value:Double):ImplType", "kind" : "def"}, {"label" : "setInitialStateDistributionCol", "tail" : "(value: String): ExtendedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setInitialStateDistributionCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#setInitialStateDistributionCol(value:String):ImplType", "kind" : "def"}, {"label" : "setInitialStateCovarianceCol", "tail" : "(value: String): ExtendedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setInitialStateCovarianceCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#setInitialStateCovarianceCol(value:String):ImplType", "kind" : "def"}, {"label" : "setInitialStateCovariance", "tail" : "(value: Matrix): ExtendedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setInitialStateCovariance", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#setInitialStateCovariance(value:org.apache.spark.ml.linalg.Matrix):ImplType", "kind" : "def"}, {"label" : "setInitialStateMeanCol", "tail" : "(value: String): ExtendedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setInitialStateMeanCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#setInitialStateMeanCol(value:String):ImplType", "kind" : "def"}, {"label" : "setInitialStateMean", "tail" : "(value: Vector): ExtendedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setInitialStateMean", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#setInitialStateMean(value:org.apache.spark.ml.linalg.Vector):ImplType", "kind" : "def"}, {"label" : "getMeasurementSize", "tail" : "(): Int", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementSize.getMeasurementSize", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#getMeasurementSize:Int", "kind" : "final def"}, {"label" : "measurementSize", "tail" : ": IntParam", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementSize.measurementSize", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#measurementSize:org.apache.spark.ml.param.IntParam", "kind" : "final val"}, {"label" : "getStateSize", "tail" : "(): Int", "member" : "com.github.ozancicek.artan.ml.filter.HasStateSize.getStateSize", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#getStateSize:Int", "kind" : "final def"}, {"label" : "stateSize", "tail" : ": IntParam", "member" : "com.github.ozancicek.artan.ml.filter.HasStateSize.stateSize", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#stateSize:org.apache.spark.ml.param.IntParam", "kind" : "final val"}, {"label" : "getMultiStepPredict", "tail" : "(): Int", "member" : "com.github.ozancicek.artan.ml.filter.HasMultiStepPredict.getMultiStepPredict", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#getMultiStepPredict:Int", "kind" : "final def"}, {"label" : "multiStepPredict", "tail" : ": IntParam", "member" : "com.github.ozancicek.artan.ml.filter.HasMultiStepPredict.multiStepPredict", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#multiStepPredict:org.apache.spark.ml.param.IntParam", "kind" : "final val"}, {"label" : "getOutputSystemMatrices", "tail" : "(): Boolean", "member" : "com.github.ozancicek.artan.ml.filter.HasOutputSystemMatrices.getOutputSystemMatrices", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#getOutputSystemMatrices:Boolean", "kind" : "final def"}, {"label" : "outputSystemMatrices", "tail" : ": BooleanParam", "member" : "com.github.ozancicek.artan.ml.filter.HasOutputSystemMatrices.outputSystemMatrices", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#outputSystemMatrices:org.apache.spark.ml.param.BooleanParam", "kind" : "final val"}, {"label" : "getInitialStateDistributionCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateDistributionCol.getInitialStateDistributionCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#getInitialStateDistributionCol:String", "kind" : "final def"}, {"label" : "initialStateDistributionCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateDistributionCol.initialStateDistributionCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#initialStateDistributionCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInitialStateCovarianceCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateCovarianceCol.getInitialStateCovarianceCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#getInitialStateCovarianceCol:String", "kind" : "final def"}, {"label" : "initialStateCovarianceCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateCovarianceCol.initialStateCovarianceCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#initialStateCovarianceCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInitialStateMeanCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateMeanCol.getInitialStateMeanCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#getInitialStateMeanCol:String", "kind" : "final def"}, {"label" : "initialStateMeanCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateMeanCol.initialStateMeanCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#initialStateMeanCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getFadingFactor", "tail" : "(): Double", "member" : "com.github.ozancicek.artan.ml.filter.HasFadingFactor.getFadingFactor", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#getFadingFactor:Double", "kind" : "final def"}, {"label" : "fadingFactor", "tail" : ": DoubleParam", "member" : "com.github.ozancicek.artan.ml.filter.HasFadingFactor.fadingFactor", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#fadingFactor:org.apache.spark.ml.param.DoubleParam", "kind" : "final val"}, {"label" : "getInitialStateCovariance", "tail" : "(): Matrix", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateCovariance.getInitialStateCovariance", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#getInitialStateCovariance:org.apache.spark.ml.linalg.Matrix", "kind" : "final def"}, {"label" : "initialStateCovariance", "tail" : ": Param[Matrix]", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateCovariance.initialStateCovariance", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#initialStateCovariance:org.apache.spark.ml.param.Param[org.apache.spark.ml.linalg.Matrix]", "kind" : "final val"}, {"label" : "getInitialStateMean", "tail" : "(): Vector", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateMean.getInitialStateMean", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#getInitialStateMean:org.apache.spark.ml.linalg.Vector", "kind" : "final def"}, {"label" : "initialStateMean", "tail" : ": Param[Vector]", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateMean.initialStateMean", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#initialStateMean:org.apache.spark.ml.param.Param[org.apache.spark.ml.linalg.Vector]", "kind" : "final val"}, {"label" : "getMeasurementNoise", "tail" : "(): Matrix", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementNoise.getMeasurementNoise", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#getMeasurementNoise:org.apache.spark.ml.linalg.Matrix", "kind" : "final def"}, {"label" : "measurementNoise", "tail" : ": Param[Matrix]", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementNoise.measurementNoise", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#measurementNoise:org.apache.spark.ml.param.Param[org.apache.spark.ml.linalg.Matrix]", "kind" : "final val"}, {"label" : "getProcessNoise", "tail" : "(): Matrix", "member" : "com.github.ozancicek.artan.ml.filter.HasProcessNoise.getProcessNoise", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#getProcessNoise:org.apache.spark.ml.linalg.Matrix", "kind" : "final def"}, {"label" : "processNoise", "tail" : ": Param[Matrix]", "member" : "com.github.ozancicek.artan.ml.filter.HasProcessNoise.processNoise", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#processNoise:org.apache.spark.ml.param.Param[org.apache.spark.ml.linalg.Matrix]", "kind" : "final val"}, {"label" : "getMeasurementModel", "tail" : "(): Matrix", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementModel.getMeasurementModel", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#getMeasurementModel:org.apache.spark.ml.linalg.Matrix", "kind" : "final def"}, {"label" : "measurementModel", "tail" : ": Param[Matrix]", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementModel.measurementModel", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#measurementModel:org.apache.spark.ml.param.Param[org.apache.spark.ml.linalg.Matrix]", "kind" : "final val"}, {"label" : "getProcessModel", "tail" : "(): Matrix", "member" : "com.github.ozancicek.artan.ml.filter.HasProcessModel.getProcessModel", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#getProcessModel:org.apache.spark.ml.linalg.Matrix", "kind" : "final def"}, {"label" : "processModel", "tail" : ": Param[Matrix]", "member" : "com.github.ozancicek.artan.ml.filter.HasProcessModel.processModel", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#processModel:org.apache.spark.ml.param.Param[org.apache.spark.ml.linalg.Matrix]", "kind" : "final val"}, {"label" : "getControlFunctionCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasControlFunctionCol.getControlFunctionCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#getControlFunctionCol:String", "kind" : "final def"}, {"label" : "controlFunctionCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasControlFunctionCol.controlFunctionCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#controlFunctionCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getControlCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasControlCol.getControlCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#getControlCol:String", "kind" : "final def"}, {"label" : "controlCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasControlCol.controlCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#controlCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getProcessNoiseCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasProcessNoiseCol.getProcessNoiseCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#getProcessNoiseCol:String", "kind" : "final def"}, {"label" : "processNoiseCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasProcessNoiseCol.processNoiseCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#processNoiseCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getProcessModelCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasProcessModelCol.getProcessModelCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#getProcessModelCol:String", "kind" : "final def"}, {"label" : "processModelCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasProcessModelCol.processModelCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#processModelCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getMeasurementNoiseCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementNoiseCol.getMeasurementNoiseCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#getMeasurementNoiseCol:String", "kind" : "final def"}, {"label" : "measurementNoiseCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementNoiseCol.measurementNoiseCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#measurementNoiseCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getMeasurementModelCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementModelCol.getMeasurementModelCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#getMeasurementModelCol:String", "kind" : "final def"}, {"label" : "measurementModelCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementModelCol.measurementModelCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#measurementModelCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getMeasurementCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementCol.getMeasurementCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#getMeasurementCol:String", "kind" : "final def"}, {"label" : "measurementCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementCol.measurementCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#measurementCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "transformWithState", "tail" : "(in: DataFrame)(keyEncoder: Encoder[String]): Dataset[KalmanOutput]", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.transformWithState", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#transformWithState(in:org.apache.spark.sql.DataFrame)(implicitkeyEncoder:org.apache.spark.sql.Encoder[GroupKeyType]):org.apache.spark.sql.Dataset[OutType]", "kind" : "def"}, {"label" : "getLinalgOptions", "tail" : "(): LinalgOptions", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.getLinalgOptions", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#getLinalgOptions:com.github.ozancicek.artan.ml.linalg.LinalgOptions", "kind" : "def"}, {"label" : "getUDFWithDefault", "tail" : "(defaultParam: Param[DefaultType], colParam: Param[String])(arg0: scala.reflect.api.JavaUniverse.TypeTag[DefaultType]): Column", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.getUDFWithDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#getUDFWithDefault[DefaultType](defaultParam:org.apache.spark.ml.param.Param[DefaultType],colParam:org.apache.spark.ml.param.Param[String])(implicitevidence$5:reflect.runtime.universe.TypeTag[DefaultType]):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "validateWatermarkColumns", "tail" : "(schema: StructType): Unit", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.validateWatermarkColumns", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#validateWatermarkColumns(schema:org.apache.spark.sql.types.StructType):Unit", "kind" : "def"}, {"label" : "outEncoder", "tail" : ": Encoder[KalmanOutput]", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.outEncoder", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#outEncoder:org.apache.spark.sql.Encoder[OutType]", "kind" : "implicit val"}, {"label" : "rowEncoder", "tail" : ": Encoder[KalmanInput]", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.rowEncoder", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#rowEncoder:org.apache.spark.sql.Encoder[RowType]", "kind" : "implicit val"}, {"label" : "stateEncoder", "tail" : ": Encoder[KalmanState]", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.stateEncoder", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#stateEncoder:org.apache.spark.sql.Encoder[StateType]", "kind" : "implicit val"}, {"label" : "keyFunc", "tail" : "(): (KalmanInput) ⇒ String", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.keyFunc", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#keyFunc:RowType=>GroupKeyType", "kind" : "def"}, {"label" : "setWatermarkDuration", "tail" : "(value: String): ExtendedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformerParams.setWatermarkDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#setWatermarkDuration(value:String):ImplType", "kind" : "def"}, {"label" : "setEventTimeCol", "tail" : "(value: String): ExtendedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformerParams.setEventTimeCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#setEventTimeCol(value:String):ImplType", "kind" : "def"}, {"label" : "setStateTimeoutDuration", "tail" : "(value: String): ExtendedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformerParams.setStateTimeoutDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#setStateTimeoutDuration(value:String):ImplType", "kind" : "def"}, {"label" : "setStateTimeoutMode", "tail" : "(value: String): ExtendedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformerParams.setStateTimeoutMode", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#setStateTimeoutMode(value:String):ImplType", "kind" : "def"}, {"label" : "setStateKeyCol", "tail" : "(value: String): ExtendedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformerParams.setStateKeyCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#setStateKeyCol(value:String):ImplType", "kind" : "def"}, {"label" : "getStateTimeoutDuration", "tail" : "(): Option[String]", "member" : "com.github.ozancicek.artan.ml.state.HasStateTimeoutDuration.getStateTimeoutDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#getStateTimeoutDuration:Option[String]", "kind" : "def"}, {"label" : "stateTimeoutDuration", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.state.HasStateTimeoutDuration.stateTimeoutDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#stateTimeoutDuration:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getStateKeyColumn", "tail" : "(): Column", "member" : "com.github.ozancicek.artan.ml.state.HasStateKeyCol.getStateKeyColumn", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#getStateKeyColumn:org.apache.spark.sql.Column", "kind" : "final def"}, {"label" : "getStateKeyColname", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.state.HasStateKeyCol.getStateKeyColname", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#getStateKeyColname:String", "kind" : "final def"}, {"label" : "stateKeyCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.state.HasStateKeyCol.stateKeyCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#stateKeyCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getWatermarkDuration", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.state.HasWatermarkDuration.getWatermarkDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#getWatermarkDuration:String", "kind" : "def"}, {"label" : "watermarkDuration", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.state.HasWatermarkDuration.watermarkDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#watermarkDuration:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getEventTimeCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.state.HasEventTimeCol.getEventTimeCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#getEventTimeCol:String", "kind" : "def"}, {"label" : "eventTimeCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.state.HasEventTimeCol.eventTimeCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#eventTimeCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getTimeoutMode", "tail" : "(): TimeoutMode", "member" : "com.github.ozancicek.artan.ml.state.HasStateTimeoutMode.getTimeoutMode", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#getTimeoutMode:com.github.ozancicek.artan.ml.state.TimeoutMode", "kind" : "def"}, {"label" : "timeoutMode", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.state.HasStateTimeoutMode.timeoutMode", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#timeoutMode:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#transform(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#transform(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): ExtendedKalmanFilter.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): ExtendedKalmanFilter.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): ExtendedKalmanFilter.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): ExtendedKalmanFilter.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): ExtendedKalmanFilter.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): ExtendedKalmanFilter.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "load", "tail" : "(path: String): ExtendedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.ExtendedKalmanFilter.load", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter$.html#load(path:String):com.github.ozancicek.artan.ml.filter.ExtendedKalmanFilter", "kind" : "def"}, {"label" : "read", "tail" : "(): MLReader[ExtendedKalmanFilter]", "member" : "org.apache.spark.ml.util.DefaultParamsReadable.read", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter$.html#read:org.apache.spark.ml.util.MLReader[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/ozancicek\/artan\/ml\/filter\/ExtendedKalmanFilter.html", "kind" : "class"}, {"name" : "com.github.ozancicek.artan.ml.filter.LeastMeanSquaresFilter", "shortDescription" : "Normalized Least Mean Squares filter, implemented with a stateful spark Transformer for running parallelfilters \/w spark dataframes.", "object" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter$.html", "members_class" : [{"label" : "stateUpdateSpec", "tail" : "(): LeastMeanSquaresUpdateSpec", "member" : "com.github.ozancicek.artan.ml.filter.LeastMeanSquaresFilter.stateUpdateSpec", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#stateUpdateSpec:com.github.ozancicek.artan.ml.filter.LeastMeanSquaresUpdateSpec", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "com.github.ozancicek.artan.ml.filter.LeastMeanSquaresFilter.transform", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#transform(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.github.ozancicek.artan.ml.filter.LeastMeanSquaresFilter.transformSchema", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "setRegularization", "tail" : "(value: Double): LeastMeanSquaresFilter.this.type", "member" : "com.github.ozancicek.artan.ml.filter.LeastMeanSquaresFilter.setRegularization", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#setRegularization(value:Double):LeastMeanSquaresFilter.this.type", "kind" : "def"}, {"label" : "setLearningRate", "tail" : "(value: Double): LeastMeanSquaresFilter.this.type", "member" : "com.github.ozancicek.artan.ml.filter.LeastMeanSquaresFilter.setLearningRate", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#setLearningRate(value:Double):LeastMeanSquaresFilter.this.type", "kind" : "def"}, {"label" : "setInitialEstimateCol", "tail" : "(value: String): LeastMeanSquaresFilter.this.type", "member" : "com.github.ozancicek.artan.ml.filter.LeastMeanSquaresFilter.setInitialEstimateCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#setInitialEstimateCol(value:String):LeastMeanSquaresFilter.this.type", "kind" : "def"}, {"label" : "setInitialEstimate", "tail" : "(value: Vector): LeastMeanSquaresFilter.this.type", "member" : "com.github.ozancicek.artan.ml.filter.LeastMeanSquaresFilter.setInitialEstimate", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#setInitialEstimate(value:org.apache.spark.ml.linalg.Vector):LeastMeanSquaresFilter.this.type", "kind" : "def"}, {"label" : "setFeaturesCol", "tail" : "(value: String): LeastMeanSquaresFilter.this.type", "member" : "com.github.ozancicek.artan.ml.filter.LeastMeanSquaresFilter.setFeaturesCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#setFeaturesCol(value:String):LeastMeanSquaresFilter.this.type", "kind" : "def"}, {"label" : "setLabelCol", "tail" : "(value: String): LeastMeanSquaresFilter.this.type", "member" : "com.github.ozancicek.artan.ml.filter.LeastMeanSquaresFilter.setLabelCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#setLabelCol(value:String):LeastMeanSquaresFilter.this.type", "kind" : "def"}, {"label" : "copy", "tail" : "(extra: ParamMap): LeastMeanSquaresFilter", "member" : "com.github.ozancicek.artan.ml.filter.LeastMeanSquaresFilter.copy", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#copy(extra:org.apache.spark.ml.param.ParamMap):com.github.ozancicek.artan.ml.filter.LeastMeanSquaresFilter", "kind" : "def"}, {"label" : "defaultStateKey", "tail" : ": String", "member" : "com.github.ozancicek.artan.ml.filter.LeastMeanSquaresFilter.defaultStateKey", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#defaultStateKey:String", "kind" : "val"}, {"member" : "com.github.ozancicek.artan.ml.filter.LeastMeanSquaresFilter#<init>", "error" : "unsupported entity"}, {"label" : "stateKeyEncoder", "tail" : ": Encoder[String]", "member" : "com.github.ozancicek.artan.ml.filter.LeastMeanSquaresFilter.stateKeyEncoder", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#stateKeyEncoder:org.apache.spark.sql.Encoder[String]", "kind" : "implicit val"}, {"member" : "com.github.ozancicek.artan.ml.filter.LeastMeanSquaresFilter#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "com.github.ozancicek.artan.ml.filter.LeastMeanSquaresFilter.uid", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#uid:String", "kind" : "val"}, {"label" : "write", "tail" : "(): MLWriter", "member" : "org.apache.spark.ml.util.DefaultParamsWritable.write", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#save(path:String):Unit", "kind" : "def"}, {"label" : "getInitialStateMeanCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateMeanCol.getInitialStateMeanCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#getInitialStateMeanCol:String", "kind" : "final def"}, {"label" : "initialStateMeanCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateMeanCol.initialStateMeanCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#initialStateMeanCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getRegularizationConstant", "tail" : "(): Double", "member" : "com.github.ozancicek.artan.ml.filter.HasRegularizationConstant.getRegularizationConstant", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#getRegularizationConstant:Double", "kind" : "final def"}, {"label" : "regularizationConstant", "tail" : ": DoubleParam", "member" : "com.github.ozancicek.artan.ml.filter.HasRegularizationConstant.regularizationConstant", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#regularizationConstant:org.apache.spark.ml.param.DoubleParam", "kind" : "final val"}, {"label" : "getLearningRate", "tail" : "(): Double", "member" : "com.github.ozancicek.artan.ml.filter.HasLearningRate.getLearningRate", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#getLearningRate:Double", "kind" : "final def"}, {"label" : "learningRate", "tail" : ": DoubleParam", "member" : "com.github.ozancicek.artan.ml.filter.HasLearningRate.learningRate", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#learningRate:org.apache.spark.ml.param.DoubleParam", "kind" : "final val"}, {"label" : "getInitialStateMean", "tail" : "(): Vector", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateMean.getInitialStateMean", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#getInitialStateMean:org.apache.spark.ml.linalg.Vector", "kind" : "final def"}, {"label" : "initialStateMean", "tail" : ": Param[Vector]", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateMean.initialStateMean", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#initialStateMean:org.apache.spark.ml.param.Param[org.apache.spark.ml.linalg.Vector]", "kind" : "final val"}, {"label" : "getFeaturesCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasFeaturesCol.getFeaturesCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#getFeaturesCol:String", "kind" : "final def"}, {"label" : "featuresCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasFeaturesCol.featuresCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#featuresCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getLabelCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasLabelCol.getLabelCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#getLabelCol:String", "kind" : "final def"}, {"label" : "labelCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasLabelCol.labelCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#labelCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "transformWithState", "tail" : "(in: DataFrame)(keyEncoder: Encoder[String]): Dataset[LMSOutput]", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.transformWithState", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#transformWithState(in:org.apache.spark.sql.DataFrame)(implicitkeyEncoder:org.apache.spark.sql.Encoder[GroupKeyType]):org.apache.spark.sql.Dataset[OutType]", "kind" : "def"}, {"label" : "getLinalgOptions", "tail" : "(): LinalgOptions", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.getLinalgOptions", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#getLinalgOptions:com.github.ozancicek.artan.ml.linalg.LinalgOptions", "kind" : "def"}, {"label" : "getUDFWithDefault", "tail" : "(defaultParam: Param[DefaultType], colParam: Param[String])(arg0: scala.reflect.api.JavaUniverse.TypeTag[DefaultType]): Column", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.getUDFWithDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#getUDFWithDefault[DefaultType](defaultParam:org.apache.spark.ml.param.Param[DefaultType],colParam:org.apache.spark.ml.param.Param[String])(implicitevidence$5:reflect.runtime.universe.TypeTag[DefaultType]):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "asDataFrameTransformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.asDataFrameTransformSchema", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#asDataFrameTransformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "asDataFrame", "tail" : "(ds: Dataset[LMSOutput]): DataFrame", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.asDataFrame", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#asDataFrame(ds:org.apache.spark.sql.Dataset[OutType]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "validateWatermarkColumns", "tail" : "(schema: StructType): Unit", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.validateWatermarkColumns", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#validateWatermarkColumns(schema:org.apache.spark.sql.types.StructType):Unit", "kind" : "def"}, {"label" : "outEncoder", "tail" : ": Encoder[LMSOutput]", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.outEncoder", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#outEncoder:org.apache.spark.sql.Encoder[OutType]", "kind" : "implicit val"}, {"label" : "rowEncoder", "tail" : ": Encoder[LMSInput]", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.rowEncoder", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#rowEncoder:org.apache.spark.sql.Encoder[RowType]", "kind" : "implicit val"}, {"label" : "stateEncoder", "tail" : ": Encoder[LMSState]", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.stateEncoder", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#stateEncoder:org.apache.spark.sql.Encoder[StateType]", "kind" : "implicit val"}, {"label" : "keyFunc", "tail" : "(): (LMSInput) ⇒ String", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.keyFunc", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#keyFunc:RowType=>GroupKeyType", "kind" : "def"}, {"label" : "setWatermarkDuration", "tail" : "(value: String): LeastMeanSquaresFilter", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformerParams.setWatermarkDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#setWatermarkDuration(value:String):ImplType", "kind" : "def"}, {"label" : "setEventTimeCol", "tail" : "(value: String): LeastMeanSquaresFilter", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformerParams.setEventTimeCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#setEventTimeCol(value:String):ImplType", "kind" : "def"}, {"label" : "setStateTimeoutDuration", "tail" : "(value: String): LeastMeanSquaresFilter", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformerParams.setStateTimeoutDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#setStateTimeoutDuration(value:String):ImplType", "kind" : "def"}, {"label" : "setStateTimeoutMode", "tail" : "(value: String): LeastMeanSquaresFilter", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformerParams.setStateTimeoutMode", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#setStateTimeoutMode(value:String):ImplType", "kind" : "def"}, {"label" : "setStateKeyCol", "tail" : "(value: String): LeastMeanSquaresFilter", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformerParams.setStateKeyCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#setStateKeyCol(value:String):ImplType", "kind" : "def"}, {"label" : "getStateTimeoutDuration", "tail" : "(): Option[String]", "member" : "com.github.ozancicek.artan.ml.state.HasStateTimeoutDuration.getStateTimeoutDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#getStateTimeoutDuration:Option[String]", "kind" : "def"}, {"label" : "stateTimeoutDuration", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.state.HasStateTimeoutDuration.stateTimeoutDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#stateTimeoutDuration:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getStateKeyColumn", "tail" : "(): Column", "member" : "com.github.ozancicek.artan.ml.state.HasStateKeyCol.getStateKeyColumn", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#getStateKeyColumn:org.apache.spark.sql.Column", "kind" : "final def"}, {"label" : "getStateKeyColname", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.state.HasStateKeyCol.getStateKeyColname", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#getStateKeyColname:String", "kind" : "final def"}, {"label" : "stateKeyCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.state.HasStateKeyCol.stateKeyCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#stateKeyCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getWatermarkDuration", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.state.HasWatermarkDuration.getWatermarkDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#getWatermarkDuration:String", "kind" : "def"}, {"label" : "watermarkDuration", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.state.HasWatermarkDuration.watermarkDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#watermarkDuration:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getEventTimeCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.state.HasEventTimeCol.getEventTimeCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#getEventTimeCol:String", "kind" : "def"}, {"label" : "eventTimeCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.state.HasEventTimeCol.eventTimeCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#eventTimeCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getTimeoutMode", "tail" : "(): TimeoutMode", "member" : "com.github.ozancicek.artan.ml.state.HasStateTimeoutMode.getTimeoutMode", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#getTimeoutMode:com.github.ozancicek.artan.ml.state.TimeoutMode", "kind" : "def"}, {"label" : "timeoutMode", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.state.HasStateTimeoutMode.timeoutMode", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#timeoutMode:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#transform(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#transform(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): LeastMeanSquaresFilter.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): LeastMeanSquaresFilter.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): LeastMeanSquaresFilter.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): LeastMeanSquaresFilter.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): LeastMeanSquaresFilter.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): LeastMeanSquaresFilter.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "load", "tail" : "(path: String): LeastMeanSquaresFilter", "member" : "com.github.ozancicek.artan.ml.filter.LeastMeanSquaresFilter.load", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter$.html#load(path:String):com.github.ozancicek.artan.ml.filter.LeastMeanSquaresFilter", "kind" : "def"}, {"label" : "read", "tail" : "(): MLReader[LeastMeanSquaresFilter]", "member" : "org.apache.spark.ml.util.DefaultParamsReadable.read", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter$.html#read:org.apache.spark.ml.util.MLReader[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/ozancicek\/artan\/ml\/filter\/LeastMeanSquaresFilter.html", "kind" : "class"}, {"name" : "com.github.ozancicek.artan.ml.filter.LinearKalmanFilter", "shortDescription" : "Linear Kalman Filter, implemented with a stateful spark Transformer for running parallel filters \/w sparkdataframes.", "object" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter$.html", "members_class" : [{"label" : "stateUpdateSpec", "tail" : "(): LinearKalmanStateSpec", "member" : "com.github.ozancicek.artan.ml.filter.LinearKalmanFilter.stateUpdateSpec", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#stateUpdateSpec:com.github.ozancicek.artan.ml.filter.LinearKalmanStateSpec", "kind" : "def"}, {"label" : "copy", "tail" : "(extra: ParamMap): LinearKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.LinearKalmanFilter.copy", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#copy(extra:org.apache.spark.ml.param.ParamMap):com.github.ozancicek.artan.ml.filter.LinearKalmanFilter", "kind" : "def"}, {"label" : "defaultStateKey", "tail" : ": String", "member" : "com.github.ozancicek.artan.ml.filter.LinearKalmanFilter.defaultStateKey", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#defaultStateKey:String", "kind" : "val"}, {"member" : "com.github.ozancicek.artan.ml.filter.LinearKalmanFilter#<init>", "error" : "unsupported entity"}, {"member" : "com.github.ozancicek.artan.ml.filter.LinearKalmanFilter#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "com.github.ozancicek.artan.ml.filter.LinearKalmanFilter.uid", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#uid:String", "kind" : "val"}, {"label" : "write", "tail" : "(): MLWriter", "member" : "org.apache.spark.ml.util.DefaultParamsWritable.write", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#save(path:String):Unit", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "com.github.ozancicek.artan.ml.filter.KalmanTransformer.transform", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#transform(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "asDataFrameTransformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.github.ozancicek.artan.ml.filter.KalmanTransformer.asDataFrameTransformSchema", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#asDataFrameTransformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "asDataFrame", "tail" : "(in: Dataset[KalmanOutput]): DataFrame", "member" : "com.github.ozancicek.artan.ml.filter.KalmanTransformer.asDataFrame", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#asDataFrame(in:org.apache.spark.sql.Dataset[com.github.ozancicek.artan.ml.state.KalmanOutput]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "outputResiduals", "tail" : "(): Boolean", "member" : "com.github.ozancicek.artan.ml.filter.KalmanTransformer.outputResiduals", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#outputResiduals:Boolean", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.github.ozancicek.artan.ml.filter.KalmanTransformer.transformSchema", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "setEnableMultipleModelAdaptiveEstimation", "tail" : "(): LinearKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanTransformer.setEnableMultipleModelAdaptiveEstimation", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#setEnableMultipleModelAdaptiveEstimation:ImplType", "kind" : "def"}, {"label" : "setMultipleModelMeasurementWindowDuration", "tail" : "(value: String): LinearKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanTransformer.setMultipleModelMeasurementWindowDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#setMultipleModelMeasurementWindowDuration(value:String):ImplType", "kind" : "def"}, {"label" : "setSlidingLikelihoodWindow", "tail" : "(value: Int): LinearKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanTransformer.setSlidingLikelihoodWindow", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#setSlidingLikelihoodWindow(value:Int):ImplType", "kind" : "def"}, {"label" : "setCalculateSlidingLikelihood", "tail" : "(): LinearKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanTransformer.setCalculateSlidingLikelihood", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#setCalculateSlidingLikelihood:ImplType", "kind" : "def"}, {"label" : "setCalculateMahalanobis", "tail" : "(): LinearKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanTransformer.setCalculateMahalanobis", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#setCalculateMahalanobis:ImplType", "kind" : "def"}, {"label" : "setCalculateLoglikelihood", "tail" : "(): LinearKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanTransformer.setCalculateLoglikelihood", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#setCalculateLoglikelihood:ImplType", "kind" : "def"}, {"label" : "stateKeyEncoder", "tail" : ": Encoder[String]", "member" : "com.github.ozancicek.artan.ml.filter.KalmanTransformer.stateKeyEncoder", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#stateKeyEncoder:org.apache.spark.sql.Encoder[String]", "kind" : "implicit val"}, {"label" : "getMultipleModelAdaptiveEstimationEnabled", "tail" : "(): Boolean", "member" : "com.github.ozancicek.artan.ml.filter.HasMultipleModelAdaptiveEstimationEnabled.getMultipleModelAdaptiveEstimationEnabled", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#getMultipleModelAdaptiveEstimationEnabled:Boolean", "kind" : "def"}, {"label" : "multipleModelAdaptiveEstimationEnabled", "tail" : ": BooleanParam", "member" : "com.github.ozancicek.artan.ml.filter.HasMultipleModelAdaptiveEstimationEnabled.multipleModelAdaptiveEstimationEnabled", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#multipleModelAdaptiveEstimationEnabled:org.apache.spark.ml.param.BooleanParam", "kind" : "final val"}, {"label" : "getMultipleModelMeasurementWindow", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasMultipleModelMeasurementWindowDuration.getMultipleModelMeasurementWindow", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#getMultipleModelMeasurementWindow:String", "kind" : "final def"}, {"label" : "multipleModelMeasurementWindowDuration", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasMultipleModelMeasurementWindowDuration.multipleModelMeasurementWindowDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#multipleModelMeasurementWindowDuration:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getSlidingLikelihoodWindow", "tail" : "(): Int", "member" : "com.github.ozancicek.artan.ml.filter.HasSlidingLikelihoodWindow.getSlidingLikelihoodWindow", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#getSlidingLikelihoodWindow:Int", "kind" : "final def"}, {"label" : "slidingLikelihoodWindow", "tail" : ": IntParam", "member" : "com.github.ozancicek.artan.ml.filter.HasSlidingLikelihoodWindow.slidingLikelihoodWindow", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#slidingLikelihoodWindow:org.apache.spark.ml.param.IntParam", "kind" : "final val"}, {"label" : "getCalculateSlidingLikelihood", "tail" : "(): Boolean", "member" : "com.github.ozancicek.artan.ml.filter.HasCalculateSlidingLikelihood.getCalculateSlidingLikelihood", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#getCalculateSlidingLikelihood:Boolean", "kind" : "final def"}, {"label" : "calculateSlidingLikelihood", "tail" : ": BooleanParam", "member" : "com.github.ozancicek.artan.ml.filter.HasCalculateSlidingLikelihood.calculateSlidingLikelihood", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#calculateSlidingLikelihood:org.apache.spark.ml.param.BooleanParam", "kind" : "final val"}, {"label" : "getCalculateLoglikelihood", "tail" : "(): Boolean", "member" : "com.github.ozancicek.artan.ml.filter.HasCalculateLoglikelihood.getCalculateLoglikelihood", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#getCalculateLoglikelihood:Boolean", "kind" : "final def"}, {"label" : "calculateLoglikelihood", "tail" : ": BooleanParam", "member" : "com.github.ozancicek.artan.ml.filter.HasCalculateLoglikelihood.calculateLoglikelihood", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#calculateLoglikelihood:org.apache.spark.ml.param.BooleanParam", "kind" : "final val"}, {"label" : "getCalculateMahalanobis", "tail" : "(): Boolean", "member" : "com.github.ozancicek.artan.ml.filter.HasCalculateMahalanobis.getCalculateMahalanobis", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#getCalculateMahalanobis:Boolean", "kind" : "final def"}, {"label" : "calculateMahalanobis", "tail" : ": BooleanParam", "member" : "com.github.ozancicek.artan.ml.filter.HasCalculateMahalanobis.calculateMahalanobis", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#calculateMahalanobis:org.apache.spark.ml.param.BooleanParam", "kind" : "final val"}, {"label" : "validateSchema", "tail" : "(schema: StructType): Unit", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.validateSchema", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#validateSchema(schema:org.apache.spark.sql.types.StructType):Unit", "kind" : "def"}, {"label" : "getControlFunctionExpr", "tail" : "(): Column", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.getControlFunctionExpr", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#getControlFunctionExpr:org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "getControlExpr", "tail" : "(): Column", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.getControlExpr", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#getControlExpr:org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "getMeasurementExpr", "tail" : "(): Column", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.getMeasurementExpr", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#getMeasurementExpr:org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "setMeasurementSize", "tail" : "(value: Int): LinearKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setMeasurementSize", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#setMeasurementSize(value:Int):ImplType", "kind" : "def"}, {"label" : "setStateSize", "tail" : "(value: Int): LinearKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setStateSize", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#setStateSize(value:Int):ImplType", "kind" : "def"}, {"label" : "setMultiStepPredict", "tail" : "(value: Int): LinearKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setMultiStepPredict", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#setMultiStepPredict(value:Int):ImplType", "kind" : "def"}, {"label" : "setOutputSystemMatrices", "tail" : "(): LinearKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setOutputSystemMatrices", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#setOutputSystemMatrices:ImplType", "kind" : "def"}, {"label" : "setControlCol", "tail" : "(value: String): LinearKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setControlCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#setControlCol(value:String):ImplType", "kind" : "def"}, {"label" : "setControlFunctionCol", "tail" : "(value: String): LinearKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setControlFunctionCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#setControlFunctionCol(value:String):ImplType", "kind" : "def"}, {"label" : "setMeasurementNoiseCol", "tail" : "(value: String): LinearKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setMeasurementNoiseCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#setMeasurementNoiseCol(value:String):ImplType", "kind" : "def"}, {"label" : "setMeasurementModelCol", "tail" : "(value: String): LinearKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setMeasurementModelCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#setMeasurementModelCol(value:String):ImplType", "kind" : "def"}, {"label" : "setProcessNoiseCol", "tail" : "(value: String): LinearKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setProcessNoiseCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#setProcessNoiseCol(value:String):ImplType", "kind" : "def"}, {"label" : "setProcessModelCol", "tail" : "(value: String): LinearKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setProcessModelCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#setProcessModelCol(value:String):ImplType", "kind" : "def"}, {"label" : "setMeasurementCol", "tail" : "(value: String): LinearKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setMeasurementCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#setMeasurementCol(value:String):ImplType", "kind" : "def"}, {"label" : "setMeasurementNoise", "tail" : "(value: Matrix): LinearKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setMeasurementNoise", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#setMeasurementNoise(value:org.apache.spark.ml.linalg.Matrix):ImplType", "kind" : "def"}, {"label" : "setMeasurementModel", "tail" : "(value: Matrix): LinearKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setMeasurementModel", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#setMeasurementModel(value:org.apache.spark.ml.linalg.Matrix):ImplType", "kind" : "def"}, {"label" : "setProcessNoise", "tail" : "(value: Matrix): LinearKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setProcessNoise", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#setProcessNoise(value:org.apache.spark.ml.linalg.Matrix):ImplType", "kind" : "def"}, {"label" : "setProcessModel", "tail" : "(value: Matrix): LinearKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setProcessModel", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#setProcessModel(value:org.apache.spark.ml.linalg.Matrix):ImplType", "kind" : "def"}, {"label" : "setFadingFactor", "tail" : "(value: Double): LinearKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setFadingFactor", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#setFadingFactor(value:Double):ImplType", "kind" : "def"}, {"label" : "setInitialStateDistributionCol", "tail" : "(value: String): LinearKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setInitialStateDistributionCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#setInitialStateDistributionCol(value:String):ImplType", "kind" : "def"}, {"label" : "setInitialStateCovarianceCol", "tail" : "(value: String): LinearKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setInitialStateCovarianceCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#setInitialStateCovarianceCol(value:String):ImplType", "kind" : "def"}, {"label" : "setInitialStateCovariance", "tail" : "(value: Matrix): LinearKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setInitialStateCovariance", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#setInitialStateCovariance(value:org.apache.spark.ml.linalg.Matrix):ImplType", "kind" : "def"}, {"label" : "setInitialStateMeanCol", "tail" : "(value: String): LinearKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setInitialStateMeanCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#setInitialStateMeanCol(value:String):ImplType", "kind" : "def"}, {"label" : "setInitialStateMean", "tail" : "(value: Vector): LinearKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setInitialStateMean", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#setInitialStateMean(value:org.apache.spark.ml.linalg.Vector):ImplType", "kind" : "def"}, {"label" : "getMeasurementSize", "tail" : "(): Int", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementSize.getMeasurementSize", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#getMeasurementSize:Int", "kind" : "final def"}, {"label" : "measurementSize", "tail" : ": IntParam", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementSize.measurementSize", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#measurementSize:org.apache.spark.ml.param.IntParam", "kind" : "final val"}, {"label" : "getStateSize", "tail" : "(): Int", "member" : "com.github.ozancicek.artan.ml.filter.HasStateSize.getStateSize", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#getStateSize:Int", "kind" : "final def"}, {"label" : "stateSize", "tail" : ": IntParam", "member" : "com.github.ozancicek.artan.ml.filter.HasStateSize.stateSize", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#stateSize:org.apache.spark.ml.param.IntParam", "kind" : "final val"}, {"label" : "getMultiStepPredict", "tail" : "(): Int", "member" : "com.github.ozancicek.artan.ml.filter.HasMultiStepPredict.getMultiStepPredict", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#getMultiStepPredict:Int", "kind" : "final def"}, {"label" : "multiStepPredict", "tail" : ": IntParam", "member" : "com.github.ozancicek.artan.ml.filter.HasMultiStepPredict.multiStepPredict", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#multiStepPredict:org.apache.spark.ml.param.IntParam", "kind" : "final val"}, {"label" : "getOutputSystemMatrices", "tail" : "(): Boolean", "member" : "com.github.ozancicek.artan.ml.filter.HasOutputSystemMatrices.getOutputSystemMatrices", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#getOutputSystemMatrices:Boolean", "kind" : "final def"}, {"label" : "outputSystemMatrices", "tail" : ": BooleanParam", "member" : "com.github.ozancicek.artan.ml.filter.HasOutputSystemMatrices.outputSystemMatrices", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#outputSystemMatrices:org.apache.spark.ml.param.BooleanParam", "kind" : "final val"}, {"label" : "getInitialStateDistributionCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateDistributionCol.getInitialStateDistributionCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#getInitialStateDistributionCol:String", "kind" : "final def"}, {"label" : "initialStateDistributionCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateDistributionCol.initialStateDistributionCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#initialStateDistributionCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInitialStateCovarianceCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateCovarianceCol.getInitialStateCovarianceCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#getInitialStateCovarianceCol:String", "kind" : "final def"}, {"label" : "initialStateCovarianceCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateCovarianceCol.initialStateCovarianceCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#initialStateCovarianceCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInitialStateMeanCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateMeanCol.getInitialStateMeanCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#getInitialStateMeanCol:String", "kind" : "final def"}, {"label" : "initialStateMeanCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateMeanCol.initialStateMeanCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#initialStateMeanCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getFadingFactor", "tail" : "(): Double", "member" : "com.github.ozancicek.artan.ml.filter.HasFadingFactor.getFadingFactor", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#getFadingFactor:Double", "kind" : "final def"}, {"label" : "fadingFactor", "tail" : ": DoubleParam", "member" : "com.github.ozancicek.artan.ml.filter.HasFadingFactor.fadingFactor", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#fadingFactor:org.apache.spark.ml.param.DoubleParam", "kind" : "final val"}, {"label" : "getInitialStateCovariance", "tail" : "(): Matrix", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateCovariance.getInitialStateCovariance", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#getInitialStateCovariance:org.apache.spark.ml.linalg.Matrix", "kind" : "final def"}, {"label" : "initialStateCovariance", "tail" : ": Param[Matrix]", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateCovariance.initialStateCovariance", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#initialStateCovariance:org.apache.spark.ml.param.Param[org.apache.spark.ml.linalg.Matrix]", "kind" : "final val"}, {"label" : "getInitialStateMean", "tail" : "(): Vector", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateMean.getInitialStateMean", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#getInitialStateMean:org.apache.spark.ml.linalg.Vector", "kind" : "final def"}, {"label" : "initialStateMean", "tail" : ": Param[Vector]", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateMean.initialStateMean", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#initialStateMean:org.apache.spark.ml.param.Param[org.apache.spark.ml.linalg.Vector]", "kind" : "final val"}, {"label" : "getMeasurementNoise", "tail" : "(): Matrix", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementNoise.getMeasurementNoise", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#getMeasurementNoise:org.apache.spark.ml.linalg.Matrix", "kind" : "final def"}, {"label" : "measurementNoise", "tail" : ": Param[Matrix]", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementNoise.measurementNoise", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#measurementNoise:org.apache.spark.ml.param.Param[org.apache.spark.ml.linalg.Matrix]", "kind" : "final val"}, {"label" : "getProcessNoise", "tail" : "(): Matrix", "member" : "com.github.ozancicek.artan.ml.filter.HasProcessNoise.getProcessNoise", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#getProcessNoise:org.apache.spark.ml.linalg.Matrix", "kind" : "final def"}, {"label" : "processNoise", "tail" : ": Param[Matrix]", "member" : "com.github.ozancicek.artan.ml.filter.HasProcessNoise.processNoise", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#processNoise:org.apache.spark.ml.param.Param[org.apache.spark.ml.linalg.Matrix]", "kind" : "final val"}, {"label" : "getMeasurementModel", "tail" : "(): Matrix", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementModel.getMeasurementModel", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#getMeasurementModel:org.apache.spark.ml.linalg.Matrix", "kind" : "final def"}, {"label" : "measurementModel", "tail" : ": Param[Matrix]", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementModel.measurementModel", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#measurementModel:org.apache.spark.ml.param.Param[org.apache.spark.ml.linalg.Matrix]", "kind" : "final val"}, {"label" : "getProcessModel", "tail" : "(): Matrix", "member" : "com.github.ozancicek.artan.ml.filter.HasProcessModel.getProcessModel", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#getProcessModel:org.apache.spark.ml.linalg.Matrix", "kind" : "final def"}, {"label" : "processModel", "tail" : ": Param[Matrix]", "member" : "com.github.ozancicek.artan.ml.filter.HasProcessModel.processModel", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#processModel:org.apache.spark.ml.param.Param[org.apache.spark.ml.linalg.Matrix]", "kind" : "final val"}, {"label" : "getControlFunctionCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasControlFunctionCol.getControlFunctionCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#getControlFunctionCol:String", "kind" : "final def"}, {"label" : "controlFunctionCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasControlFunctionCol.controlFunctionCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#controlFunctionCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getControlCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasControlCol.getControlCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#getControlCol:String", "kind" : "final def"}, {"label" : "controlCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasControlCol.controlCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#controlCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getProcessNoiseCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasProcessNoiseCol.getProcessNoiseCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#getProcessNoiseCol:String", "kind" : "final def"}, {"label" : "processNoiseCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasProcessNoiseCol.processNoiseCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#processNoiseCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getProcessModelCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasProcessModelCol.getProcessModelCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#getProcessModelCol:String", "kind" : "final def"}, {"label" : "processModelCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasProcessModelCol.processModelCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#processModelCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getMeasurementNoiseCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementNoiseCol.getMeasurementNoiseCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#getMeasurementNoiseCol:String", "kind" : "final def"}, {"label" : "measurementNoiseCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementNoiseCol.measurementNoiseCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#measurementNoiseCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getMeasurementModelCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementModelCol.getMeasurementModelCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#getMeasurementModelCol:String", "kind" : "final def"}, {"label" : "measurementModelCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementModelCol.measurementModelCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#measurementModelCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getMeasurementCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementCol.getMeasurementCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#getMeasurementCol:String", "kind" : "final def"}, {"label" : "measurementCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementCol.measurementCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#measurementCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "transformWithState", "tail" : "(in: DataFrame)(keyEncoder: Encoder[String]): Dataset[KalmanOutput]", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.transformWithState", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#transformWithState(in:org.apache.spark.sql.DataFrame)(implicitkeyEncoder:org.apache.spark.sql.Encoder[GroupKeyType]):org.apache.spark.sql.Dataset[OutType]", "kind" : "def"}, {"label" : "getLinalgOptions", "tail" : "(): LinalgOptions", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.getLinalgOptions", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#getLinalgOptions:com.github.ozancicek.artan.ml.linalg.LinalgOptions", "kind" : "def"}, {"label" : "getUDFWithDefault", "tail" : "(defaultParam: Param[DefaultType], colParam: Param[String])(arg0: scala.reflect.api.JavaUniverse.TypeTag[DefaultType]): Column", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.getUDFWithDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#getUDFWithDefault[DefaultType](defaultParam:org.apache.spark.ml.param.Param[DefaultType],colParam:org.apache.spark.ml.param.Param[String])(implicitevidence$5:reflect.runtime.universe.TypeTag[DefaultType]):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "validateWatermarkColumns", "tail" : "(schema: StructType): Unit", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.validateWatermarkColumns", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#validateWatermarkColumns(schema:org.apache.spark.sql.types.StructType):Unit", "kind" : "def"}, {"label" : "outEncoder", "tail" : ": Encoder[KalmanOutput]", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.outEncoder", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#outEncoder:org.apache.spark.sql.Encoder[OutType]", "kind" : "implicit val"}, {"label" : "rowEncoder", "tail" : ": Encoder[KalmanInput]", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.rowEncoder", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#rowEncoder:org.apache.spark.sql.Encoder[RowType]", "kind" : "implicit val"}, {"label" : "stateEncoder", "tail" : ": Encoder[KalmanState]", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.stateEncoder", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#stateEncoder:org.apache.spark.sql.Encoder[StateType]", "kind" : "implicit val"}, {"label" : "keyFunc", "tail" : "(): (KalmanInput) ⇒ String", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.keyFunc", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#keyFunc:RowType=>GroupKeyType", "kind" : "def"}, {"label" : "setWatermarkDuration", "tail" : "(value: String): LinearKalmanFilter", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformerParams.setWatermarkDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#setWatermarkDuration(value:String):ImplType", "kind" : "def"}, {"label" : "setEventTimeCol", "tail" : "(value: String): LinearKalmanFilter", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformerParams.setEventTimeCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#setEventTimeCol(value:String):ImplType", "kind" : "def"}, {"label" : "setStateTimeoutDuration", "tail" : "(value: String): LinearKalmanFilter", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformerParams.setStateTimeoutDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#setStateTimeoutDuration(value:String):ImplType", "kind" : "def"}, {"label" : "setStateTimeoutMode", "tail" : "(value: String): LinearKalmanFilter", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformerParams.setStateTimeoutMode", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#setStateTimeoutMode(value:String):ImplType", "kind" : "def"}, {"label" : "setStateKeyCol", "tail" : "(value: String): LinearKalmanFilter", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformerParams.setStateKeyCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#setStateKeyCol(value:String):ImplType", "kind" : "def"}, {"label" : "getStateTimeoutDuration", "tail" : "(): Option[String]", "member" : "com.github.ozancicek.artan.ml.state.HasStateTimeoutDuration.getStateTimeoutDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#getStateTimeoutDuration:Option[String]", "kind" : "def"}, {"label" : "stateTimeoutDuration", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.state.HasStateTimeoutDuration.stateTimeoutDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#stateTimeoutDuration:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getStateKeyColumn", "tail" : "(): Column", "member" : "com.github.ozancicek.artan.ml.state.HasStateKeyCol.getStateKeyColumn", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#getStateKeyColumn:org.apache.spark.sql.Column", "kind" : "final def"}, {"label" : "getStateKeyColname", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.state.HasStateKeyCol.getStateKeyColname", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#getStateKeyColname:String", "kind" : "final def"}, {"label" : "stateKeyCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.state.HasStateKeyCol.stateKeyCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#stateKeyCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getWatermarkDuration", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.state.HasWatermarkDuration.getWatermarkDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#getWatermarkDuration:String", "kind" : "def"}, {"label" : "watermarkDuration", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.state.HasWatermarkDuration.watermarkDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#watermarkDuration:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getEventTimeCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.state.HasEventTimeCol.getEventTimeCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#getEventTimeCol:String", "kind" : "def"}, {"label" : "eventTimeCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.state.HasEventTimeCol.eventTimeCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#eventTimeCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getTimeoutMode", "tail" : "(): TimeoutMode", "member" : "com.github.ozancicek.artan.ml.state.HasStateTimeoutMode.getTimeoutMode", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#getTimeoutMode:com.github.ozancicek.artan.ml.state.TimeoutMode", "kind" : "def"}, {"label" : "timeoutMode", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.state.HasStateTimeoutMode.timeoutMode", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#timeoutMode:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#transform(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#transform(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): LinearKalmanFilter.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): LinearKalmanFilter.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): LinearKalmanFilter.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): LinearKalmanFilter.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): LinearKalmanFilter.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): LinearKalmanFilter.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "load", "tail" : "(path: String): LinearKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.LinearKalmanFilter.load", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter$.html#load(path:String):com.github.ozancicek.artan.ml.filter.LinearKalmanFilter", "kind" : "def"}, {"label" : "read", "tail" : "(): MLReader[LinearKalmanFilter]", "member" : "org.apache.spark.ml.util.DefaultParamsReadable.read", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter$.html#read:org.apache.spark.ml.util.MLReader[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/ozancicek\/artan\/ml\/filter\/LinearKalmanFilter.html", "kind" : "class"}, {"name" : "com.github.ozancicek.artan.ml.filter.RecursiveLeastSquaresFilter", "shortDescription" : "Recursive formulation of least squares with exponential weighting & regularization, implemented witha stateful spark Transformer for running parallel filters \/w spark dataframes.", "object" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter$.html", "members_class" : [{"label" : "stateUpdateSpec", "tail" : "(): RecursiveLeastSquaresUpdateSpec", "member" : "com.github.ozancicek.artan.ml.filter.RecursiveLeastSquaresFilter.stateUpdateSpec", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#stateUpdateSpec:com.github.ozancicek.artan.ml.filter.RecursiveLeastSquaresUpdateSpec", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "com.github.ozancicek.artan.ml.filter.RecursiveLeastSquaresFilter.transform", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#transform(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.github.ozancicek.artan.ml.filter.RecursiveLeastSquaresFilter.transformSchema", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "setInitialStateDistributionCol", "tail" : "(value: String): RecursiveLeastSquaresFilter.this.type", "member" : "com.github.ozancicek.artan.ml.filter.RecursiveLeastSquaresFilter.setInitialStateDistributionCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#setInitialStateDistributionCol(value:String):RecursiveLeastSquaresFilter.this.type", "kind" : "def"}, {"label" : "setRegularizationMatrixCol", "tail" : "(value: String): RecursiveLeastSquaresFilter.this.type", "member" : "com.github.ozancicek.artan.ml.filter.RecursiveLeastSquaresFilter.setRegularizationMatrixCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#setRegularizationMatrixCol(value:String):RecursiveLeastSquaresFilter.this.type", "kind" : "def"}, {"label" : "setInitialEstimateCol", "tail" : "(value: String): RecursiveLeastSquaresFilter.this.type", "member" : "com.github.ozancicek.artan.ml.filter.RecursiveLeastSquaresFilter.setInitialEstimateCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#setInitialEstimateCol(value:String):RecursiveLeastSquaresFilter.this.type", "kind" : "def"}, {"label" : "setInitialEstimate", "tail" : "(value: Vector): RecursiveLeastSquaresFilter.this.type", "member" : "com.github.ozancicek.artan.ml.filter.RecursiveLeastSquaresFilter.setInitialEstimate", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#setInitialEstimate(value:org.apache.spark.ml.linalg.Vector):RecursiveLeastSquaresFilter.this.type", "kind" : "def"}, {"label" : "setRegularizationMatrixFactor", "tail" : "(value: Double): RecursiveLeastSquaresFilter.this.type", "member" : "com.github.ozancicek.artan.ml.filter.RecursiveLeastSquaresFilter.setRegularizationMatrixFactor", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#setRegularizationMatrixFactor(value:Double):RecursiveLeastSquaresFilter.this.type", "kind" : "def"}, {"label" : "setRegularizationMatrix", "tail" : "(value: Matrix): RecursiveLeastSquaresFilter.this.type", "member" : "com.github.ozancicek.artan.ml.filter.RecursiveLeastSquaresFilter.setRegularizationMatrix", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#setRegularizationMatrix(value:org.apache.spark.ml.linalg.Matrix):RecursiveLeastSquaresFilter.this.type", "kind" : "def"}, {"label" : "setForgettingFactor", "tail" : "(value: Double): RecursiveLeastSquaresFilter.this.type", "member" : "com.github.ozancicek.artan.ml.filter.RecursiveLeastSquaresFilter.setForgettingFactor", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#setForgettingFactor(value:Double):RecursiveLeastSquaresFilter.this.type", "kind" : "def"}, {"label" : "setFeatureSize", "tail" : "(value: Int): RecursiveLeastSquaresFilter.this.type", "member" : "com.github.ozancicek.artan.ml.filter.RecursiveLeastSquaresFilter.setFeatureSize", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#setFeatureSize(value:Int):RecursiveLeastSquaresFilter.this.type", "kind" : "def"}, {"label" : "setFeaturesCol", "tail" : "(value: String): RecursiveLeastSquaresFilter.this.type", "member" : "com.github.ozancicek.artan.ml.filter.RecursiveLeastSquaresFilter.setFeaturesCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#setFeaturesCol(value:String):RecursiveLeastSquaresFilter.this.type", "kind" : "def"}, {"label" : "setLabelCol", "tail" : "(value: String): RecursiveLeastSquaresFilter.this.type", "member" : "com.github.ozancicek.artan.ml.filter.RecursiveLeastSquaresFilter.setLabelCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#setLabelCol(value:String):RecursiveLeastSquaresFilter.this.type", "kind" : "def"}, {"label" : "copy", "tail" : "(extra: ParamMap): RecursiveLeastSquaresFilter", "member" : "com.github.ozancicek.artan.ml.filter.RecursiveLeastSquaresFilter.copy", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#copy(extra:org.apache.spark.ml.param.ParamMap):com.github.ozancicek.artan.ml.filter.RecursiveLeastSquaresFilter", "kind" : "def"}, {"label" : "defaultStateKey", "tail" : ": String", "member" : "com.github.ozancicek.artan.ml.filter.RecursiveLeastSquaresFilter.defaultStateKey", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#defaultStateKey:String", "kind" : "val"}, {"member" : "com.github.ozancicek.artan.ml.filter.RecursiveLeastSquaresFilter#<init>", "error" : "unsupported entity"}, {"label" : "stateKeyEncoder", "tail" : ": Encoder[String]", "member" : "com.github.ozancicek.artan.ml.filter.RecursiveLeastSquaresFilter.stateKeyEncoder", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#stateKeyEncoder:org.apache.spark.sql.Encoder[String]", "kind" : "implicit val"}, {"member" : "com.github.ozancicek.artan.ml.filter.RecursiveLeastSquaresFilter#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "com.github.ozancicek.artan.ml.filter.RecursiveLeastSquaresFilter.uid", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#uid:String", "kind" : "val"}, {"label" : "write", "tail" : "(): MLWriter", "member" : "org.apache.spark.ml.util.DefaultParamsWritable.write", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#save(path:String):Unit", "kind" : "def"}, {"label" : "getStateSize", "tail" : "(): Int", "member" : "com.github.ozancicek.artan.ml.filter.HasStateSize.getStateSize", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#getStateSize:Int", "kind" : "final def"}, {"label" : "stateSize", "tail" : ": IntParam", "member" : "com.github.ozancicek.artan.ml.filter.HasStateSize.stateSize", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#stateSize:org.apache.spark.ml.param.IntParam", "kind" : "final val"}, {"label" : "getRegularizationMatrixCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasRegularizationMatrixCol.getRegularizationMatrixCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#getRegularizationMatrixCol:String", "kind" : "final def"}, {"label" : "regularizationMatrixCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasRegularizationMatrixCol.regularizationMatrixCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#regularizationMatrixCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInitialStateMeanCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateMeanCol.getInitialStateMeanCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#getInitialStateMeanCol:String", "kind" : "final def"}, {"label" : "initialStateMeanCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateMeanCol.initialStateMeanCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#initialStateMeanCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getRegularizationMatrix", "tail" : "(): Matrix", "member" : "com.github.ozancicek.artan.ml.filter.HasRegularizationMatrix.getRegularizationMatrix", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#getRegularizationMatrix:org.apache.spark.ml.linalg.Matrix", "kind" : "final def"}, {"label" : "regularizationMatrix", "tail" : ": Param[Matrix]", "member" : "com.github.ozancicek.artan.ml.filter.HasRegularizationMatrix.regularizationMatrix", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#regularizationMatrix:org.apache.spark.ml.param.Param[org.apache.spark.ml.linalg.Matrix]", "kind" : "final val"}, {"label" : "getInitialStateMean", "tail" : "(): Vector", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateMean.getInitialStateMean", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#getInitialStateMean:org.apache.spark.ml.linalg.Vector", "kind" : "final def"}, {"label" : "initialStateMean", "tail" : ": Param[Vector]", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateMean.initialStateMean", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#initialStateMean:org.apache.spark.ml.param.Param[org.apache.spark.ml.linalg.Vector]", "kind" : "final val"}, {"label" : "getInitialStateDistributionCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateDistributionCol.getInitialStateDistributionCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#getInitialStateDistributionCol:String", "kind" : "final def"}, {"label" : "initialStateDistributionCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateDistributionCol.initialStateDistributionCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#initialStateDistributionCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getForgettingFactor", "tail" : "(): Double", "member" : "com.github.ozancicek.artan.ml.filter.HasForgettingFactor.getForgettingFactor", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#getForgettingFactor:Double", "kind" : "final def"}, {"label" : "forgettingFactor", "tail" : ": DoubleParam", "member" : "com.github.ozancicek.artan.ml.filter.HasForgettingFactor.forgettingFactor", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#forgettingFactor:org.apache.spark.ml.param.DoubleParam", "kind" : "final val"}, {"label" : "getFeaturesCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasFeaturesCol.getFeaturesCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#getFeaturesCol:String", "kind" : "final def"}, {"label" : "featuresCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasFeaturesCol.featuresCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#featuresCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getLabelCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasLabelCol.getLabelCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#getLabelCol:String", "kind" : "final def"}, {"label" : "labelCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasLabelCol.labelCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#labelCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "transformWithState", "tail" : "(in: DataFrame)(keyEncoder: Encoder[String]): Dataset[RLSOutput]", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.transformWithState", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#transformWithState(in:org.apache.spark.sql.DataFrame)(implicitkeyEncoder:org.apache.spark.sql.Encoder[GroupKeyType]):org.apache.spark.sql.Dataset[OutType]", "kind" : "def"}, {"label" : "getLinalgOptions", "tail" : "(): LinalgOptions", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.getLinalgOptions", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#getLinalgOptions:com.github.ozancicek.artan.ml.linalg.LinalgOptions", "kind" : "def"}, {"label" : "getUDFWithDefault", "tail" : "(defaultParam: Param[DefaultType], colParam: Param[String])(arg0: scala.reflect.api.JavaUniverse.TypeTag[DefaultType]): Column", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.getUDFWithDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#getUDFWithDefault[DefaultType](defaultParam:org.apache.spark.ml.param.Param[DefaultType],colParam:org.apache.spark.ml.param.Param[String])(implicitevidence$5:reflect.runtime.universe.TypeTag[DefaultType]):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "asDataFrameTransformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.asDataFrameTransformSchema", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#asDataFrameTransformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "asDataFrame", "tail" : "(ds: Dataset[RLSOutput]): DataFrame", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.asDataFrame", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#asDataFrame(ds:org.apache.spark.sql.Dataset[OutType]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "validateWatermarkColumns", "tail" : "(schema: StructType): Unit", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.validateWatermarkColumns", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#validateWatermarkColumns(schema:org.apache.spark.sql.types.StructType):Unit", "kind" : "def"}, {"label" : "outEncoder", "tail" : ": Encoder[RLSOutput]", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.outEncoder", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#outEncoder:org.apache.spark.sql.Encoder[OutType]", "kind" : "implicit val"}, {"label" : "rowEncoder", "tail" : ": Encoder[RLSInput]", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.rowEncoder", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#rowEncoder:org.apache.spark.sql.Encoder[RowType]", "kind" : "implicit val"}, {"label" : "stateEncoder", "tail" : ": Encoder[RLSState]", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.stateEncoder", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#stateEncoder:org.apache.spark.sql.Encoder[StateType]", "kind" : "implicit val"}, {"label" : "keyFunc", "tail" : "(): (RLSInput) ⇒ String", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.keyFunc", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#keyFunc:RowType=>GroupKeyType", "kind" : "def"}, {"label" : "setWatermarkDuration", "tail" : "(value: String): RecursiveLeastSquaresFilter", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformerParams.setWatermarkDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#setWatermarkDuration(value:String):ImplType", "kind" : "def"}, {"label" : "setEventTimeCol", "tail" : "(value: String): RecursiveLeastSquaresFilter", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformerParams.setEventTimeCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#setEventTimeCol(value:String):ImplType", "kind" : "def"}, {"label" : "setStateTimeoutDuration", "tail" : "(value: String): RecursiveLeastSquaresFilter", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformerParams.setStateTimeoutDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#setStateTimeoutDuration(value:String):ImplType", "kind" : "def"}, {"label" : "setStateTimeoutMode", "tail" : "(value: String): RecursiveLeastSquaresFilter", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformerParams.setStateTimeoutMode", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#setStateTimeoutMode(value:String):ImplType", "kind" : "def"}, {"label" : "setStateKeyCol", "tail" : "(value: String): RecursiveLeastSquaresFilter", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformerParams.setStateKeyCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#setStateKeyCol(value:String):ImplType", "kind" : "def"}, {"label" : "getStateTimeoutDuration", "tail" : "(): Option[String]", "member" : "com.github.ozancicek.artan.ml.state.HasStateTimeoutDuration.getStateTimeoutDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#getStateTimeoutDuration:Option[String]", "kind" : "def"}, {"label" : "stateTimeoutDuration", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.state.HasStateTimeoutDuration.stateTimeoutDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#stateTimeoutDuration:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getStateKeyColumn", "tail" : "(): Column", "member" : "com.github.ozancicek.artan.ml.state.HasStateKeyCol.getStateKeyColumn", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#getStateKeyColumn:org.apache.spark.sql.Column", "kind" : "final def"}, {"label" : "getStateKeyColname", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.state.HasStateKeyCol.getStateKeyColname", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#getStateKeyColname:String", "kind" : "final def"}, {"label" : "stateKeyCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.state.HasStateKeyCol.stateKeyCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#stateKeyCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getWatermarkDuration", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.state.HasWatermarkDuration.getWatermarkDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#getWatermarkDuration:String", "kind" : "def"}, {"label" : "watermarkDuration", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.state.HasWatermarkDuration.watermarkDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#watermarkDuration:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getEventTimeCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.state.HasEventTimeCol.getEventTimeCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#getEventTimeCol:String", "kind" : "def"}, {"label" : "eventTimeCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.state.HasEventTimeCol.eventTimeCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#eventTimeCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getTimeoutMode", "tail" : "(): TimeoutMode", "member" : "com.github.ozancicek.artan.ml.state.HasStateTimeoutMode.getTimeoutMode", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#getTimeoutMode:com.github.ozancicek.artan.ml.state.TimeoutMode", "kind" : "def"}, {"label" : "timeoutMode", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.state.HasStateTimeoutMode.timeoutMode", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#timeoutMode:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#transform(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#transform(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): RecursiveLeastSquaresFilter.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): RecursiveLeastSquaresFilter.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): RecursiveLeastSquaresFilter.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): RecursiveLeastSquaresFilter.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): RecursiveLeastSquaresFilter.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): RecursiveLeastSquaresFilter.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "load", "tail" : "(path: String): RecursiveLeastSquaresFilter", "member" : "com.github.ozancicek.artan.ml.filter.RecursiveLeastSquaresFilter.load", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter$.html#load(path:String):com.github.ozancicek.artan.ml.filter.RecursiveLeastSquaresFilter", "kind" : "def"}, {"label" : "read", "tail" : "(): MLReader[RecursiveLeastSquaresFilter]", "member" : "org.apache.spark.ml.util.DefaultParamsReadable.read", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter$.html#read:org.apache.spark.ml.util.MLReader[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/ozancicek\/artan\/ml\/filter\/RecursiveLeastSquaresFilter.html", "kind" : "class"}, {"name" : "com.github.ozancicek.artan.ml.filter.UnscentedKalmanFilter", "shortDescription" : "Unscented Kalman Filter (UKF), implemented with a stateful spark Transformer for running parallel filters \/w sparkdataframes.", "object" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter$.html", "members_class" : [{"label" : "stateUpdateSpec", "tail" : "(): UnscentedKalmanStateSpec", "member" : "com.github.ozancicek.artan.ml.filter.UnscentedKalmanFilter.stateUpdateSpec", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#stateUpdateSpec:com.github.ozancicek.artan.ml.filter.UnscentedKalmanStateSpec", "kind" : "def"}, {"label" : "copy", "tail" : "(extra: ParamMap): UnscentedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.UnscentedKalmanFilter.copy", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#copy(extra:org.apache.spark.ml.param.ParamMap):com.github.ozancicek.artan.ml.filter.UnscentedKalmanFilter", "kind" : "def"}, {"label" : "setSigmaPointUpperBound", "tail" : "(value: Vector): UnscentedKalmanFilter.this.type", "member" : "com.github.ozancicek.artan.ml.filter.UnscentedKalmanFilter.setSigmaPointUpperBound", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#setSigmaPointUpperBound(value:org.apache.spark.ml.linalg.Vector):UnscentedKalmanFilter.this.type", "kind" : "def"}, {"label" : "setSigmaPointLowerBound", "tail" : "(value: Vector): UnscentedKalmanFilter.this.type", "member" : "com.github.ozancicek.artan.ml.filter.UnscentedKalmanFilter.setSigmaPointLowerBound", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#setSigmaPointLowerBound(value:org.apache.spark.ml.linalg.Vector):UnscentedKalmanFilter.this.type", "kind" : "def"}, {"label" : "setEnableAdaptiveProcessNoise", "tail" : "(): UnscentedKalmanFilter.this.type", "member" : "com.github.ozancicek.artan.ml.filter.UnscentedKalmanFilter.setEnableAdaptiveProcessNoise", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#setEnableAdaptiveProcessNoise:UnscentedKalmanFilter.this.type", "kind" : "def"}, {"label" : "setJulierKappa", "tail" : "(value: Double): UnscentedKalmanFilter.this.type", "member" : "com.github.ozancicek.artan.ml.filter.UnscentedKalmanFilter.setJulierKappa", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#setJulierKappa(value:Double):UnscentedKalmanFilter.this.type", "kind" : "def"}, {"label" : "setMerweKappa", "tail" : "(value: Double): UnscentedKalmanFilter.this.type", "member" : "com.github.ozancicek.artan.ml.filter.UnscentedKalmanFilter.setMerweKappa", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#setMerweKappa(value:Double):UnscentedKalmanFilter.this.type", "kind" : "def"}, {"label" : "setMerweBeta", "tail" : "(value: Double): UnscentedKalmanFilter.this.type", "member" : "com.github.ozancicek.artan.ml.filter.UnscentedKalmanFilter.setMerweBeta", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#setMerweBeta(value:Double):UnscentedKalmanFilter.this.type", "kind" : "def"}, {"label" : "setMerweAlpha", "tail" : "(value: Double): UnscentedKalmanFilter.this.type", "member" : "com.github.ozancicek.artan.ml.filter.UnscentedKalmanFilter.setMerweAlpha", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#setMerweAlpha(value:Double):UnscentedKalmanFilter.this.type", "kind" : "def"}, {"label" : "setSigmaPoints", "tail" : "(value: String): UnscentedKalmanFilter.this.type", "member" : "com.github.ozancicek.artan.ml.filter.UnscentedKalmanFilter.setSigmaPoints", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#setSigmaPoints(value:String):UnscentedKalmanFilter.this.type", "kind" : "def"}, {"label" : "setMeasurementFunction", "tail" : "(value: (Vector, Matrix) ⇒ Vector): UnscentedKalmanFilter.this.type", "member" : "com.github.ozancicek.artan.ml.filter.UnscentedKalmanFilter.setMeasurementFunction", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#setMeasurementFunction(value:(org.apache.spark.ml.linalg.Vector,org.apache.spark.ml.linalg.Matrix)=>org.apache.spark.ml.linalg.Vector):UnscentedKalmanFilter.this.type", "kind" : "def"}, {"label" : "setProcessFunction", "tail" : "(value: (Vector, Matrix) ⇒ Vector): UnscentedKalmanFilter.this.type", "member" : "com.github.ozancicek.artan.ml.filter.UnscentedKalmanFilter.setProcessFunction", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#setProcessFunction(value:(org.apache.spark.ml.linalg.Vector,org.apache.spark.ml.linalg.Matrix)=>org.apache.spark.ml.linalg.Vector):UnscentedKalmanFilter.this.type", "kind" : "def"}, {"label" : "defaultStateKey", "tail" : ": String", "member" : "com.github.ozancicek.artan.ml.filter.UnscentedKalmanFilter.defaultStateKey", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#defaultStateKey:String", "kind" : "val"}, {"member" : "com.github.ozancicek.artan.ml.filter.UnscentedKalmanFilter#<init>", "error" : "unsupported entity"}, {"member" : "com.github.ozancicek.artan.ml.filter.UnscentedKalmanFilter#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "com.github.ozancicek.artan.ml.filter.UnscentedKalmanFilter.uid", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#uid:String", "kind" : "val"}, {"label" : "write", "tail" : "(): MLWriter", "member" : "org.apache.spark.ml.util.DefaultParamsWritable.write", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#save(path:String):Unit", "kind" : "def"}, {"label" : "getSigmaPoints", "tail" : "(ops: LinalgOptions): SigmaPoints", "member" : "com.github.ozancicek.artan.ml.filter.SigmaPointsParams.getSigmaPoints", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getSigmaPoints(ops:com.github.ozancicek.artan.ml.linalg.LinalgOptions):com.github.ozancicek.artan.ml.filter.SigmaPoints", "kind" : "final def"}, {"label" : "sigmaPoints", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.SigmaPointsParams.sigmaPoints", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#sigmaPoints:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getSigmaPointUpperBound", "tail" : "(): Option[Vector]", "member" : "com.github.ozancicek.artan.ml.filter.HasSigmaPointUpperBound.getSigmaPointUpperBound", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getSigmaPointUpperBound:Option[org.apache.spark.ml.linalg.Vector]", "kind" : "final def"}, {"label" : "sigmaPointUpperBound", "tail" : ": Param[Vector]", "member" : "com.github.ozancicek.artan.ml.filter.HasSigmaPointUpperBound.sigmaPointUpperBound", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#sigmaPointUpperBound:org.apache.spark.ml.param.Param[org.apache.spark.ml.linalg.Vector]", "kind" : "final val"}, {"label" : "getSigmaPointLowerBound", "tail" : "(): Option[Vector]", "member" : "com.github.ozancicek.artan.ml.filter.HasSigmaPointLowerBound.getSigmaPointLowerBound", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getSigmaPointLowerBound:Option[org.apache.spark.ml.linalg.Vector]", "kind" : "final def"}, {"label" : "sigmaPointLowerBound", "tail" : ": Param[Vector]", "member" : "com.github.ozancicek.artan.ml.filter.HasSigmaPointLowerBound.sigmaPointLowerBound", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#sigmaPointLowerBound:org.apache.spark.ml.param.Param[org.apache.spark.ml.linalg.Vector]", "kind" : "final val"}, {"label" : "getJulierKappa", "tail" : "(): Double", "member" : "com.github.ozancicek.artan.ml.filter.HasJulierKappa.getJulierKappa", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getJulierKappa:Double", "kind" : "final def"}, {"label" : "julierKappa", "tail" : ": DoubleParam", "member" : "com.github.ozancicek.artan.ml.filter.HasJulierKappa.julierKappa", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#julierKappa:org.apache.spark.ml.param.DoubleParam", "kind" : "final val"}, {"label" : "getMerweKappa", "tail" : "(): Double", "member" : "com.github.ozancicek.artan.ml.filter.HasMerweKappa.getMerweKappa", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getMerweKappa:Double", "kind" : "final def"}, {"label" : "merweKappa", "tail" : ": DoubleParam", "member" : "com.github.ozancicek.artan.ml.filter.HasMerweKappa.merweKappa", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#merweKappa:org.apache.spark.ml.param.DoubleParam", "kind" : "final val"}, {"label" : "getMerweBeta", "tail" : "(): Double", "member" : "com.github.ozancicek.artan.ml.filter.HasMerweBeta.getMerweBeta", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getMerweBeta:Double", "kind" : "final def"}, {"label" : "merweBeta", "tail" : ": DoubleParam", "member" : "com.github.ozancicek.artan.ml.filter.HasMerweBeta.merweBeta", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#merweBeta:org.apache.spark.ml.param.DoubleParam", "kind" : "final val"}, {"label" : "getMerweAlpha", "tail" : "(): Double", "member" : "com.github.ozancicek.artan.ml.filter.HasMerweAlpha.getMerweAlpha", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getMerweAlpha:Double", "kind" : "final def"}, {"label" : "merweAlpha", "tail" : ": DoubleParam", "member" : "com.github.ozancicek.artan.ml.filter.HasMerweAlpha.merweAlpha", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#merweAlpha:org.apache.spark.ml.param.DoubleParam", "kind" : "final val"}, {"label" : "getAdaptiveNoiseParamSet", "tail" : "(): AdaptiveNoiseParamSet", "member" : "com.github.ozancicek.artan.ml.filter.AdaptiveNoiseParams.getAdaptiveNoiseParamSet", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getAdaptiveNoiseParamSet:com.github.ozancicek.artan.ml.filter.AdaptiveNoiseParamSet", "kind" : "def"}, {"label" : "getAdaptiveProcessNoiseLambda", "tail" : "(): Double", "member" : "com.github.ozancicek.artan.ml.filter.HasAdaptiveProcessNoiseLambda.getAdaptiveProcessNoiseLambda", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getAdaptiveProcessNoiseLambda:Double", "kind" : "final def"}, {"label" : "adaptiveProcessNoiseLambda", "tail" : ": DoubleParam", "member" : "com.github.ozancicek.artan.ml.filter.HasAdaptiveProcessNoiseLambda.adaptiveProcessNoiseLambda", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#adaptiveProcessNoiseLambda:org.apache.spark.ml.param.DoubleParam", "kind" : "final val"}, {"label" : "getAdaptiveProcessNoiseAlpha", "tail" : "(): Double", "member" : "com.github.ozancicek.artan.ml.filter.HasAdaptiveProcessNoiseAlpha.getAdaptiveProcessNoiseAlpha", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getAdaptiveProcessNoiseAlpha:Double", "kind" : "final def"}, {"label" : "adaptiveProcessNoiseAlpha", "tail" : ": DoubleParam", "member" : "com.github.ozancicek.artan.ml.filter.HasAdaptiveProcessNoiseAlpha.adaptiveProcessNoiseAlpha", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#adaptiveProcessNoiseAlpha:org.apache.spark.ml.param.DoubleParam", "kind" : "final val"}, {"label" : "getAdaptiveProcessNoiseThreshold", "tail" : "(): Double", "member" : "com.github.ozancicek.artan.ml.filter.HasAdaptiveProcessNoiseThreshold.getAdaptiveProcessNoiseThreshold", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getAdaptiveProcessNoiseThreshold:Double", "kind" : "final def"}, {"label" : "adaptiveProcessNoiseThreshold", "tail" : ": DoubleParam", "member" : "com.github.ozancicek.artan.ml.filter.HasAdaptiveProcessNoiseThreshold.adaptiveProcessNoiseThreshold", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#adaptiveProcessNoiseThreshold:org.apache.spark.ml.param.DoubleParam", "kind" : "final val"}, {"label" : "getAdaptiveProcessNoise", "tail" : "(): Boolean", "member" : "com.github.ozancicek.artan.ml.filter.HasAdaptiveProcessNoise.getAdaptiveProcessNoise", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getAdaptiveProcessNoise:Boolean", "kind" : "final def"}, {"label" : "adaptiveProcessNoise", "tail" : ": BooleanParam", "member" : "com.github.ozancicek.artan.ml.filter.HasAdaptiveProcessNoise.adaptiveProcessNoise", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#adaptiveProcessNoise:org.apache.spark.ml.param.BooleanParam", "kind" : "final val"}, {"label" : "getMeasurementFunctionOpt", "tail" : "(): Option[(Vector, Matrix) ⇒ Vector]", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementFunction.getMeasurementFunctionOpt", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getMeasurementFunctionOpt:Option[(org.apache.spark.ml.linalg.Vector,org.apache.spark.ml.linalg.Matrix)=>org.apache.spark.ml.linalg.Vector]", "kind" : "final def"}, {"label" : "measurementFunction", "tail" : ": VMVFunctionParam", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementFunction.measurementFunction", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#measurementFunction:com.github.ozancicek.artan.ml.filter.VMVFunctionParam", "kind" : "final val"}, {"label" : "getProcessFunctionOpt", "tail" : "(): Option[(Vector, Matrix) ⇒ Vector]", "member" : "com.github.ozancicek.artan.ml.filter.HasProcessFunction.getProcessFunctionOpt", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getProcessFunctionOpt:Option[(org.apache.spark.ml.linalg.Vector,org.apache.spark.ml.linalg.Matrix)=>org.apache.spark.ml.linalg.Vector]", "kind" : "final def"}, {"label" : "processFunction", "tail" : ": VMVFunctionParam", "member" : "com.github.ozancicek.artan.ml.filter.HasProcessFunction.processFunction", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#processFunction:com.github.ozancicek.artan.ml.filter.VMVFunctionParam", "kind" : "final val"}, {"label" : "transform", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "com.github.ozancicek.artan.ml.filter.KalmanTransformer.transform", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#transform(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "asDataFrameTransformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.github.ozancicek.artan.ml.filter.KalmanTransformer.asDataFrameTransformSchema", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#asDataFrameTransformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "asDataFrame", "tail" : "(in: Dataset[KalmanOutput]): DataFrame", "member" : "com.github.ozancicek.artan.ml.filter.KalmanTransformer.asDataFrame", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#asDataFrame(in:org.apache.spark.sql.Dataset[com.github.ozancicek.artan.ml.state.KalmanOutput]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "outputResiduals", "tail" : "(): Boolean", "member" : "com.github.ozancicek.artan.ml.filter.KalmanTransformer.outputResiduals", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#outputResiduals:Boolean", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "com.github.ozancicek.artan.ml.filter.KalmanTransformer.transformSchema", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "setEnableMultipleModelAdaptiveEstimation", "tail" : "(): UnscentedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanTransformer.setEnableMultipleModelAdaptiveEstimation", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#setEnableMultipleModelAdaptiveEstimation:ImplType", "kind" : "def"}, {"label" : "setMultipleModelMeasurementWindowDuration", "tail" : "(value: String): UnscentedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanTransformer.setMultipleModelMeasurementWindowDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#setMultipleModelMeasurementWindowDuration(value:String):ImplType", "kind" : "def"}, {"label" : "setSlidingLikelihoodWindow", "tail" : "(value: Int): UnscentedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanTransformer.setSlidingLikelihoodWindow", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#setSlidingLikelihoodWindow(value:Int):ImplType", "kind" : "def"}, {"label" : "setCalculateSlidingLikelihood", "tail" : "(): UnscentedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanTransformer.setCalculateSlidingLikelihood", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#setCalculateSlidingLikelihood:ImplType", "kind" : "def"}, {"label" : "setCalculateMahalanobis", "tail" : "(): UnscentedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanTransformer.setCalculateMahalanobis", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#setCalculateMahalanobis:ImplType", "kind" : "def"}, {"label" : "setCalculateLoglikelihood", "tail" : "(): UnscentedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanTransformer.setCalculateLoglikelihood", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#setCalculateLoglikelihood:ImplType", "kind" : "def"}, {"label" : "stateKeyEncoder", "tail" : ": Encoder[String]", "member" : "com.github.ozancicek.artan.ml.filter.KalmanTransformer.stateKeyEncoder", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#stateKeyEncoder:org.apache.spark.sql.Encoder[String]", "kind" : "implicit val"}, {"label" : "getMultipleModelAdaptiveEstimationEnabled", "tail" : "(): Boolean", "member" : "com.github.ozancicek.artan.ml.filter.HasMultipleModelAdaptiveEstimationEnabled.getMultipleModelAdaptiveEstimationEnabled", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getMultipleModelAdaptiveEstimationEnabled:Boolean", "kind" : "def"}, {"label" : "multipleModelAdaptiveEstimationEnabled", "tail" : ": BooleanParam", "member" : "com.github.ozancicek.artan.ml.filter.HasMultipleModelAdaptiveEstimationEnabled.multipleModelAdaptiveEstimationEnabled", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#multipleModelAdaptiveEstimationEnabled:org.apache.spark.ml.param.BooleanParam", "kind" : "final val"}, {"label" : "getMultipleModelMeasurementWindow", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasMultipleModelMeasurementWindowDuration.getMultipleModelMeasurementWindow", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getMultipleModelMeasurementWindow:String", "kind" : "final def"}, {"label" : "multipleModelMeasurementWindowDuration", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasMultipleModelMeasurementWindowDuration.multipleModelMeasurementWindowDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#multipleModelMeasurementWindowDuration:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getSlidingLikelihoodWindow", "tail" : "(): Int", "member" : "com.github.ozancicek.artan.ml.filter.HasSlidingLikelihoodWindow.getSlidingLikelihoodWindow", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getSlidingLikelihoodWindow:Int", "kind" : "final def"}, {"label" : "slidingLikelihoodWindow", "tail" : ": IntParam", "member" : "com.github.ozancicek.artan.ml.filter.HasSlidingLikelihoodWindow.slidingLikelihoodWindow", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#slidingLikelihoodWindow:org.apache.spark.ml.param.IntParam", "kind" : "final val"}, {"label" : "getCalculateSlidingLikelihood", "tail" : "(): Boolean", "member" : "com.github.ozancicek.artan.ml.filter.HasCalculateSlidingLikelihood.getCalculateSlidingLikelihood", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getCalculateSlidingLikelihood:Boolean", "kind" : "final def"}, {"label" : "calculateSlidingLikelihood", "tail" : ": BooleanParam", "member" : "com.github.ozancicek.artan.ml.filter.HasCalculateSlidingLikelihood.calculateSlidingLikelihood", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#calculateSlidingLikelihood:org.apache.spark.ml.param.BooleanParam", "kind" : "final val"}, {"label" : "getCalculateLoglikelihood", "tail" : "(): Boolean", "member" : "com.github.ozancicek.artan.ml.filter.HasCalculateLoglikelihood.getCalculateLoglikelihood", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getCalculateLoglikelihood:Boolean", "kind" : "final def"}, {"label" : "calculateLoglikelihood", "tail" : ": BooleanParam", "member" : "com.github.ozancicek.artan.ml.filter.HasCalculateLoglikelihood.calculateLoglikelihood", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#calculateLoglikelihood:org.apache.spark.ml.param.BooleanParam", "kind" : "final val"}, {"label" : "getCalculateMahalanobis", "tail" : "(): Boolean", "member" : "com.github.ozancicek.artan.ml.filter.HasCalculateMahalanobis.getCalculateMahalanobis", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getCalculateMahalanobis:Boolean", "kind" : "final def"}, {"label" : "calculateMahalanobis", "tail" : ": BooleanParam", "member" : "com.github.ozancicek.artan.ml.filter.HasCalculateMahalanobis.calculateMahalanobis", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#calculateMahalanobis:org.apache.spark.ml.param.BooleanParam", "kind" : "final val"}, {"label" : "validateSchema", "tail" : "(schema: StructType): Unit", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.validateSchema", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#validateSchema(schema:org.apache.spark.sql.types.StructType):Unit", "kind" : "def"}, {"label" : "getControlFunctionExpr", "tail" : "(): Column", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.getControlFunctionExpr", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getControlFunctionExpr:org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "getControlExpr", "tail" : "(): Column", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.getControlExpr", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getControlExpr:org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "getMeasurementExpr", "tail" : "(): Column", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.getMeasurementExpr", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getMeasurementExpr:org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "setMeasurementSize", "tail" : "(value: Int): UnscentedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setMeasurementSize", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#setMeasurementSize(value:Int):ImplType", "kind" : "def"}, {"label" : "setStateSize", "tail" : "(value: Int): UnscentedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setStateSize", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#setStateSize(value:Int):ImplType", "kind" : "def"}, {"label" : "setMultiStepPredict", "tail" : "(value: Int): UnscentedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setMultiStepPredict", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#setMultiStepPredict(value:Int):ImplType", "kind" : "def"}, {"label" : "setOutputSystemMatrices", "tail" : "(): UnscentedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setOutputSystemMatrices", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#setOutputSystemMatrices:ImplType", "kind" : "def"}, {"label" : "setControlCol", "tail" : "(value: String): UnscentedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setControlCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#setControlCol(value:String):ImplType", "kind" : "def"}, {"label" : "setControlFunctionCol", "tail" : "(value: String): UnscentedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setControlFunctionCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#setControlFunctionCol(value:String):ImplType", "kind" : "def"}, {"label" : "setMeasurementNoiseCol", "tail" : "(value: String): UnscentedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setMeasurementNoiseCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#setMeasurementNoiseCol(value:String):ImplType", "kind" : "def"}, {"label" : "setMeasurementModelCol", "tail" : "(value: String): UnscentedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setMeasurementModelCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#setMeasurementModelCol(value:String):ImplType", "kind" : "def"}, {"label" : "setProcessNoiseCol", "tail" : "(value: String): UnscentedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setProcessNoiseCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#setProcessNoiseCol(value:String):ImplType", "kind" : "def"}, {"label" : "setProcessModelCol", "tail" : "(value: String): UnscentedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setProcessModelCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#setProcessModelCol(value:String):ImplType", "kind" : "def"}, {"label" : "setMeasurementCol", "tail" : "(value: String): UnscentedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setMeasurementCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#setMeasurementCol(value:String):ImplType", "kind" : "def"}, {"label" : "setMeasurementNoise", "tail" : "(value: Matrix): UnscentedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setMeasurementNoise", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#setMeasurementNoise(value:org.apache.spark.ml.linalg.Matrix):ImplType", "kind" : "def"}, {"label" : "setMeasurementModel", "tail" : "(value: Matrix): UnscentedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setMeasurementModel", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#setMeasurementModel(value:org.apache.spark.ml.linalg.Matrix):ImplType", "kind" : "def"}, {"label" : "setProcessNoise", "tail" : "(value: Matrix): UnscentedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setProcessNoise", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#setProcessNoise(value:org.apache.spark.ml.linalg.Matrix):ImplType", "kind" : "def"}, {"label" : "setProcessModel", "tail" : "(value: Matrix): UnscentedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setProcessModel", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#setProcessModel(value:org.apache.spark.ml.linalg.Matrix):ImplType", "kind" : "def"}, {"label" : "setFadingFactor", "tail" : "(value: Double): UnscentedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setFadingFactor", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#setFadingFactor(value:Double):ImplType", "kind" : "def"}, {"label" : "setInitialStateDistributionCol", "tail" : "(value: String): UnscentedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setInitialStateDistributionCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#setInitialStateDistributionCol(value:String):ImplType", "kind" : "def"}, {"label" : "setInitialStateCovarianceCol", "tail" : "(value: String): UnscentedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setInitialStateCovarianceCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#setInitialStateCovarianceCol(value:String):ImplType", "kind" : "def"}, {"label" : "setInitialStateCovariance", "tail" : "(value: Matrix): UnscentedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setInitialStateCovariance", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#setInitialStateCovariance(value:org.apache.spark.ml.linalg.Matrix):ImplType", "kind" : "def"}, {"label" : "setInitialStateMeanCol", "tail" : "(value: String): UnscentedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setInitialStateMeanCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#setInitialStateMeanCol(value:String):ImplType", "kind" : "def"}, {"label" : "setInitialStateMean", "tail" : "(value: Vector): UnscentedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.KalmanUpdateParams.setInitialStateMean", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#setInitialStateMean(value:org.apache.spark.ml.linalg.Vector):ImplType", "kind" : "def"}, {"label" : "getMeasurementSize", "tail" : "(): Int", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementSize.getMeasurementSize", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getMeasurementSize:Int", "kind" : "final def"}, {"label" : "measurementSize", "tail" : ": IntParam", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementSize.measurementSize", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#measurementSize:org.apache.spark.ml.param.IntParam", "kind" : "final val"}, {"label" : "getStateSize", "tail" : "(): Int", "member" : "com.github.ozancicek.artan.ml.filter.HasStateSize.getStateSize", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getStateSize:Int", "kind" : "final def"}, {"label" : "stateSize", "tail" : ": IntParam", "member" : "com.github.ozancicek.artan.ml.filter.HasStateSize.stateSize", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#stateSize:org.apache.spark.ml.param.IntParam", "kind" : "final val"}, {"label" : "getMultiStepPredict", "tail" : "(): Int", "member" : "com.github.ozancicek.artan.ml.filter.HasMultiStepPredict.getMultiStepPredict", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getMultiStepPredict:Int", "kind" : "final def"}, {"label" : "multiStepPredict", "tail" : ": IntParam", "member" : "com.github.ozancicek.artan.ml.filter.HasMultiStepPredict.multiStepPredict", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#multiStepPredict:org.apache.spark.ml.param.IntParam", "kind" : "final val"}, {"label" : "getOutputSystemMatrices", "tail" : "(): Boolean", "member" : "com.github.ozancicek.artan.ml.filter.HasOutputSystemMatrices.getOutputSystemMatrices", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getOutputSystemMatrices:Boolean", "kind" : "final def"}, {"label" : "outputSystemMatrices", "tail" : ": BooleanParam", "member" : "com.github.ozancicek.artan.ml.filter.HasOutputSystemMatrices.outputSystemMatrices", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#outputSystemMatrices:org.apache.spark.ml.param.BooleanParam", "kind" : "final val"}, {"label" : "getInitialStateDistributionCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateDistributionCol.getInitialStateDistributionCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getInitialStateDistributionCol:String", "kind" : "final def"}, {"label" : "initialStateDistributionCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateDistributionCol.initialStateDistributionCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#initialStateDistributionCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInitialStateCovarianceCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateCovarianceCol.getInitialStateCovarianceCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getInitialStateCovarianceCol:String", "kind" : "final def"}, {"label" : "initialStateCovarianceCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateCovarianceCol.initialStateCovarianceCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#initialStateCovarianceCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getInitialStateMeanCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateMeanCol.getInitialStateMeanCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getInitialStateMeanCol:String", "kind" : "final def"}, {"label" : "initialStateMeanCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateMeanCol.initialStateMeanCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#initialStateMeanCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getFadingFactor", "tail" : "(): Double", "member" : "com.github.ozancicek.artan.ml.filter.HasFadingFactor.getFadingFactor", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getFadingFactor:Double", "kind" : "final def"}, {"label" : "fadingFactor", "tail" : ": DoubleParam", "member" : "com.github.ozancicek.artan.ml.filter.HasFadingFactor.fadingFactor", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#fadingFactor:org.apache.spark.ml.param.DoubleParam", "kind" : "final val"}, {"label" : "getInitialStateCovariance", "tail" : "(): Matrix", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateCovariance.getInitialStateCovariance", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getInitialStateCovariance:org.apache.spark.ml.linalg.Matrix", "kind" : "final def"}, {"label" : "initialStateCovariance", "tail" : ": Param[Matrix]", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateCovariance.initialStateCovariance", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#initialStateCovariance:org.apache.spark.ml.param.Param[org.apache.spark.ml.linalg.Matrix]", "kind" : "final val"}, {"label" : "getInitialStateMean", "tail" : "(): Vector", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateMean.getInitialStateMean", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getInitialStateMean:org.apache.spark.ml.linalg.Vector", "kind" : "final def"}, {"label" : "initialStateMean", "tail" : ": Param[Vector]", "member" : "com.github.ozancicek.artan.ml.filter.HasInitialStateMean.initialStateMean", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#initialStateMean:org.apache.spark.ml.param.Param[org.apache.spark.ml.linalg.Vector]", "kind" : "final val"}, {"label" : "getMeasurementNoise", "tail" : "(): Matrix", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementNoise.getMeasurementNoise", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getMeasurementNoise:org.apache.spark.ml.linalg.Matrix", "kind" : "final def"}, {"label" : "measurementNoise", "tail" : ": Param[Matrix]", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementNoise.measurementNoise", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#measurementNoise:org.apache.spark.ml.param.Param[org.apache.spark.ml.linalg.Matrix]", "kind" : "final val"}, {"label" : "getProcessNoise", "tail" : "(): Matrix", "member" : "com.github.ozancicek.artan.ml.filter.HasProcessNoise.getProcessNoise", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getProcessNoise:org.apache.spark.ml.linalg.Matrix", "kind" : "final def"}, {"label" : "processNoise", "tail" : ": Param[Matrix]", "member" : "com.github.ozancicek.artan.ml.filter.HasProcessNoise.processNoise", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#processNoise:org.apache.spark.ml.param.Param[org.apache.spark.ml.linalg.Matrix]", "kind" : "final val"}, {"label" : "getMeasurementModel", "tail" : "(): Matrix", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementModel.getMeasurementModel", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getMeasurementModel:org.apache.spark.ml.linalg.Matrix", "kind" : "final def"}, {"label" : "measurementModel", "tail" : ": Param[Matrix]", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementModel.measurementModel", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#measurementModel:org.apache.spark.ml.param.Param[org.apache.spark.ml.linalg.Matrix]", "kind" : "final val"}, {"label" : "getProcessModel", "tail" : "(): Matrix", "member" : "com.github.ozancicek.artan.ml.filter.HasProcessModel.getProcessModel", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getProcessModel:org.apache.spark.ml.linalg.Matrix", "kind" : "final def"}, {"label" : "processModel", "tail" : ": Param[Matrix]", "member" : "com.github.ozancicek.artan.ml.filter.HasProcessModel.processModel", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#processModel:org.apache.spark.ml.param.Param[org.apache.spark.ml.linalg.Matrix]", "kind" : "final val"}, {"label" : "getControlFunctionCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasControlFunctionCol.getControlFunctionCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getControlFunctionCol:String", "kind" : "final def"}, {"label" : "controlFunctionCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasControlFunctionCol.controlFunctionCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#controlFunctionCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getControlCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasControlCol.getControlCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getControlCol:String", "kind" : "final def"}, {"label" : "controlCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasControlCol.controlCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#controlCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getProcessNoiseCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasProcessNoiseCol.getProcessNoiseCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getProcessNoiseCol:String", "kind" : "final def"}, {"label" : "processNoiseCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasProcessNoiseCol.processNoiseCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#processNoiseCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getProcessModelCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasProcessModelCol.getProcessModelCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getProcessModelCol:String", "kind" : "final def"}, {"label" : "processModelCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasProcessModelCol.processModelCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#processModelCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getMeasurementNoiseCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementNoiseCol.getMeasurementNoiseCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getMeasurementNoiseCol:String", "kind" : "final def"}, {"label" : "measurementNoiseCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementNoiseCol.measurementNoiseCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#measurementNoiseCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getMeasurementModelCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementModelCol.getMeasurementModelCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getMeasurementModelCol:String", "kind" : "final def"}, {"label" : "measurementModelCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementModelCol.measurementModelCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#measurementModelCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getMeasurementCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementCol.getMeasurementCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getMeasurementCol:String", "kind" : "final def"}, {"label" : "measurementCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.filter.HasMeasurementCol.measurementCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#measurementCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "transformWithState", "tail" : "(in: DataFrame)(keyEncoder: Encoder[String]): Dataset[KalmanOutput]", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.transformWithState", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#transformWithState(in:org.apache.spark.sql.DataFrame)(implicitkeyEncoder:org.apache.spark.sql.Encoder[GroupKeyType]):org.apache.spark.sql.Dataset[OutType]", "kind" : "def"}, {"label" : "getLinalgOptions", "tail" : "(): LinalgOptions", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.getLinalgOptions", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getLinalgOptions:com.github.ozancicek.artan.ml.linalg.LinalgOptions", "kind" : "def"}, {"label" : "getUDFWithDefault", "tail" : "(defaultParam: Param[DefaultType], colParam: Param[String])(arg0: scala.reflect.api.JavaUniverse.TypeTag[DefaultType]): Column", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.getUDFWithDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getUDFWithDefault[DefaultType](defaultParam:org.apache.spark.ml.param.Param[DefaultType],colParam:org.apache.spark.ml.param.Param[String])(implicitevidence$5:reflect.runtime.universe.TypeTag[DefaultType]):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "validateWatermarkColumns", "tail" : "(schema: StructType): Unit", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.validateWatermarkColumns", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#validateWatermarkColumns(schema:org.apache.spark.sql.types.StructType):Unit", "kind" : "def"}, {"label" : "outEncoder", "tail" : ": Encoder[KalmanOutput]", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.outEncoder", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#outEncoder:org.apache.spark.sql.Encoder[OutType]", "kind" : "implicit val"}, {"label" : "rowEncoder", "tail" : ": Encoder[KalmanInput]", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.rowEncoder", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#rowEncoder:org.apache.spark.sql.Encoder[RowType]", "kind" : "implicit val"}, {"label" : "stateEncoder", "tail" : ": Encoder[KalmanState]", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.stateEncoder", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#stateEncoder:org.apache.spark.sql.Encoder[StateType]", "kind" : "implicit val"}, {"label" : "keyFunc", "tail" : "(): (KalmanInput) ⇒ String", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformer.keyFunc", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#keyFunc:RowType=>GroupKeyType", "kind" : "def"}, {"label" : "setWatermarkDuration", "tail" : "(value: String): UnscentedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformerParams.setWatermarkDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#setWatermarkDuration(value:String):ImplType", "kind" : "def"}, {"label" : "setEventTimeCol", "tail" : "(value: String): UnscentedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformerParams.setEventTimeCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#setEventTimeCol(value:String):ImplType", "kind" : "def"}, {"label" : "setStateTimeoutDuration", "tail" : "(value: String): UnscentedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformerParams.setStateTimeoutDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#setStateTimeoutDuration(value:String):ImplType", "kind" : "def"}, {"label" : "setStateTimeoutMode", "tail" : "(value: String): UnscentedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformerParams.setStateTimeoutMode", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#setStateTimeoutMode(value:String):ImplType", "kind" : "def"}, {"label" : "setStateKeyCol", "tail" : "(value: String): UnscentedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.state.StatefulTransformerParams.setStateKeyCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#setStateKeyCol(value:String):ImplType", "kind" : "def"}, {"label" : "getStateTimeoutDuration", "tail" : "(): Option[String]", "member" : "com.github.ozancicek.artan.ml.state.HasStateTimeoutDuration.getStateTimeoutDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getStateTimeoutDuration:Option[String]", "kind" : "def"}, {"label" : "stateTimeoutDuration", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.state.HasStateTimeoutDuration.stateTimeoutDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#stateTimeoutDuration:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getStateKeyColumn", "tail" : "(): Column", "member" : "com.github.ozancicek.artan.ml.state.HasStateKeyCol.getStateKeyColumn", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getStateKeyColumn:org.apache.spark.sql.Column", "kind" : "final def"}, {"label" : "getStateKeyColname", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.state.HasStateKeyCol.getStateKeyColname", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getStateKeyColname:String", "kind" : "final def"}, {"label" : "stateKeyCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.state.HasStateKeyCol.stateKeyCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#stateKeyCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getWatermarkDuration", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.state.HasWatermarkDuration.getWatermarkDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getWatermarkDuration:String", "kind" : "def"}, {"label" : "watermarkDuration", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.state.HasWatermarkDuration.watermarkDuration", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#watermarkDuration:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getEventTimeCol", "tail" : "(): String", "member" : "com.github.ozancicek.artan.ml.state.HasEventTimeCol.getEventTimeCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getEventTimeCol:String", "kind" : "def"}, {"label" : "eventTimeCol", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.state.HasEventTimeCol.eventTimeCol", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#eventTimeCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getTimeoutMode", "tail" : "(): TimeoutMode", "member" : "com.github.ozancicek.artan.ml.state.HasStateTimeoutMode.getTimeoutMode", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getTimeoutMode:com.github.ozancicek.artan.ml.state.TimeoutMode", "kind" : "def"}, {"label" : "timeoutMode", "tail" : ": Param[String]", "member" : "com.github.ozancicek.artan.ml.state.HasStateTimeoutMode.timeoutMode", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#timeoutMode:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#transform(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#transform(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): UnscentedKalmanFilter.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): UnscentedKalmanFilter.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): UnscentedKalmanFilter.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): UnscentedKalmanFilter.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): UnscentedKalmanFilter.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): UnscentedKalmanFilter.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "load", "tail" : "(path: String): UnscentedKalmanFilter", "member" : "com.github.ozancicek.artan.ml.filter.UnscentedKalmanFilter.load", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter$.html#load(path:String):com.github.ozancicek.artan.ml.filter.UnscentedKalmanFilter", "kind" : "def"}, {"label" : "read", "tail" : "(): MLReader[UnscentedKalmanFilter]", "member" : "org.apache.spark.ml.util.DefaultParamsReadable.read", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter$.html#read:org.apache.spark.ml.util.MLReader[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/ozancicek\/artan\/ml\/filter\/UnscentedKalmanFilter.html", "kind" : "class"}], "com" : [], "com.github" : []};